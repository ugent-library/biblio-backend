/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/app.js":
/*!**************************!*\
  !*** ./assets/js/app.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ui_check_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ui/check.js */ \"./assets/js/ui/check.js\");\n/* harmony import */ var _ui_bootstrap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ui/bootstrap.js */ \"./assets/js/ui/bootstrap.js\");\n/* harmony import */ var _ui_multiple_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ui/multiple.js */ \"./assets/js/ui/multiple.js\");\n/* harmony import */ var _ui_header_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui/header.js */ \"./assets/js/ui/header.js\");\n/* harmony import */ var _ui_form_submit_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ui/form_submit.js */ \"./assets/js/ui/form_submit.js\");\n\n\n\n\n\n(0,_ui_bootstrap_js__WEBPACK_IMPORTED_MODULE_1__.default)();\n(0,_ui_check_js__WEBPACK_IMPORTED_MODULE_0__.default)();\n(0,_ui_multiple_js__WEBPACK_IMPORTED_MODULE_2__.default)();\n(0,_ui_header_js__WEBPACK_IMPORTED_MODULE_3__.default)();\n(0,_ui_form_submit_js__WEBPACK_IMPORTED_MODULE_4__.default)();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvYXBwLmpzPzllMGUiXSwibmFtZXMiOlsiYm9vdHN0cmFwIiwiY2hlY2siLCJtdWx0aXBsZSIsImhlYWRlciIsInN1Ym1pdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBQSx5REFBUztBQUNUQyxxREFBSztBQUNMQyx3REFBUTtBQUNSQyxzREFBTTtBQUNOQywyREFBTSIsImZpbGUiOiIuL2Fzc2V0cy9qcy9hcHAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hlY2sgZnJvbSAnLi91aS9jaGVjay5qcydcbmltcG9ydCBib290c3RyYXAgZnJvbSAnLi91aS9ib290c3RyYXAuanMnXG5pbXBvcnQgbXVsdGlwbGUgZnJvbSAnLi91aS9tdWx0aXBsZS5qcydcbmltcG9ydCBoZWFkZXIgZnJvbSAnLi91aS9oZWFkZXIuanMnXG5pbXBvcnQgc3VibWl0IGZyb20gJy4vdWkvZm9ybV9zdWJtaXQuanMnXG5cbmJvb3RzdHJhcCgpXG5jaGVjaygpXG5tdWx0aXBsZSgpXG5oZWFkZXIoKVxuc3VibWl0KCkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/app.js\n");

/***/ }),

/***/ "./assets/js/ui/bootstrap.js":
/*!***********************************!*\
  !*** ./assets/js/ui/bootstrap.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var htmx_org__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! htmx.org */ \"./node_modules/htmx.org/dist/htmx.min.js\");\n/* harmony import */ var htmx_org__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(htmx_org__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bootstrap_native_dist_bootstrap_native_v4__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bootstrap.native/dist/bootstrap-native-v4 */ \"./node_modules/bootstrap.native/dist/bootstrap-native-v4.js\");\n/* harmony import */ var bootstrap_native_dist_bootstrap_native_v4__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bootstrap_native_dist_bootstrap_native_v4__WEBPACK_IMPORTED_MODULE_1__);\n\n\n/**\n * Initialize Bootstrap Native after HTMX has settled the DOM.\n *\n * When HTMX is executed, the updated parts of the DOM won't be\n * registered with Bootstrap Native. Elements like i.e. popovers,\n * alerts, tooltips,... won't work passed via HTMX won't work.\n * This function re-initializes Bootstrap Native on the updated DOM.\n */\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  htmx_org__WEBPACK_IMPORTED_MODULE_0___default().on(\"htmx:afterSettle\", function (evt) {\n    bootstrap_native_dist_bootstrap_native_v4__WEBPACK_IMPORTED_MODULE_1___default().initCallback();\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvdWkvYm9vdHN0cmFwLmpzPzFlZTMiXSwibmFtZXMiOlsiaHRteCIsImV2dCIsIkJTTiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSw2QkFBZSxzQ0FBVztBQUN0QkEsb0RBQUEsQ0FBUSxrQkFBUixFQUE0QixVQUFTQyxHQUFULEVBQWM7QUFDdENDLGlHQUFBO0FBQ0gsR0FGRDtBQUdIIiwiZmlsZSI6Ii4vYXNzZXRzL2pzL3VpL2Jvb3RzdHJhcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBodG14IGZyb20gJ2h0bXgub3JnJztcbmltcG9ydCBCU04gZnJvbSBcImJvb3RzdHJhcC5uYXRpdmUvZGlzdC9ib290c3RyYXAtbmF0aXZlLXY0XCI7XG5cbi8qKlxuICogSW5pdGlhbGl6ZSBCb290c3RyYXAgTmF0aXZlIGFmdGVyIEhUTVggaGFzIHNldHRsZWQgdGhlIERPTS5cbiAqXG4gKiBXaGVuIEhUTVggaXMgZXhlY3V0ZWQsIHRoZSB1cGRhdGVkIHBhcnRzIG9mIHRoZSBET00gd29uJ3QgYmVcbiAqIHJlZ2lzdGVyZWQgd2l0aCBCb290c3RyYXAgTmF0aXZlLiBFbGVtZW50cyBsaWtlIGkuZS4gcG9wb3ZlcnMsXG4gKiBhbGVydHMsIHRvb2x0aXBzLC4uLiB3b24ndCB3b3JrIHBhc3NlZCB2aWEgSFRNWCB3b24ndCB3b3JrLlxuICogVGhpcyBmdW5jdGlvbiByZS1pbml0aWFsaXplcyBCb290c3RyYXAgTmF0aXZlIG9uIHRoZSB1cGRhdGVkIERPTS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gICAgaHRteC5vbihcImh0bXg6YWZ0ZXJTZXR0bGVcIiwgZnVuY3Rpb24oZXZ0KSB7XG4gICAgICAgIEJTTi5pbml0Q2FsbGJhY2soKVxuICAgIH0pO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/ui/bootstrap.js\n");

/***/ }),

/***/ "./assets/js/ui/check.js":
/*!*******************************!*\
  !*** ./assets/js/ui/check.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  var formCheckAll = function formCheckAll(evt) {\n    var form = evt.target.closest(\"form\");\n    var chks = form.querySelectorAll(\"input[type='checkbox']\");\n    chks.forEach(function (el) {\n      return el.checked = true;\n    });\n  };\n\n  document.querySelectorAll(\"button.form-check-all\").forEach(function (el) {\n    return el.addEventListener(\"click\", formCheckAll);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvdWkvY2hlY2suanM/MDI1NSJdLCJuYW1lcyI6WyJmb3JtQ2hlY2tBbGwiLCJldnQiLCJmb3JtIiwidGFyZ2V0IiwiY2xvc2VzdCIsImNoa3MiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImVsIiwiY2hlY2tlZCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDZCQUFlLHNDQUFXO0FBQ3RCLE1BQUlBLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQVVDLEdBQVYsRUFBZTtBQUM5QixRQUFJQyxJQUFJLEdBQUdELEdBQUcsQ0FBQ0UsTUFBSixDQUFXQyxPQUFYLENBQW1CLE1BQW5CLENBQVg7QUFDQSxRQUFJQyxJQUFJLEdBQUdILElBQUksQ0FBQ0ksZ0JBQUwsQ0FBc0Isd0JBQXRCLENBQVg7QUFDQUQsUUFBSSxDQUFDRSxPQUFMLENBQWEsVUFBQUMsRUFBRTtBQUFBLGFBQ1hBLEVBQUUsQ0FBQ0MsT0FBSCxHQUFhLElBREY7QUFBQSxLQUFmO0FBR0gsR0FORDs7QUFRQUMsVUFBUSxDQUFDSixnQkFBVCxDQUEwQix1QkFBMUIsRUFBbURDLE9BQW5ELENBQTJELFVBQUFDLEVBQUU7QUFBQSxXQUN6REEsRUFBRSxDQUFDRyxnQkFBSCxDQUFvQixPQUFwQixFQUE2QlgsWUFBN0IsQ0FEeUQ7QUFBQSxHQUE3RDtBQUdIIiwiZmlsZSI6Ii4vYXNzZXRzL2pzL3VpL2NoZWNrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oKSB7XG4gICAgbGV0IGZvcm1DaGVja0FsbCA9IGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgbGV0IGZvcm0gPSBldnQudGFyZ2V0LmNsb3Nlc3QoXCJmb3JtXCIpXG4gICAgICAgIGxldCBjaGtzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbdHlwZT0nY2hlY2tib3gnXVwiKVxuICAgICAgICBjaGtzLmZvckVhY2goZWwgPT5cbiAgICAgICAgICAgIGVsLmNoZWNrZWQgPSB0cnVlXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiYnV0dG9uLmZvcm0tY2hlY2stYWxsXCIpLmZvckVhY2goZWwgPT5cbiAgICAgICAgZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZvcm1DaGVja0FsbClcbiAgICApXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/ui/check.js\n");

/***/ }),

/***/ "./assets/js/ui/form_submit.js":
/*!*************************************!*\
  !*** ./assets/js/ui/form_submit.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var htmx_org__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! htmx.org */ \"./node_modules/htmx.org/dist/htmx.min.js\");\n/* harmony import */ var htmx_org__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(htmx_org__WEBPACK_IMPORTED_MODULE_0__);\n // import BSN from \"bootstrap.native/dist/bootstrap-native-v4\";\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  // Compose a spinner element\n  function createSpinner() {\n    var spinner = document.createElement(\"div\");\n    spinner.classList.add('spinner-border');\n    var text = document.createElement(\"span\");\n    text.classList.add(\"sr-only\");\n    var cta = document.createTextNode(\"Loading...\");\n    text.appendChild(cta);\n    spinner.appendChild(text);\n    return spinner;\n  } // On submit, disable the cancel / save buttons & set the spinner\n\n\n  function formSubmit(form) {\n    var submitButton = form.querySelector('.btn-save');\n    var cancelButton = form.querySelector('.btn-cancel'); // Load the spinner when the button is clicked\n\n    htmx_org__WEBPACK_IMPORTED_MODULE_0___default().on(submitButton, \"click\", function (evt) {\n      var spinner = createSpinner();\n      submitButton.after(spinner);\n    }); // Disable the buttons after HTMX has started, but before the XHR request is\n    // dispatched. Doing this on the 'click' event blocks triggering the HTMX lifecycle.\n    //\n    // See: https://github.com/bigskysoftware/htmx/issues/394\n\n    htmx_org__WEBPACK_IMPORTED_MODULE_0___default().on(\"htmx:beforeRequest\", function (evt) {\n      submitButton.setAttribute(\"disabled\", \"\");\n      cancelButton.setAttribute(\"disabled\", \"\");\n    });\n  } // After submission, auto-dismiss all alerts after 10 seconds.\n  // TODO: if 2 consecutive save actions happen within the 10 second interval,\n  //    the first displayed alert will be destroyed by HTMX, causing the setTimeout\n  //    to trigger a runtime error as it tries to apply a BSN.alert on a non-existing\n  //    element.\n  // function closeAlerts() {\n  //     let alerts = document.querySelectorAll('.alert')\n  //     alerts.forEach((el) => {\n  //         setTimeout(() => {\n  //             let alert = new BSN.Alert(el)\n  //             alert.close()\n  //         }, 10000)\n  //     })\n  // }\n  // Init event listeners whenever HTMX swaps in a card-collapsible having a form element.\n\n\n  htmx_org__WEBPACK_IMPORTED_MODULE_0___default().on(\"htmx:afterSettle\", function (evt) {\n    var item = evt.detail.target.children.item(0);\n\n    if (item && item.nodeName && item.nodeName.toLowerCase() == \"form\") {\n      formSubmit(item);\n    } else {// closeAlerts()\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvdWkvZm9ybV9zdWJtaXQuanM/ZDg3OSJdLCJuYW1lcyI6WyJjcmVhdGVTcGlubmVyIiwic3Bpbm5lciIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsInRleHQiLCJjdGEiLCJjcmVhdGVUZXh0Tm9kZSIsImFwcGVuZENoaWxkIiwiZm9ybVN1Ym1pdCIsImZvcm0iLCJzdWJtaXRCdXR0b24iLCJxdWVyeVNlbGVjdG9yIiwiY2FuY2VsQnV0dG9uIiwiaHRteCIsImV2dCIsImFmdGVyIiwic2V0QXR0cmlidXRlIiwiaXRlbSIsImRldGFpbCIsInRhcmdldCIsImNoaWxkcmVuIiwibm9kZU5hbWUiLCJ0b0xvd2VyQ2FzZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0NBQ0E7O0FBRUEsNkJBQWUsc0NBQVc7QUFFdEI7QUFDQSxXQUFTQSxhQUFULEdBQXlCO0FBQ3JCLFFBQU1DLE9BQU8sR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQWhCO0FBQ0FGLFdBQU8sQ0FBQ0csU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IsZ0JBQXRCO0FBRUEsUUFBTUMsSUFBSSxHQUFHSixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBYjtBQUNBRyxRQUFJLENBQUNGLFNBQUwsQ0FBZUMsR0FBZixDQUFtQixTQUFuQjtBQUNBLFFBQUlFLEdBQUcsR0FBR0wsUUFBUSxDQUFDTSxjQUFULENBQXdCLFlBQXhCLENBQVY7QUFDQUYsUUFBSSxDQUFDRyxXQUFMLENBQWlCRixHQUFqQjtBQUVBTixXQUFPLENBQUNRLFdBQVIsQ0FBb0JILElBQXBCO0FBRUEsV0FBT0wsT0FBUDtBQUNILEdBZnFCLENBaUJ0Qjs7O0FBQ0EsV0FBU1MsVUFBVCxDQUFvQkMsSUFBcEIsRUFBMEI7QUFDdEIsUUFBTUMsWUFBWSxHQUFHRCxJQUFJLENBQUNFLGFBQUwsQ0FBbUIsV0FBbkIsQ0FBckI7QUFDQSxRQUFNQyxZQUFZLEdBQUdILElBQUksQ0FBQ0UsYUFBTCxDQUFtQixhQUFuQixDQUFyQixDQUZzQixDQUl0Qjs7QUFDQUUsc0RBQUEsQ0FBUUgsWUFBUixFQUFzQixPQUF0QixFQUErQixVQUFTSSxHQUFULEVBQWM7QUFDekMsVUFBTWYsT0FBTyxHQUFHRCxhQUFhLEVBQTdCO0FBQ0FZLGtCQUFZLENBQUNLLEtBQWIsQ0FBbUJoQixPQUFuQjtBQUNILEtBSEQsRUFMc0IsQ0FVdEI7QUFDQTtBQUNBO0FBQ0E7O0FBQ0FjLHNEQUFBLENBQVEsb0JBQVIsRUFBOEIsVUFBU0MsR0FBVCxFQUFjO0FBQ3hDSixrQkFBWSxDQUFDTSxZQUFiLENBQTBCLFVBQTFCLEVBQXNDLEVBQXRDO0FBQ0FKLGtCQUFZLENBQUNJLFlBQWIsQ0FBMEIsVUFBMUIsRUFBc0MsRUFBdEM7QUFDSCxLQUhEO0FBSUgsR0FwQ3FCLENBc0N0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7OztBQUNBSCxvREFBQSxDQUFRLGtCQUFSLEVBQTRCLFVBQVNDLEdBQVQsRUFBYztBQUN0QyxRQUFJRyxJQUFJLEdBQUdILEdBQUcsQ0FBQ0ksTUFBSixDQUFXQyxNQUFYLENBQWtCQyxRQUFsQixDQUEyQkgsSUFBM0IsQ0FBZ0MsQ0FBaEMsQ0FBWDs7QUFDQSxRQUFJQSxJQUFJLElBQUlBLElBQUksQ0FBQ0ksUUFBYixJQUEwQkosSUFBSSxDQUFDSSxRQUFMLENBQWNDLFdBQWQsTUFBK0IsTUFBN0QsRUFBc0U7QUFDbEVkLGdCQUFVLENBQUNTLElBQUQsQ0FBVjtBQUNILEtBRkQsTUFFTyxDQUNIO0FBQ0g7QUFDSixHQVBEO0FBUUgiLCJmaWxlIjoiLi9hc3NldHMvanMvdWkvZm9ybV9zdWJtaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHRteCBmcm9tICdodG14Lm9yZyc7XG4vLyBpbXBvcnQgQlNOIGZyb20gXCJib290c3RyYXAubmF0aXZlL2Rpc3QvYm9vdHN0cmFwLW5hdGl2ZS12NFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcblxuICAgIC8vIENvbXBvc2UgYSBzcGlubmVyIGVsZW1lbnRcbiAgICBmdW5jdGlvbiBjcmVhdGVTcGlubmVyKCkge1xuICAgICAgICBjb25zdCBzcGlubmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxuICAgICAgICBzcGlubmVyLmNsYXNzTGlzdC5hZGQoJ3NwaW5uZXItYm9yZGVyJylcblxuICAgICAgICBjb25zdCB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIilcbiAgICAgICAgdGV4dC5jbGFzc0xpc3QuYWRkKFwic3Itb25seVwiKVxuICAgICAgICBsZXQgY3RhID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJMb2FkaW5nLi4uXCIpXG4gICAgICAgIHRleHQuYXBwZW5kQ2hpbGQoY3RhKVxuXG4gICAgICAgIHNwaW5uZXIuYXBwZW5kQ2hpbGQodGV4dClcblxuICAgICAgICByZXR1cm4gc3Bpbm5lclxuICAgIH1cblxuICAgIC8vIE9uIHN1Ym1pdCwgZGlzYWJsZSB0aGUgY2FuY2VsIC8gc2F2ZSBidXR0b25zICYgc2V0IHRoZSBzcGlubmVyXG4gICAgZnVuY3Rpb24gZm9ybVN1Ym1pdChmb3JtKSB7XG4gICAgICAgIGNvbnN0IHN1Ym1pdEJ1dHRvbiA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmJ0bi1zYXZlJylcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0gZm9ybS5xdWVyeVNlbGVjdG9yKCcuYnRuLWNhbmNlbCcpXG5cbiAgICAgICAgLy8gTG9hZCB0aGUgc3Bpbm5lciB3aGVuIHRoZSBidXR0b24gaXMgY2xpY2tlZFxuICAgICAgICBodG14Lm9uKHN1Ym1pdEJ1dHRvbiwgXCJjbGlja1wiLCBmdW5jdGlvbihldnQpIHtcbiAgICAgICAgICAgIGNvbnN0IHNwaW5uZXIgPSBjcmVhdGVTcGlubmVyKClcbiAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5hZnRlcihzcGlubmVyKVxuICAgICAgICB9KVxuXG4gICAgICAgIC8vIERpc2FibGUgdGhlIGJ1dHRvbnMgYWZ0ZXIgSFRNWCBoYXMgc3RhcnRlZCwgYnV0IGJlZm9yZSB0aGUgWEhSIHJlcXVlc3QgaXNcbiAgICAgICAgLy8gZGlzcGF0Y2hlZC4gRG9pbmcgdGhpcyBvbiB0aGUgJ2NsaWNrJyBldmVudCBibG9ja3MgdHJpZ2dlcmluZyB0aGUgSFRNWCBsaWZlY3ljbGUuXG4gICAgICAgIC8vXG4gICAgICAgIC8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2JpZ3NreXNvZnR3YXJlL2h0bXgvaXNzdWVzLzM5NFxuICAgICAgICBodG14Lm9uKFwiaHRteDpiZWZvcmVSZXF1ZXN0XCIsIGZ1bmN0aW9uKGV2dCkge1xuICAgICAgICAgICAgc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiXCIpXG4gICAgICAgICAgICBjYW5jZWxCdXR0b24uc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJcIilcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBBZnRlciBzdWJtaXNzaW9uLCBhdXRvLWRpc21pc3MgYWxsIGFsZXJ0cyBhZnRlciAxMCBzZWNvbmRzLlxuICAgIC8vIFRPRE86IGlmIDIgY29uc2VjdXRpdmUgc2F2ZSBhY3Rpb25zIGhhcHBlbiB3aXRoaW4gdGhlIDEwIHNlY29uZCBpbnRlcnZhbCxcbiAgICAvLyAgICB0aGUgZmlyc3QgZGlzcGxheWVkIGFsZXJ0IHdpbGwgYmUgZGVzdHJveWVkIGJ5IEhUTVgsIGNhdXNpbmcgdGhlIHNldFRpbWVvdXRcbiAgICAvLyAgICB0byB0cmlnZ2VyIGEgcnVudGltZSBlcnJvciBhcyBpdCB0cmllcyB0byBhcHBseSBhIEJTTi5hbGVydCBvbiBhIG5vbi1leGlzdGluZ1xuICAgIC8vICAgIGVsZW1lbnQuXG4gICAgLy8gZnVuY3Rpb24gY2xvc2VBbGVydHMoKSB7XG4gICAgLy8gICAgIGxldCBhbGVydHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWxlcnQnKVxuICAgIC8vICAgICBhbGVydHMuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAvLyAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgIC8vICAgICAgICAgICAgIGxldCBhbGVydCA9IG5ldyBCU04uQWxlcnQoZWwpXG4gICAgLy8gICAgICAgICAgICAgYWxlcnQuY2xvc2UoKVxuICAgIC8vICAgICAgICAgfSwgMTAwMDApXG4gICAgLy8gICAgIH0pXG4gICAgLy8gfVxuXG4gICAgLy8gSW5pdCBldmVudCBsaXN0ZW5lcnMgd2hlbmV2ZXIgSFRNWCBzd2FwcyBpbiBhIGNhcmQtY29sbGFwc2libGUgaGF2aW5nIGEgZm9ybSBlbGVtZW50LlxuICAgIGh0bXgub24oXCJodG14OmFmdGVyU2V0dGxlXCIsIGZ1bmN0aW9uKGV2dCkge1xuICAgICAgICBsZXQgaXRlbSA9IGV2dC5kZXRhaWwudGFyZ2V0LmNoaWxkcmVuLml0ZW0oMClcbiAgICAgICAgaWYgKGl0ZW0gJiYgaXRlbS5ub2RlTmFtZSAmJiAoaXRlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09IFwiZm9ybVwiKSkge1xuICAgICAgICAgICAgZm9ybVN1Ym1pdChpdGVtKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gY2xvc2VBbGVydHMoKVxuICAgICAgICB9XG4gICAgfSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/ui/form_submit.js\n");

/***/ }),

/***/ "./assets/js/ui/header.js":
/*!********************************!*\
  !*** ./assets/js/ui/header.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Collapsible header.\n *\n * Collapsible header is used for hiding / showing the summary of a\n * publication on the edit forms. The state of the header (hidden / shown)\n * is persisted across page reloads via the browsers local storage.\n */\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  var Header = /*#__PURE__*/function () {\n    function Header(el) {\n      _classCallCheck(this, Header);\n\n      this.el = el;\n      this.collapsers = el.querySelectorAll('.c-header-collapse-trigger');\n      this.collapsed = false;\n      this.init();\n    }\n\n    _createClass(Header, [{\n      key: \"init\",\n      value: function init() {\n        var _this$collapsers,\n            _this = this;\n\n        try {\n          var savedState = JSON.parse(localStorage.getItem(HEADER_STATE_STORAGE_KEY));\n          headerState = Object.assign({}, headerState, savedState);\n        } catch (err) {\n          console.warn('There was an error parsing the saved state for the prototype navigation.');\n        } // Handle state on page load: open/close nav and close saved modules\n\n\n        if (headerState.isExpanded) {\n          this.show();\n        } else {\n          this.hide();\n        }\n\n        (_this$collapsers = this.collapsers) === null || _this$collapsers === void 0 ? void 0 : _this$collapsers.forEach(function (collapser) {\n          return collapser.addEventListener('click', _this);\n        });\n      }\n    }, {\n      key: \"handleEvent\",\n      value: function handleEvent(event) {\n        this.toggle(event);\n      }\n    }, {\n      key: \"toggle\",\n      value: function toggle(event) {\n        if (this.collapsed) this.show();else if (!this.collapsed) this.hide();\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        this.el.dataset.collapsed = false;\n        this.collapsed = false;\n        headerState.isExpanded = true;\n        this.saveNavState();\n      }\n    }, {\n      key: \"saveNavState\",\n      value: function saveNavState() {\n        localStorage.setItem(HEADER_STATE_STORAGE_KEY, JSON.stringify(headerState));\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        this.el.dataset.collapsed = true;\n        this.collapsed = true;\n        headerState.isExpanded = false;\n        this.saveNavState();\n      }\n    }]);\n\n    return Header;\n  }();\n\n  var headerState = {\n    isExpanded: false\n  };\n  var collapsibleHeaders = document.querySelectorAll('.c-header-collapsible');\n  var HEADER_STATE_STORAGE_KEY = \"bedrockheaderState\";\n  if (collapsibleHeaders.length) _toConsumableArray(collapsibleHeaders).map(function (collapsibleHeader) {\n    return new Header(collapsibleHeader);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvdWkvaGVhZGVyLmpzPzZmZmIiXSwibmFtZXMiOlsiSGVhZGVyIiwiZWwiLCJjb2xsYXBzZXJzIiwicXVlcnlTZWxlY3RvckFsbCIsImNvbGxhcHNlZCIsImluaXQiLCJzYXZlZFN0YXRlIiwiSlNPTiIsInBhcnNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkhFQURFUl9TVEFURV9TVE9SQUdFX0tFWSIsImhlYWRlclN0YXRlIiwiT2JqZWN0IiwiYXNzaWduIiwiZXJyIiwiY29uc29sZSIsIndhcm4iLCJpc0V4cGFuZGVkIiwic2hvdyIsImhpZGUiLCJmb3JFYWNoIiwiY29sbGFwc2VyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidG9nZ2xlIiwiZGF0YXNldCIsInNhdmVOYXZTdGF0ZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJjb2xsYXBzaWJsZUhlYWRlcnMiLCJkb2N1bWVudCIsImxlbmd0aCIsIm1hcCIsImNvbGxhcHNpYmxlSGVhZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBZSxzQ0FBVztBQUFBLE1BQ2pCQSxNQURpQjtBQUV0QixvQkFBWUMsRUFBWixFQUFnQjtBQUFBOztBQUNkLFdBQUtBLEVBQUwsR0FBVUEsRUFBVjtBQUNBLFdBQUtDLFVBQUwsR0FBa0JELEVBQUUsQ0FBQ0UsZ0JBQUgsQ0FBb0IsNEJBQXBCLENBQWxCO0FBQ0EsV0FBS0MsU0FBTCxHQUFpQixLQUFqQjtBQUNBLFdBQUtDLElBQUw7QUFDRDs7QUFQcUI7QUFBQTtBQUFBLGFBU3RCLGdCQUFPO0FBQUE7QUFBQTs7QUFDTCxZQUFJO0FBQ0YsY0FBTUMsVUFBVSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FDakJDLFlBQVksQ0FBQ0MsT0FBYixDQUFxQkMsd0JBQXJCLENBRGlCLENBQW5CO0FBR0FDLHFCQUFXLEdBQUdDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JGLFdBQWxCLEVBQStCTixVQUEvQixDQUFkO0FBQ0QsU0FMRCxDQUtFLE9BQU9TLEdBQVAsRUFBWTtBQUNaQyxpQkFBTyxDQUFDQyxJQUFSLENBQ0UsMEVBREY7QUFHRCxTQVZJLENBWU47OztBQUNBLFlBQUlMLFdBQVcsQ0FBQ00sVUFBaEIsRUFBNEI7QUFDMUIsZUFBS0MsSUFBTDtBQUNELFNBRkQsTUFFTztBQUNMLGVBQUtDLElBQUw7QUFDRDs7QUFFQSxpQ0FBS2xCLFVBQUwsc0VBQWlCbUIsT0FBakIsQ0FBeUIsVUFBQ0MsU0FBRDtBQUFBLGlCQUN4QkEsU0FBUyxDQUFDQyxnQkFBVixDQUEyQixPQUEzQixFQUFvQyxLQUFwQyxDQUR3QjtBQUFBLFNBQXpCO0FBR0Q7QUEvQnFCO0FBQUE7QUFBQSxhQWtDdEIscUJBQVlDLEtBQVosRUFBbUI7QUFDakIsYUFBS0MsTUFBTCxDQUFZRCxLQUFaO0FBQ0Q7QUFwQ3FCO0FBQUE7QUFBQSxhQXNDdEIsZ0JBQU9BLEtBQVAsRUFBYztBQUNaLFlBQUksS0FBS3BCLFNBQVQsRUFBb0IsS0FBS2UsSUFBTCxHQUFwQixLQUNLLElBQUksQ0FBQyxLQUFLZixTQUFWLEVBQXFCLEtBQUtnQixJQUFMO0FBQzNCO0FBekNxQjtBQUFBO0FBQUEsYUEyQ3RCLGdCQUFPO0FBQ0wsYUFBS25CLEVBQUwsQ0FBUXlCLE9BQVIsQ0FBZ0J0QixTQUFoQixHQUE0QixLQUE1QjtBQUNBLGFBQUtBLFNBQUwsR0FBaUIsS0FBakI7QUFDQVEsbUJBQVcsQ0FBQ00sVUFBWixHQUF5QixJQUF6QjtBQUVBLGFBQUtTLFlBQUw7QUFDRDtBQWpEcUI7QUFBQTtBQUFBLGFBbUR0Qix3QkFBZTtBQUNibEIsb0JBQVksQ0FBQ21CLE9BQWIsQ0FDQ2pCLHdCQURELEVBRUVKLElBQUksQ0FBQ3NCLFNBQUwsQ0FBZWpCLFdBQWYsQ0FGRjtBQUlEO0FBeERxQjtBQUFBO0FBQUEsYUEwRHRCLGdCQUFPO0FBQ0wsYUFBS1gsRUFBTCxDQUFReUIsT0FBUixDQUFnQnRCLFNBQWhCLEdBQTRCLElBQTVCO0FBQ0EsYUFBS0EsU0FBTCxHQUFpQixJQUFqQjtBQUNBUSxtQkFBVyxDQUFDTSxVQUFaLEdBQXlCLEtBQXpCO0FBQ0EsYUFBS1MsWUFBTDtBQUNEO0FBL0RxQjs7QUFBQTtBQUFBOztBQWtFdEIsTUFBSWYsV0FBVyxHQUFHO0FBQ2RNLGNBQVUsRUFBRTtBQURFLEdBQWxCO0FBSUEsTUFBTVksa0JBQWtCLEdBQUdDLFFBQVEsQ0FBQzVCLGdCQUFULENBQTBCLHVCQUExQixDQUEzQjtBQUNBLE1BQU1RLHdCQUF3Qix1QkFBOUI7QUFFQSxNQUFJbUIsa0JBQWtCLENBQUNFLE1BQXZCLEVBQStCLG1CQUFJRixrQkFBSixFQUF3QkcsR0FBeEIsQ0FBNEIsVUFBQ0MsaUJBQUQ7QUFBQSxXQUF1QixJQUFJbEMsTUFBSixDQUFXa0MsaUJBQVgsQ0FBdkI7QUFBQSxHQUE1QjtBQUNsQyIsImZpbGUiOiIuL2Fzc2V0cy9qcy91aS9oZWFkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbGxhcHNpYmxlIGhlYWRlci5cbiAqXG4gKiBDb2xsYXBzaWJsZSBoZWFkZXIgaXMgdXNlZCBmb3IgaGlkaW5nIC8gc2hvd2luZyB0aGUgc3VtbWFyeSBvZiBhXG4gKiBwdWJsaWNhdGlvbiBvbiB0aGUgZWRpdCBmb3Jtcy4gVGhlIHN0YXRlIG9mIHRoZSBoZWFkZXIgKGhpZGRlbiAvIHNob3duKVxuICogaXMgcGVyc2lzdGVkIGFjcm9zcyBwYWdlIHJlbG9hZHMgdmlhIHRoZSBicm93c2VycyBsb2NhbCBzdG9yYWdlLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbigpIHtcbiAgIGNsYXNzIEhlYWRlciB7XG4gICAgY29uc3RydWN0b3IoZWwpIHtcbiAgICAgIHRoaXMuZWwgPSBlbDtcbiAgICAgIHRoaXMuY29sbGFwc2VycyA9IGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jLWhlYWRlci1jb2xsYXBzZS10cmlnZ2VyJyk7XG4gICAgICB0aGlzLmNvbGxhcHNlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHNhdmVkU3RhdGUgPSBKU09OLnBhcnNlKFxuICAgICAgICAgIGxvY2FsU3RvcmFnZS5nZXRJdGVtKEhFQURFUl9TVEFURV9TVE9SQUdFX0tFWSlcbiAgICAgICAgKTtcbiAgICAgICAgaGVhZGVyU3RhdGUgPSBPYmplY3QuYXNzaWduKHt9LCBoZWFkZXJTdGF0ZSwgc2F2ZWRTdGF0ZSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgICdUaGVyZSB3YXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgc2F2ZWQgc3RhdGUgZm9yIHRoZSBwcm90b3R5cGUgbmF2aWdhdGlvbi4nXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgLy8gSGFuZGxlIHN0YXRlIG9uIHBhZ2UgbG9hZDogb3Blbi9jbG9zZSBuYXYgYW5kIGNsb3NlIHNhdmVkIG1vZHVsZXNcbiAgICAgaWYgKGhlYWRlclN0YXRlLmlzRXhwYW5kZWQpIHtcbiAgICAgICB0aGlzLnNob3coKTtcbiAgICAgfSBlbHNlIHtcbiAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgfVxuXG4gICAgICB0aGlzLmNvbGxhcHNlcnM/LmZvckVhY2goKGNvbGxhcHNlcikgPT5cbiAgICAgICBjb2xsYXBzZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzKVxuICAgICAgKTtcbiAgICB9XG5cblxuICAgIGhhbmRsZUV2ZW50KGV2ZW50KSB7XG4gICAgICB0aGlzLnRvZ2dsZShldmVudCk7XG4gICAgfVxuXG4gICAgdG9nZ2xlKGV2ZW50KSB7XG4gICAgICBpZiAodGhpcy5jb2xsYXBzZWQpIHRoaXMuc2hvdygpO1xuICAgICAgZWxzZSBpZiAoIXRoaXMuY29sbGFwc2VkKSB0aGlzLmhpZGUoKTtcbiAgICB9XG5cbiAgICBzaG93KCkge1xuICAgICAgdGhpcy5lbC5kYXRhc2V0LmNvbGxhcHNlZCA9IGZhbHNlO1xuICAgICAgdGhpcy5jb2xsYXBzZWQgPSBmYWxzZTtcbiAgICAgIGhlYWRlclN0YXRlLmlzRXhwYW5kZWQgPSB0cnVlO1xuXG4gICAgICB0aGlzLnNhdmVOYXZTdGF0ZSgpO1xuICAgIH1cblxuICAgIHNhdmVOYXZTdGF0ZSgpIHtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFxuICAgICAgIEhFQURFUl9TVEFURV9TVE9SQUdFX0tFWSxcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoaGVhZGVyU3RhdGUpXG4gICAgICApO1xuICAgIH1cblxuICAgIGhpZGUoKSB7XG4gICAgICB0aGlzLmVsLmRhdGFzZXQuY29sbGFwc2VkID0gdHJ1ZTtcbiAgICAgIHRoaXMuY29sbGFwc2VkID0gdHJ1ZTtcbiAgICAgIGhlYWRlclN0YXRlLmlzRXhwYW5kZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2F2ZU5hdlN0YXRlKCk7XG4gICAgfVxuICB9XG5cbiAgICBsZXQgaGVhZGVyU3RhdGUgPSB7XG4gICAgICAgIGlzRXhwYW5kZWQ6IGZhbHNlLFxuICAgIH07XG5cbiAgICBjb25zdCBjb2xsYXBzaWJsZUhlYWRlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYy1oZWFkZXItY29sbGFwc2libGUnKTtcbiAgICBjb25zdCBIRUFERVJfU1RBVEVfU1RPUkFHRV9LRVkgPSBgYmVkcm9ja2hlYWRlclN0YXRlYDtcblxuICAgIGlmIChjb2xsYXBzaWJsZUhlYWRlcnMubGVuZ3RoKSBbLi4uY29sbGFwc2libGVIZWFkZXJzXS5tYXAoKGNvbGxhcHNpYmxlSGVhZGVyKSA9PiBuZXcgSGVhZGVyKGNvbGxhcHNpYmxlSGVhZGVyKSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./assets/js/ui/header.js\n");

/***/ }),

/***/ "./assets/js/ui/multiple.js":
/*!**********************************!*\
  !*** ./assets/js/ui/multiple.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var htmx_org__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! htmx.org */ \"./node_modules/htmx.org/dist/htmx.min.js\");\n/* harmony import */ var htmx_org__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(htmx_org__WEBPACK_IMPORTED_MODULE_0__);\n // Handles fields with multiple values\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  var multiple = function multiple() {\n    // Delete a value from the field\n    var deleteFormValue = function deleteFormValue(e) {\n      var formField = e.target.closest(\"div.form-values\");\n      e.target.closest(\"div.form-value\").remove();\n      var length = Array.from(formField.children).length;\n\n      for (var i = 0; i < length; i++) {\n        var input = formField.children[i].querySelector(\".form-control\");\n        var name = input.getAttribute(\"name\");\n        name = name.replace(/\\[.*\\]/, \"\");\n        input.setAttribute(\"name\", name + \"[\" + i + \"]\");\n      }\n    }; // Add a new value to the field\n\n\n    var addFormValue = function addFormValue(e) {\n      var formField = e.target.closest(\"div.form-values\");\n      var formValue = formField.lastElementChild;\n      var length = Array.from(formField.children).length;\n      var node = formValue.cloneNode(true);\n      formValue.querySelector(\".form-control\").value = \"\";\n      var input = formValue.querySelector(\".form-control\");\n      var inputName = input.getAttribute(\"name\");\n      inputName = inputName.replace(/\\[.*\\]/, \"\");\n      input.setAttribute(\"name\", inputName + \"[\" + length + \"]\");\n      var classList = node.querySelector(\"button.form-value-add\").classList;\n      classList.remove(\"form-value-add\");\n      classList.remove(\"btn-outline-primary\");\n      classList.add(\"btn-link-muted\");\n      classList.add(\"form-value-delete\");\n      classList = node.querySelector(\"i.if-add\").classList;\n      classList.remove(\"if-add\");\n      classList.add(\"if-delete\");\n      node.querySelector(\"div.sr-only\").textContent = \"Delete\";\n      node.querySelector(\"button.form-value-delete\").addEventListener(\"click\", deleteFormValue);\n      var nodes = node.querySelectorAll(\".is-invalid\");\n      nodes.forEach(function (item) {\n        item.classList.remove(\"is-invalid\");\n      });\n      formValue.before(node);\n    };\n\n    document.querySelectorAll(\"button.form-value-delete\").forEach(function (el) {\n      return el.addEventListener(\"click\", deleteFormValue);\n    });\n    document.querySelectorAll(\"button.form-value-add\").forEach(function (el) {\n      return el.addEventListener(\"click\", addFormValue);\n    });\n  }; // Init event listeners whenever HTMX swaps in a card-collapsible having a form element.\n\n\n  htmx_org__WEBPACK_IMPORTED_MODULE_0___default().on(\"htmx:afterSettle\", function (evt) {\n    var item = evt.detail.target.children.item(0);\n\n    if (item && item.nodeName && item.nodeName.toLowerCase() == \"form\") {\n      multiple();\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ui/multiple.js\n");

/***/ }),

/***/ "./node_modules/bootstrap.native/dist/bootstrap-native-v4.js":
/*!*******************************************************************!*\
  !*** ./node_modules/bootstrap.native/dist/bootstrap-native-v4.js ***!
  \*******************************************************************/
/***/ (function(module) {

eval("/*!\n  * Native JavaScript for Bootstrap v4.0.6 (https://thednp.github.io/bootstrap.native/)\n  * Copyright 2015-2021 © dnp_theme\n  * Licensed under MIT (https://github.com/thednp/bootstrap.native/blob/master/LICENSE)\n  */\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  var transitionEndEvent = 'webkitTransition' in document.head.style ? 'webkitTransitionEnd' : 'transitionend';\n\n  var supportTransition = 'webkitTransition' in document.head.style || 'transition' in document.head.style;\n\n  var transitionDuration = 'webkitTransition' in document.head.style ? 'webkitTransitionDuration' : 'transitionDuration';\n\n  var transitionProperty = 'webkitTransition' in document.head.style ? 'webkitTransitionProperty' : 'transitionProperty';\n\n  function getElementTransitionDuration(element) {\n    var computedStyle = getComputedStyle(element);\n    var propertyValue = computedStyle[transitionProperty];\n    var durationValue = computedStyle[transitionDuration];\n    var durationScale = durationValue.includes('ms') ? 1 : 1000;\n    var duration = supportTransition && propertyValue && propertyValue !== 'none'\n      ? parseFloat(durationValue) * durationScale : 0;\n\n    return !Number.isNaN(duration) ? duration : 0;\n  }\n\n  function emulateTransitionEnd(element, handler) {\n    var called = 0;\n    var endEvent = new Event(transitionEndEvent);\n    var duration = getElementTransitionDuration(element);\n\n    if (duration) {\n      element.addEventListener(transitionEndEvent, function transitionEndWrapper(e) {\n        if (e.target === element) {\n          handler.apply(element, [e]);\n          element.removeEventListener(transitionEndEvent, transitionEndWrapper);\n          called = 1;\n        }\n      });\n      setTimeout(function () {\n        if (!called) { element.dispatchEvent(endEvent); }\n      }, duration + 17);\n    } else {\n      handler.apply(element, [endEvent]);\n    }\n  }\n\n  function queryElement(selector, parent) {\n    var lookUp = parent && parent instanceof Element ? parent : document;\n    return selector instanceof Element ? selector : lookUp.querySelector(selector);\n  }\n\n  function bootstrapCustomEvent(eventType, componentName, eventProperties) {\n    var OriginalCustomEvent = new CustomEvent((eventType + \".bs.\" + componentName), { cancelable: true });\n\n    if (typeof eventProperties !== 'undefined') {\n      Object.keys(eventProperties).forEach(function (key) {\n        Object.defineProperty(OriginalCustomEvent, key, {\n          value: eventProperties[key],\n        });\n      });\n    }\n    return OriginalCustomEvent;\n  }\n\n  function dispatchCustomEvent(customEvent) {\n    if (this) { this.dispatchEvent(customEvent); }\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Alert\n  -------------------------------------------- */\n\n  // ALERT DEFINITION\n  // ================\n\n  function Alert(elem) {\n    var element;\n\n    // bind\n    var self = this;\n\n    // the target alert\n    var alert;\n\n    // custom events\n    var closeCustomEvent = bootstrapCustomEvent('close', 'alert');\n    var closedCustomEvent = bootstrapCustomEvent('closed', 'alert');\n\n    // private methods\n    function triggerHandler() {\n      if (alert.classList.contains('fade')) { emulateTransitionEnd(alert, transitionEndHandler); }\n      else { transitionEndHandler(); }\n    }\n    function toggleEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      element[action]('click', clickHandler, false);\n    }\n\n    // event handlers\n    function clickHandler(e) {\n      alert = e && e.target.closest('.alert');\n      element = queryElement('[data-dismiss=\"alert\"]', alert);\n      if (element && alert && (element === e.target || element.contains(e.target))) { self.close(); }\n    }\n    function transitionEndHandler() {\n      toggleEvents();\n      alert.parentNode.removeChild(alert);\n      dispatchCustomEvent.call(alert, closedCustomEvent);\n    }\n\n    // PUBLIC METHODS\n    self.close = function () {\n      if (alert && element && alert.classList.contains('show')) {\n        dispatchCustomEvent.call(alert, closeCustomEvent);\n        if (closeCustomEvent.defaultPrevented) { return; }\n        self.dispose();\n        alert.classList.remove('show');\n        triggerHandler();\n      }\n    };\n\n    self.dispose = function () {\n      toggleEvents();\n      delete element.Alert;\n    };\n\n    // INIT\n    // initialization element\n    element = queryElement(elem);\n\n    // find the target alert\n    alert = element.closest('.alert');\n\n    // reset on re-init\n    if (element.Alert) { element.Alert.dispose(); }\n\n    // prevent adding event handlers twice\n    if (!element.Alert) { toggleEvents(1); }\n\n    // store init object within target element\n    self.element = element;\n    element.Alert = self;\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Button\n  ---------------------------------------------*/\n\n  // BUTTON DEFINITION\n  // =================\n\n  function Button(elem) {\n    var element;\n\n    // bind and labels\n    var self = this;\n    var labels;\n\n    // changeEvent\n    var changeCustomEvent = bootstrapCustomEvent('change', 'button');\n\n    // private methods\n    function toggle(e) {\n      var eTarget = e.target;\n      var parentLabel = eTarget.closest('LABEL'); // the .btn label\n      var label = null;\n\n      if (eTarget.tagName === 'LABEL') {\n        label = eTarget;\n      } else if (parentLabel) {\n        label = parentLabel;\n      }\n\n      // current input\n      var input = label && label.getElementsByTagName('INPUT')[0];\n\n      // invalidate if no input\n      if (!input) { return; }\n\n      dispatchCustomEvent.call(input, changeCustomEvent); // trigger the change for the input\n      dispatchCustomEvent.call(element, changeCustomEvent); // trigger the change for the btn-group\n\n      // manage the dom manipulation\n      if (input.type === 'checkbox') { // checkboxes\n        if (changeCustomEvent.defaultPrevented) { return; } // discontinue when defaultPrevented is true\n\n        if (!input.checked) {\n          label.classList.add('active');\n          input.getAttribute('checked');\n          input.setAttribute('checked', 'checked');\n          input.checked = true;\n        } else {\n          label.classList.remove('active');\n          input.getAttribute('checked');\n          input.removeAttribute('checked');\n          input.checked = false;\n        }\n\n        if (!element.toggled) { // prevent triggering the event twice\n          element.toggled = true;\n        }\n      }\n\n      if (input.type === 'radio' && !element.toggled) { // radio buttons\n        if (changeCustomEvent.defaultPrevented) { return; }\n        // don't trigger if already active\n        // (the OR condition is a hack to check if the buttons were selected\n        // with key press and NOT mouse click)\n        if (!input.checked || (e.screenX === 0 && e.screenY === 0)) {\n          label.classList.add('active');\n          label.classList.add('focus');\n          input.setAttribute('checked', 'checked');\n          input.checked = true;\n\n          element.toggled = true;\n          Array.from(labels).forEach(function (otherLabel) {\n            var otherInput = otherLabel.getElementsByTagName('INPUT')[0];\n            if (otherLabel !== label && otherLabel.classList.contains('active')) {\n              dispatchCustomEvent.call(otherInput, changeCustomEvent); // trigger the change\n              otherLabel.classList.remove('active');\n              otherInput.removeAttribute('checked');\n              otherInput.checked = false;\n            }\n          });\n        }\n      }\n      setTimeout(function () { element.toggled = false; }, 50);\n    }\n\n    // handlers\n    function keyHandler(e) {\n      var key = e.which || e.keyCode;\n      if (key === 32 && e.target === document.activeElement) { toggle(e); }\n    }\n    function preventScroll(e) {\n      var key = e.which || e.keyCode;\n      if (key === 32) { e.preventDefault(); }\n    }\n    function focusToggle(e) {\n      if (e.target.tagName === 'INPUT') {\n        var action = e.type === 'focusin' ? 'add' : 'remove';\n        e.target.closest('.btn').classList[action]('focus');\n      }\n    }\n    function toggleEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      element[action]('click', toggle, false);\n      element[action]('keyup', keyHandler, false);\n      element[action]('keydown', preventScroll, false);\n      element[action]('focusin', focusToggle, false);\n      element[action]('focusout', focusToggle, false);\n    }\n\n    // public method\n    self.dispose = function () {\n      toggleEvents();\n      delete element.Button;\n    };\n\n    // init\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Button) { element.Button.dispose(); }\n\n    labels = element.getElementsByClassName('btn');\n\n    // invalidate\n    if (!labels.length) { return; }\n\n    // prevent adding event handlers twice\n    if (!element.Button) { toggleEvents(1); }\n\n    // set initial toggled state\n    // toggled makes sure to prevent triggering twice the change.bs.button events\n    element.toggled = false;\n\n    // associate target with init object\n    element.Button = self;\n\n    // activate items on load\n    Array.from(labels).forEach(function (btn) {\n      var hasChecked = queryElement('input:checked', btn);\n      if (!btn.classList.contains('active') && hasChecked) {\n        btn.classList.add('active');\n      }\n      if (btn.classList.contains('active') && !hasChecked) {\n        btn.classList.remove('active');\n      }\n    });\n  }\n\n  var mouseHoverEvents = ('onmouseleave' in document) ? ['mouseenter', 'mouseleave'] : ['mouseover', 'mouseout'];\n\n  var addEventListener = 'addEventListener';\n\n  var removeEventListener = 'removeEventListener';\n\n  var supportPassive = (function () {\n    var result = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          result = true;\n          return result;\n        },\n      });\n      document[addEventListener]('DOMContentLoaded', function wrap() {\n        document[removeEventListener]('DOMContentLoaded', wrap, opts);\n      }, opts);\n    } catch (e) {\n      throw Error('Passive events are not supported');\n    }\n\n    return result;\n  })();\n\n  // general event options\n\n  var passiveHandler = supportPassive ? { passive: true } : false;\n\n  function isElementInScrollRange(element) {\n    var bcr = element.getBoundingClientRect();\n    var viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n    return bcr.top <= viewportHeight && bcr.bottom >= 0; // bottom && top\n  }\n\n  function reflow(element) {\n    return element.offsetHeight;\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Carousel\n  ----------------------------------------------- */\n\n  // CAROUSEL DEFINITION\n  // ===================\n\n  function Carousel(elem, opsInput) {\n    var assign, assign$1, assign$2;\n\n    var element;\n\n    // set options\n    var options = opsInput || {};\n\n    // bind\n    var self = this;\n\n    // internal variables\n    var vars;\n    var ops;\n\n    // custom events\n    var slideCustomEvent;\n    var slidCustomEvent;\n\n    // carousel elements\n    var slides;\n    var leftArrow;\n    var rightArrow;\n    var indicator;\n    var indicators;\n\n    // handlers\n    function pauseHandler() {\n      if (ops.interval !== false && !element.classList.contains('paused')) {\n        element.classList.add('paused');\n        if (!vars.isSliding) {\n          clearInterval(vars.timer);\n          vars.timer = null;\n        }\n      }\n    }\n    function resumeHandler() {\n      if (ops.interval !== false && element.classList.contains('paused')) {\n        element.classList.remove('paused');\n        if (!vars.isSliding) {\n          clearInterval(vars.timer);\n          vars.timer = null;\n          self.cycle();\n        }\n      }\n    }\n    function indicatorHandler(e) {\n      e.preventDefault();\n      if (vars.isSliding) { return; }\n\n      var eventTarget = e.target; // event target | the current active item\n\n      if (eventTarget && !eventTarget.classList.contains('active') && eventTarget.getAttribute('data-slide-to')) {\n        vars.index = +(eventTarget.getAttribute('data-slide-to'));\n      } else { return; }\n\n      self.slideTo(vars.index); // Do the slide\n    }\n    function controlsHandler(e) {\n      e.preventDefault();\n      if (vars.isSliding) { return; }\n\n      var eventTarget = e.currentTarget || e.srcElement;\n\n      if (eventTarget === rightArrow) {\n        vars.index += 1;\n      } else if (eventTarget === leftArrow) {\n        vars.index -= 1;\n      }\n\n      self.slideTo(vars.index); // Do the slide\n    }\n    function keyHandler(ref) {\n      var which = ref.which;\n\n      if (vars.isSliding) { return; }\n      switch (which) {\n        case 39:\n          vars.index += 1;\n          break;\n        case 37:\n          vars.index -= 1;\n          break;\n        default: return;\n      }\n      self.slideTo(vars.index); // Do the slide\n    }\n    function toggleEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      if (ops.pause && ops.interval) {\n        element[action](mouseHoverEvents[0], pauseHandler, false);\n        element[action](mouseHoverEvents[1], resumeHandler, false);\n        element[action]('touchstart', pauseHandler, passiveHandler);\n        element[action]('touchend', resumeHandler, passiveHandler);\n      }\n\n      if (ops.touch && slides.length > 1) { element[action]('touchstart', touchDownHandler, passiveHandler); }\n\n      if (rightArrow) { rightArrow[action]('click', controlsHandler, false); }\n      if (leftArrow) { leftArrow[action]('click', controlsHandler, false); }\n\n      if (indicator) { indicator[action]('click', indicatorHandler, false); }\n      if (ops.keyboard) { window[action]('keydown', keyHandler, false); }\n    }\n    // touch events\n    function toggleTouchEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      element[action]('touchmove', touchMoveHandler, passiveHandler);\n      element[action]('touchend', touchEndHandler, passiveHandler);\n    }\n    function touchDownHandler(e) {\n      if (vars.isTouch) { return; }\n\n      vars.touchPosition.startX = e.changedTouches[0].pageX;\n\n      if (element.contains(e.target)) {\n        vars.isTouch = true;\n        toggleTouchEvents(1);\n      }\n    }\n    function touchMoveHandler(e) {\n      if (!vars.isTouch) { e.preventDefault(); return; }\n\n      vars.touchPosition.currentX = e.changedTouches[0].pageX;\n\n      // cancel touch if more than one changedTouches detected\n      if (e.type === 'touchmove' && e.changedTouches.length > 1) {\n        e.preventDefault();\n      }\n    }\n    function touchEndHandler(e) {\n      if (!vars.isTouch || vars.isSliding) { return; }\n\n      vars.touchPosition.endX = vars.touchPosition.currentX || e.changedTouches[0].pageX;\n\n      if (vars.isTouch) {\n        if ((!element.contains(e.target) || !element.contains(e.relatedTarget))\n            && Math.abs(vars.touchPosition.startX - vars.touchPosition.endX) < 75) {\n          return;\n        }\n        if (vars.touchPosition.currentX < vars.touchPosition.startX) {\n          vars.index += 1;\n        } else if (vars.touchPosition.currentX > vars.touchPosition.startX) {\n          vars.index -= 1;\n        }\n        vars.isTouch = false;\n        self.slideTo(vars.index);\n\n        toggleTouchEvents(); // remove\n      }\n    }\n    // private methods\n    function setActivePage(pageIndex) { // indicators\n      Array.from(indicators).forEach(function (x) { return x.classList.remove('active'); });\n      if (indicators[pageIndex]) { indicators[pageIndex].classList.add('active'); }\n    }\n    function transitionEndHandler(e) {\n      if (vars.touchPosition) {\n        var next = vars.index;\n        var timeout = e && e.target !== slides[next] ? e.elapsedTime * 1000 + 100 : 20;\n        var activeItem = self.getActiveIndex();\n        var orientation = vars.direction === 'left' ? 'next' : 'prev';\n\n        if (vars.isSliding) {\n          setTimeout(function () {\n            if (vars.touchPosition) {\n              vars.isSliding = false;\n\n              slides[next].classList.add('active');\n              slides[activeItem].classList.remove('active');\n\n              slides[next].classList.remove((\"carousel-item-\" + orientation));\n              slides[next].classList.remove((\"carousel-item-\" + (vars.direction)));\n              slides[activeItem].classList.remove((\"carousel-item-\" + (vars.direction)));\n\n              dispatchCustomEvent.call(element, slidCustomEvent);\n              // check for element, might have been disposed\n              if (!document.hidden && ops.interval && !element.classList.contains('paused')) {\n                self.cycle();\n              }\n            }\n          }, timeout);\n        }\n      }\n    }\n\n    // public methods\n    self.cycle = function () {\n      if (vars.timer) {\n        clearInterval(vars.timer);\n        vars.timer = null;\n      }\n\n      vars.timer = setInterval(function () {\n        var idx = vars.index || self.getActiveIndex();\n        if (isElementInScrollRange(element)) {\n          idx += 1;\n          self.slideTo(idx);\n        }\n      }, ops.interval);\n    };\n    self.slideTo = function (idx) {\n      if (vars.isSliding) { return; } // when controled via methods, make sure to check again\n\n      // the current active, orientation, event eventProperties\n      var activeItem = self.getActiveIndex();\n      var next = idx;\n\n      // first return if we're on the same item #227\n      if (activeItem === next) {\n        return;\n      // or determine slide direction\n      } if ((activeItem < next) || (activeItem === 0 && next === slides.length - 1)) {\n        vars.direction = 'left'; // next\n      } else if ((activeItem > next) || (activeItem === slides.length - 1 && next === 0)) {\n        vars.direction = 'right'; // prev\n      }\n\n      // find the right next index\n      if (next < 0) { next = slides.length - 1; }\n      else if (next >= slides.length) { next = 0; }\n\n      var orientation = vars.direction === 'left' ? 'next' : 'prev'; // determine type\n\n      var eventProperties = {\n        relatedTarget: slides[next], direction: vars.direction, from: activeItem, to: next,\n      };\n      slideCustomEvent = bootstrapCustomEvent('slide', 'carousel', eventProperties);\n      slidCustomEvent = bootstrapCustomEvent('slid', 'carousel', eventProperties);\n      dispatchCustomEvent.call(element, slideCustomEvent); // here we go with the slide\n      if (slideCustomEvent.defaultPrevented) { return; } // discontinue when prevented\n\n      // update index\n      vars.index = next;\n\n      vars.isSliding = true;\n      clearInterval(vars.timer);\n      vars.timer = null;\n      setActivePage(next);\n\n      if (getElementTransitionDuration(slides[next]) && element.classList.contains('slide')) {\n        slides[next].classList.add((\"carousel-item-\" + orientation));\n        reflow(slides[next]);\n        slides[next].classList.add((\"carousel-item-\" + (vars.direction)));\n        slides[activeItem].classList.add((\"carousel-item-\" + (vars.direction)));\n\n        emulateTransitionEnd(slides[next], transitionEndHandler);\n      } else {\n        slides[next].classList.add('active');\n        reflow(slides[next]);\n        slides[activeItem].classList.remove('active');\n        setTimeout(function () {\n          vars.isSliding = false;\n          // check for element, might have been disposed\n          if (ops.interval && element && !element.classList.contains('paused')) {\n            self.cycle();\n          }\n          dispatchCustomEvent.call(element, slidCustomEvent);\n        }, 100);\n      }\n    };\n\n    self.getActiveIndex = function () { return Array.from(slides).indexOf(element.getElementsByClassName('carousel-item active')[0]) || 0; };\n\n    self.dispose = function () {\n      var itemClasses = ['left', 'right', 'prev', 'next'];\n\n      Array.from(slides).forEach(function (slide, idx) {\n        if (slide.classList.contains('active')) { setActivePage(idx); }\n        itemClasses.forEach(function (cls) { return slide.classList.remove((\"carousel-item-\" + cls)); });\n      });\n      clearInterval(vars.timer);\n\n      toggleEvents();\n      vars = {};\n      ops = {};\n      delete element.Carousel;\n    };\n\n    // init\n\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Carousel) { element.Carousel.dispose(); }\n\n    // carousel elements\n    slides = element.getElementsByClassName('carousel-item');\n    (assign = element.getElementsByClassName('carousel-control-prev'), leftArrow = assign[0]);\n    (assign$1 = element.getElementsByClassName('carousel-control-next'), rightArrow = assign$1[0]);\n    (assign$2 = element.getElementsByClassName('carousel-indicators'), indicator = assign$2[0]);\n    indicators = (indicator && indicator.getElementsByTagName('LI')) || [];\n\n    // invalidate when not enough items\n    if (slides.length < 2) { return; }\n\n    // check options\n    // DATA API\n    var intervalAttribute = element.getAttribute('data-interval');\n    var intervalData = intervalAttribute === 'false' ? 0 : +(intervalAttribute);\n    var touchData = element.getAttribute('data-touch') === 'false' ? 0 : 1;\n    var pauseData = element.getAttribute('data-pause') === 'hover' || false;\n    var keyboardData = element.getAttribute('data-keyboard') === 'true' || false;\n\n    // JS options\n    var intervalOption = options.interval;\n    var touchOption = options.touch;\n\n    // set instance options\n    ops = {};\n    ops.keyboard = options.keyboard === true || keyboardData;\n    ops.pause = (options.pause === 'hover' || pauseData) ? 'hover' : false; // false / hover\n    ops.touch = touchOption || touchData;\n\n    ops.interval = 5000; // bootstrap carousel default interval\n\n    if (typeof intervalOption === 'number') { ops.interval = intervalOption; }\n    else if (intervalOption === false || intervalData === 0 || intervalData === false) {\n      ops.interval = 0;\n    } else if (!Number.isNaN(intervalData)) { ops.interval = intervalData; }\n\n    // set first slide active if none\n    if (self.getActiveIndex() < 0) {\n      if (slides.length) { slides[0].classList.add('active'); }\n      if (indicators.length) { setActivePage(0); }\n    }\n\n    // set initial state\n    vars = {};\n    vars.direction = 'left';\n    vars.index = 0;\n    vars.timer = null;\n    vars.isSliding = false;\n    vars.isTouch = false;\n    vars.touchPosition = {\n      startX: 0,\n      currentX: 0,\n      endX: 0,\n    };\n\n    // attach event handlers\n    toggleEvents(1);\n\n    // start to cycle if interval is set\n    if (ops.interval) { self.cycle(); }\n\n    // associate init object to target\n    element.Carousel = self;\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Collapse\n  ----------------------------------------------- */\n\n  // COLLAPSE DEFINITION\n  // ===================\n\n  function Collapse(elem, opsInput) {\n    var element;\n    // set options\n    var options = opsInput || {};\n\n    // bind\n    var self = this;\n\n    // target practice\n    var accordion = null;\n    var collapse = null;\n    var activeCollapse;\n    var activeElement;\n    // custom events\n    var showCustomEvent;\n    var shownCustomEvent;\n    var hideCustomEvent;\n    var hiddenCustomEvent;\n\n    // private methods\n    function openAction(collapseElement, toggle) {\n      dispatchCustomEvent.call(collapseElement, showCustomEvent);\n      if (showCustomEvent.defaultPrevented) { return; }\n      collapseElement.isAnimating = true;\n      collapseElement.classList.add('collapsing');\n      collapseElement.classList.remove('collapse');\n      collapseElement.style.height = (collapseElement.scrollHeight) + \"px\";\n\n      emulateTransitionEnd(collapseElement, function () {\n        collapseElement.isAnimating = false;\n        collapseElement.setAttribute('aria-expanded', 'true');\n        toggle.setAttribute('aria-expanded', 'true');\n        collapseElement.classList.remove('collapsing');\n        collapseElement.classList.add('collapse');\n        collapseElement.classList.add('show');\n        collapseElement.style.height = '';\n        dispatchCustomEvent.call(collapseElement, shownCustomEvent);\n      });\n    }\n    function closeAction(collapseElement, toggle) {\n      dispatchCustomEvent.call(collapseElement, hideCustomEvent);\n      if (hideCustomEvent.defaultPrevented) { return; }\n      collapseElement.isAnimating = true;\n      collapseElement.style.height = (collapseElement.scrollHeight) + \"px\"; // set height first\n      collapseElement.classList.remove('collapse');\n      collapseElement.classList.remove('show');\n      collapseElement.classList.add('collapsing');\n      reflow(collapseElement); // force reflow to enable transition\n      collapseElement.style.height = '0px';\n\n      emulateTransitionEnd(collapseElement, function () {\n        collapseElement.isAnimating = false;\n        collapseElement.setAttribute('aria-expanded', 'false');\n        toggle.setAttribute('aria-expanded', 'false');\n        collapseElement.classList.remove('collapsing');\n        collapseElement.classList.add('collapse');\n        collapseElement.style.height = '';\n        dispatchCustomEvent.call(collapseElement, hiddenCustomEvent);\n      });\n    }\n\n    // public methods\n    self.toggle = function (e) {\n      if ((e && e.target.tagName === 'A') || element.tagName === 'A') { e.preventDefault(); }\n      if (element.contains(e.target) || e.target === element) {\n        if (!collapse.classList.contains('show')) { self.show(); }\n        else { self.hide(); }\n      }\n    };\n    self.hide = function () {\n      if (collapse.isAnimating) { return; }\n      closeAction(collapse, element);\n      element.classList.add('collapsed');\n    };\n    self.show = function () {\n      var assign;\n\n      if (accordion) {\n        (assign = accordion.getElementsByClassName('collapse show'), activeCollapse = assign[0]);\n        activeElement = activeCollapse && (queryElement((\"[data-target=\\\"#\" + (activeCollapse.id) + \"\\\"]\"), accordion)\n                      || queryElement((\"[href=\\\"#\" + (activeCollapse.id) + \"\\\"]\"), accordion));\n      }\n\n      if (!collapse.isAnimating) {\n        if (activeElement && activeCollapse !== collapse) {\n          closeAction(activeCollapse, activeElement);\n          activeElement.classList.add('collapsed');\n        }\n        openAction(collapse, element);\n        element.classList.remove('collapsed');\n      }\n    };\n    self.dispose = function () {\n      element.removeEventListener('click', self.toggle, false);\n      delete element.Collapse;\n    };\n\n    // init\n\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Collapse) { element.Collapse.dispose(); }\n\n    // DATA API\n    var accordionData = element.getAttribute('data-parent');\n\n    // custom events\n    showCustomEvent = bootstrapCustomEvent('show', 'collapse');\n    shownCustomEvent = bootstrapCustomEvent('shown', 'collapse');\n    hideCustomEvent = bootstrapCustomEvent('hide', 'collapse');\n    hiddenCustomEvent = bootstrapCustomEvent('hidden', 'collapse');\n\n    // determine targets\n    collapse = queryElement(options.target || element.getAttribute('data-target') || element.getAttribute('href'));\n\n    if (collapse !== null) { collapse.isAnimating = false; }\n    var accordionSelector = options.parent || accordionData;\n    if (accordionSelector) {\n      accordion = element.closest(accordionSelector);\n    } else {\n      accordion = null;\n    }\n\n    // prevent adding event handlers twice\n    if (!element.Collapse) {\n      element.addEventListener('click', self.toggle, false);\n    }\n\n    // associate target to init object\n    element.Collapse = self;\n  }\n\n  function setFocus(element) {\n    element.focus();\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Dropdown\n  ----------------------------------------------- */\n\n  // DROPDOWN DEFINITION\n  // ===================\n\n  function Dropdown(elem, option) {\n    var element;\n\n    // bind\n    var self = this;\n\n    // custom events\n    var showCustomEvent;\n    var shownCustomEvent;\n    var hideCustomEvent;\n    var hiddenCustomEvent;\n    // targets\n    var relatedTarget = null;\n    var parent; var menu; var menuItems = [];\n    // option\n    var persist;\n\n    // preventDefault on empty anchor links\n    function preventEmptyAnchor(anchor) {\n      if ((anchor.href && anchor.href.slice(-1) === '#') || (anchor.parentNode && anchor.parentNode.href\n        && anchor.parentNode.href.slice(-1) === '#')) { this.preventDefault(); }\n    }\n    // toggle dismissible events\n    function toggleDismiss() {\n      var action = element.open ? 'addEventListener' : 'removeEventListener';\n      document[action]('click', dismissHandler, false);\n      document[action]('keydown', preventScroll, false);\n      document[action]('keyup', keyHandler, false);\n      document[action]('focus', dismissHandler, false);\n    }\n    // handlers\n    function dismissHandler(e) {\n      var eventTarget = e.target;\n      if (!eventTarget.getAttribute) { return; } // some weird FF bug #409\n      var hasData = ((eventTarget && (eventTarget.getAttribute('data-toggle')))\n                                  || (eventTarget.parentNode && eventTarget.parentNode.getAttribute\n                                  && eventTarget.parentNode.getAttribute('data-toggle')));\n      if (e.type === 'focus' && (eventTarget === element || eventTarget === menu || menu.contains(eventTarget))) {\n        return;\n      }\n      if ((eventTarget === menu || menu.contains(eventTarget)) && (persist || hasData)) { return; }\n\n      relatedTarget = eventTarget === element || element.contains(eventTarget) ? element : null;\n      self.hide();\n\n      preventEmptyAnchor.call(e, eventTarget);\n    }\n    function clickHandler(e) {\n      relatedTarget = element;\n      self.show();\n      preventEmptyAnchor.call(e, e.target);\n    }\n    function preventScroll(e) {\n      var key = e.which || e.keyCode;\n      if (key === 38 || key === 40) { e.preventDefault(); }\n    }\n    function keyHandler(e) {\n      var key = e.which || e.keyCode;\n      var activeItem = document.activeElement;\n      var isSameElement = activeItem === element;\n      var isInsideMenu = menu.contains(activeItem);\n      var isMenuItem = activeItem.parentNode === menu || activeItem.parentNode.parentNode === menu;\n      var idx = menuItems.indexOf(activeItem);\n\n      if (isMenuItem) { // navigate up | down\n        if (isSameElement) {\n          idx = 0;\n        } else if (key === 38) {\n          idx = idx > 1 ? idx - 1 : 0;\n        } else if (key === 40) {\n          idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n        }\n\n        if (menuItems[idx]) { setFocus(menuItems[idx]); }\n      }\n      if (((menuItems.length && isMenuItem) // menu has items\n            || (!menuItems.length && (isInsideMenu || isSameElement)) // menu might be a form\n            || !isInsideMenu) // or the focused element is not in the menu at all\n            && element.open && key === 27 // menu must be open\n      ) {\n        self.toggle();\n        relatedTarget = null;\n      }\n    }\n\n    // public methods\n    self.show = function () {\n      showCustomEvent = bootstrapCustomEvent('show', 'dropdown', { relatedTarget: relatedTarget });\n      dispatchCustomEvent.call(parent, showCustomEvent);\n      if (showCustomEvent.defaultPrevented) { return; }\n\n      menu.classList.add('show');\n      parent.classList.add('show');\n      element.setAttribute('aria-expanded', true);\n      element.open = true;\n      element.removeEventListener('click', clickHandler, false);\n      setTimeout(function () {\n        setFocus(menu.getElementsByTagName('INPUT')[0] || element); // focus the first input item | element\n        toggleDismiss();\n        shownCustomEvent = bootstrapCustomEvent('shown', 'dropdown', { relatedTarget: relatedTarget });\n        dispatchCustomEvent.call(parent, shownCustomEvent);\n      }, 1);\n    };\n    self.hide = function () {\n      hideCustomEvent = bootstrapCustomEvent('hide', 'dropdown', { relatedTarget: relatedTarget });\n      dispatchCustomEvent.call(parent, hideCustomEvent);\n      if (hideCustomEvent.defaultPrevented) { return; }\n\n      menu.classList.remove('show');\n      parent.classList.remove('show');\n      element.setAttribute('aria-expanded', false);\n      element.open = false;\n      toggleDismiss();\n      setFocus(element);\n      setTimeout(function () {\n        // only re-attach handler if the init is not disposed\n        if (element.Dropdown) { element.addEventListener('click', clickHandler, false); }\n      }, 1);\n\n      hiddenCustomEvent = bootstrapCustomEvent('hidden', 'dropdown', { relatedTarget: relatedTarget });\n      dispatchCustomEvent.call(parent, hiddenCustomEvent);\n    };\n    self.toggle = function () {\n      if (parent.classList.contains('show') && element.open) { self.hide(); } else { self.show(); }\n    };\n    self.dispose = function () {\n      if (parent.classList.contains('show') && element.open) { self.hide(); }\n      element.removeEventListener('click', clickHandler, false);\n      delete element.Dropdown;\n    };\n\n    // init\n\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Dropdown) { element.Dropdown.dispose(); }\n\n    // set  targets\n    parent = element.parentNode;\n    menu = queryElement('.dropdown-menu', parent);\n\n    Array.from(menu.children).forEach(function (child) {\n      if (child.children.length && child.children[0].tagName === 'A') {\n        menuItems.push(child.children[0]);\n      }\n      if (child.tagName === 'A') { menuItems.push(child); }\n    });\n\n    // prevent adding event handlers twice\n    if (!element.Dropdown) {\n      if (!('tabindex' in menu)) { menu.setAttribute('tabindex', '0'); } // Fix onblur on Chrome | Safari\n      element.addEventListener('click', clickHandler, false);\n    }\n\n    // set option\n    persist = option === true || element.getAttribute('data-persist') === 'true' || false;\n\n    // set initial state to closed\n    element.open = false;\n\n    // associate element with init object\n    element.Dropdown = self;\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Modal\n  -------------------------------------------- */\n\n  // MODAL DEFINITION\n  // ================\n\n  function Modal(elem, opsInput) { // element can be the modal/triggering button\n    var element;\n\n    // set options\n    var options = opsInput || {};\n\n    // bind, modal\n    var self = this;\n    var modal;\n\n    // custom events\n    var showCustomEvent;\n    var shownCustomEvent;\n    var hideCustomEvent;\n    var hiddenCustomEvent;\n    // event targets and other\n    var relatedTarget = null;\n    var scrollBarWidth;\n    var overlay;\n    var overlayDelay;\n\n    // also find fixed-top / fixed-bottom items\n    var fixedItems;\n    var ops = {};\n\n    // private methods\n    function setScrollbar() {\n      var bodyClassList = document.body.classList;\n      var openModal = bodyClassList.contains('modal-open');\n      var bodyPad = parseInt(getComputedStyle(document.body).paddingRight, 10);\n      var docClientHeight = document.documentElement.clientHeight;\n      var docScrollHeight = document.documentElement.scrollHeight;\n      var bodyClientHeight = document.body.clientHeight;\n      var bodyScrollHeight = document.body.scrollHeight;\n      var bodyOverflow = docClientHeight !== docScrollHeight\n                      || bodyClientHeight !== bodyScrollHeight;\n      var modalOverflow = modal.clientHeight !== modal.scrollHeight;\n\n      scrollBarWidth = measureScrollbar();\n\n      modal.style.paddingRight = !modalOverflow && scrollBarWidth ? (scrollBarWidth + \"px\") : '';\n      document.body.style.paddingRight = modalOverflow || bodyOverflow\n        ? ((bodyPad + (openModal ? 0 : scrollBarWidth)) + \"px\") : '';\n\n      if (fixedItems.length) {\n        fixedItems.forEach(function (fixed) {\n          var itemPad = getComputedStyle(fixed).paddingRight;\n          fixed.style.paddingRight = modalOverflow || bodyOverflow\n            ? ((parseInt(itemPad, 10) + (openModal ? 0 : scrollBarWidth)) + \"px\")\n            : ((parseInt(itemPad, 10)) + \"px\");\n        });\n      }\n    }\n    function resetScrollbar() {\n      document.body.style.paddingRight = '';\n      modal.style.paddingRight = '';\n      if (fixedItems.length) {\n        fixedItems.forEach(function (fixed) {\n          fixed.style.paddingRight = '';\n        });\n      }\n    }\n    function measureScrollbar() {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.className = 'modal-scrollbar-measure'; // this is here to stay\n      document.body.appendChild(scrollDiv);\n      var widthValue = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n      return widthValue;\n    }\n    function createOverlay() {\n      var newOverlay = document.createElement('div');\n      overlay = queryElement('.modal-backdrop');\n\n      if (overlay === null) {\n        newOverlay.setAttribute('class', (\"modal-backdrop\" + (ops.animation ? ' fade' : '')));\n        overlay = newOverlay;\n        document.body.appendChild(overlay);\n      }\n      return overlay;\n    }\n    function removeOverlay() {\n      overlay = queryElement('.modal-backdrop');\n      if (overlay && !document.getElementsByClassName('modal show')[0]) {\n        document.body.removeChild(overlay); overlay = null;\n      }\n      if (overlay === null) {\n        document.body.classList.remove('modal-open');\n        resetScrollbar();\n      }\n    }\n    function toggleEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      window[action]('resize', self.update, passiveHandler);\n      modal[action]('click', dismissHandler, false);\n      document[action]('keydown', keyHandler, false);\n    }\n    // triggers\n    function beforeShow() {\n      modal.style.display = 'block';\n\n      setScrollbar();\n      if (!document.getElementsByClassName('modal show')[0]) { document.body.classList.add('modal-open'); }\n\n      modal.classList.add('show');\n      modal.setAttribute('aria-hidden', false);\n\n      if (modal.classList.contains('fade')) { emulateTransitionEnd(modal, triggerShow); }\n      else { triggerShow(); }\n    }\n    function triggerShow() {\n      setFocus(modal);\n      modal.isAnimating = false;\n\n      toggleEvents(1);\n\n      shownCustomEvent = bootstrapCustomEvent('shown', 'modal', { relatedTarget: relatedTarget });\n      dispatchCustomEvent.call(modal, shownCustomEvent);\n    }\n    function triggerHide(force) {\n      modal.style.display = '';\n      if (element) { setFocus(element); }\n\n      overlay = queryElement('.modal-backdrop');\n\n      // force can also be the transitionEvent object, we wanna make sure it's not\n      if (force !== 1 && overlay && overlay.classList.contains('show') && !document.getElementsByClassName('modal show')[0]) {\n        overlay.classList.remove('show');\n        emulateTransitionEnd(overlay, removeOverlay);\n      } else {\n        removeOverlay();\n      }\n\n      toggleEvents();\n\n      modal.isAnimating = false;\n\n      hiddenCustomEvent = bootstrapCustomEvent('hidden', 'modal');\n      dispatchCustomEvent.call(modal, hiddenCustomEvent);\n    }\n    // handlers\n    function clickHandler(e) {\n      if (modal.isAnimating) { return; }\n      var clickTarget = e.target;\n      var modalID = \"#\" + (modal.getAttribute('id'));\n      var targetAttrValue = clickTarget.getAttribute('data-target') || clickTarget.getAttribute('href');\n      var elemAttrValue = element.getAttribute('data-target') || element.getAttribute('href');\n\n      if (!modal.classList.contains('show')\n          && ((clickTarget === element && targetAttrValue === modalID)\n          || (element.contains(clickTarget) && elemAttrValue === modalID))) {\n        modal.modalTrigger = element;\n        relatedTarget = element;\n        self.show();\n        e.preventDefault();\n      }\n    }\n    function keyHandler(ref) {\n      var which = ref.which;\n\n      if (!modal.isAnimating && ops.keyboard && which === 27 && modal.classList.contains('show')) {\n        self.hide();\n      }\n    }\n    function dismissHandler(e) {\n      if (modal.isAnimating) { return; }\n      var clickTarget = e.target;\n      var hasData = clickTarget.getAttribute('data-dismiss') === 'modal';\n      var parentWithData = clickTarget.closest('[data-dismiss=\"modal\"]');\n\n      if (modal.classList.contains('show') && (parentWithData || hasData\n          || (clickTarget === modal && ops.backdrop !== 'static'))) {\n        self.hide(); relatedTarget = null;\n        e.preventDefault();\n      }\n    }\n\n    // public methods\n    self.toggle = function () {\n      if (modal.classList.contains('show')) { self.hide(); } else { self.show(); }\n    };\n    self.show = function () {\n      if (modal.classList.contains('show') && !!modal.isAnimating) { return; }\n\n      showCustomEvent = bootstrapCustomEvent('show', 'modal', { relatedTarget: relatedTarget });\n      dispatchCustomEvent.call(modal, showCustomEvent);\n\n      if (showCustomEvent.defaultPrevented) { return; }\n\n      modal.isAnimating = true;\n\n      // we elegantly hide any opened modal\n      var currentOpen = document.getElementsByClassName('modal show')[0];\n      if (currentOpen && currentOpen !== modal) {\n        if (currentOpen.modalTrigger) { currentOpen.modalTrigger.Modal.hide(); }\n        if (currentOpen.Modal) { currentOpen.Modal.hide(); }\n      }\n\n      if (ops.backdrop) { overlay = createOverlay(); }\n\n      if (overlay && !currentOpen && !overlay.classList.contains('show')) {\n        reflow(overlay);\n        overlayDelay = getElementTransitionDuration(overlay);\n        overlay.classList.add('show');\n      }\n\n      if (!currentOpen) { setTimeout(beforeShow, overlay && overlayDelay ? overlayDelay : 0); }\n      else { beforeShow(); }\n    };\n    self.hide = function (force) {\n      if (!modal.classList.contains('show')) { return; }\n\n      hideCustomEvent = bootstrapCustomEvent('hide', 'modal');\n      dispatchCustomEvent.call(modal, hideCustomEvent);\n      if (hideCustomEvent.defaultPrevented) { return; }\n\n      modal.isAnimating = true;\n\n      modal.classList.remove('show');\n      modal.setAttribute('aria-hidden', true);\n\n      if (modal.classList.contains('fade') && force !== 1) { emulateTransitionEnd(modal, triggerHide); }\n      else { triggerHide(); }\n    };\n    self.setContent = function (content) {\n      queryElement('.modal-content', modal).innerHTML = content;\n    };\n    self.update = function () {\n      if (modal.classList.contains('show')) {\n        setScrollbar();\n      }\n    };\n    self.dispose = function () {\n      self.hide(1);\n      if (element) { element.removeEventListener('click', clickHandler, false); delete element.Modal; } else { delete modal.Modal; }\n    };\n\n    // init\n\n    // the modal (both JavaScript / DATA API init) / triggering button element (DATA API)\n    element = queryElement(elem);\n\n    // determine modal, triggering element\n    var checkModal = queryElement(element.getAttribute('data-target') || element.getAttribute('href'));\n    modal = element.classList.contains('modal') ? element : checkModal;\n\n    // set fixed items\n    fixedItems = Array.from(document.getElementsByClassName('fixed-top'))\n      .concat(Array.from(document.getElementsByClassName('fixed-bottom')));\n\n    if (element.classList.contains('modal')) { element = null; } // modal is now independent of it's triggering element\n\n    // reset on re-init\n    if (element && element.Modal) { element.Modal.dispose(); }\n    if (modal && modal.Modal) { modal.Modal.dispose(); }\n\n    // set options\n    ops.keyboard = !(options.keyboard === false || modal.getAttribute('data-keyboard') === 'false');\n    ops.backdrop = options.backdrop === 'static' || modal.getAttribute('data-backdrop') === 'static' ? 'static' : true;\n    ops.backdrop = options.backdrop === false || modal.getAttribute('data-backdrop') === 'false' ? false : ops.backdrop;\n    ops.animation = !!modal.classList.contains('fade');\n    ops.content = options.content; // JavaScript only\n\n    // set an initial state of the modal\n    modal.isAnimating = false;\n\n    // prevent adding event handlers over and over\n    // modal is independent of a triggering element\n    if (element && !element.Modal) {\n      element.addEventListener('click', clickHandler, false);\n    }\n\n    if (ops.content) {\n      self.setContent(ops.content.trim());\n    }\n\n    // set associations\n    if (element) {\n      modal.modalTrigger = element;\n      element.Modal = self;\n    } else {\n      modal.Modal = self;\n    }\n  }\n\n  var mouseClickEvents = { down: 'mousedown', up: 'mouseup' };\n\n  // Popover, Tooltip & ScrollSpy\n  function getScroll() {\n    return {\n      y: window.pageYOffset || document.documentElement.scrollTop,\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n    };\n  }\n\n  // both popovers and tooltips (target,tooltip,placement,elementToAppendTo)\n  function styleTip(link, element, originalPosition, parent) {\n    var tipPositions = /\\b(top|bottom|left|right)+/;\n    var elementDimensions = { w: element.offsetWidth, h: element.offsetHeight };\n    var windowWidth = (document.documentElement.clientWidth || document.body.clientWidth);\n    var windowHeight = (document.documentElement.clientHeight || document.body.clientHeight);\n    var rect = link.getBoundingClientRect();\n    var scroll = parent === document.body\n      ? getScroll()\n      : { x: parent.offsetLeft + parent.scrollLeft, y: parent.offsetTop + parent.scrollTop };\n    var linkDimensions = { w: rect.right - rect.left, h: rect.bottom - rect.top };\n    var isPopover = element.classList.contains('popover');\n    var arrow = element.getElementsByClassName('arrow')[0];\n    var halfTopExceed = rect.top + linkDimensions.h / 2 - elementDimensions.h / 2 < 0;\n    var halfLeftExceed = rect.left + linkDimensions.w / 2 - elementDimensions.w / 2 < 0;\n    var halfRightExceed = rect.left + elementDimensions.w / 2\n      + linkDimensions.w / 2 >= windowWidth;\n    var halfBottomExceed = rect.top + elementDimensions.h / 2\n      + linkDimensions.h / 2 >= windowHeight;\n    var topExceed = rect.top - elementDimensions.h < 0;\n    var leftExceed = rect.left - elementDimensions.w < 0;\n    var bottomExceed = rect.top + elementDimensions.h + linkDimensions.h >= windowHeight;\n    var rightExceed = rect.left + elementDimensions.w + linkDimensions.w >= windowWidth;\n    var position = originalPosition;\n\n    // recompute position\n    // first, when both left and right limits are exceeded, we fall back to top|bottom\n    position = (position === 'left' || position === 'right') && leftExceed && rightExceed ? 'top' : position;\n    position = position === 'top' && topExceed ? 'bottom' : position;\n    position = position === 'bottom' && bottomExceed ? 'top' : position;\n    position = position === 'left' && leftExceed ? 'right' : position;\n    position = position === 'right' && rightExceed ? 'left' : position;\n\n    var topPosition;\n    var leftPosition;\n    var arrowTop;\n    var arrowLeft;\n\n    // update tooltip/popover class\n    if (element.className.indexOf(position) === -1) {\n      element.className = element.className.replace(tipPositions, position);\n    }\n\n    // we check the computed width & height and update here\n    var arrowWidth = arrow.offsetWidth;\n    var arrowHeight = arrow.offsetHeight;\n\n    // apply styling to tooltip or popover\n    // secondary|side positions\n    if (position === 'left' || position === 'right') {\n      if (position === 'left') { // LEFT\n        leftPosition = rect.left + scroll.x - elementDimensions.w - (isPopover ? arrowWidth : 0);\n      } else { // RIGHT\n        leftPosition = rect.left + scroll.x + linkDimensions.w;\n      }\n\n      // adjust top and arrow\n      if (halfTopExceed) {\n        topPosition = rect.top + scroll.y;\n        arrowTop = linkDimensions.h / 2 - arrowWidth;\n      } else if (halfBottomExceed) {\n        topPosition = rect.top + scroll.y - elementDimensions.h + linkDimensions.h;\n        arrowTop = elementDimensions.h - linkDimensions.h / 2 - arrowWidth;\n      } else {\n        topPosition = rect.top + scroll.y - elementDimensions.h / 2 + linkDimensions.h / 2;\n        arrowTop = elementDimensions.h / 2 - (isPopover ? arrowHeight * 0.9 : arrowHeight / 2);\n      }\n    // primary|vertical positions\n    } else if (position === 'top' || position === 'bottom') {\n      if (position === 'top') { // TOP\n        topPosition = rect.top + scroll.y - elementDimensions.h - (isPopover ? arrowHeight : 0);\n      } else { // BOTTOM\n        topPosition = rect.top + scroll.y + linkDimensions.h;\n      }\n      // adjust left | right and also the arrow\n      if (halfLeftExceed) {\n        leftPosition = 0;\n        arrowLeft = rect.left + linkDimensions.w / 2 - arrowWidth;\n      } else if (halfRightExceed) {\n        leftPosition = windowWidth - elementDimensions.w * 1.01;\n        arrowLeft = elementDimensions.w - (windowWidth - rect.left)\n          + linkDimensions.w / 2 - arrowWidth / 2;\n      } else {\n        leftPosition = rect.left + scroll.x - elementDimensions.w / 2 + linkDimensions.w / 2;\n        arrowLeft = elementDimensions.w / 2 - (isPopover ? arrowWidth : arrowWidth / 2);\n      }\n    }\n\n    // apply style to tooltip/popover and its arrow\n    element.style.top = topPosition + \"px\";\n    element.style.left = leftPosition + \"px\";\n\n    if (arrowTop) { arrow.style.top = arrowTop + \"px\"; }\n    if (arrowLeft) { arrow.style.left = arrowLeft + \"px\"; }\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Popover\n  ---------------------------------------------- */\n\n  // POPOVER DEFINITION\n  // ==================\n\n  function Popover(elem, opsInput) {\n    var element;\n    // set instance options\n    var options = opsInput || {};\n\n    // bind\n    var self = this;\n\n    // popover and timer\n    var popover = null;\n    var timer = 0;\n    var isIphone = /(iPhone|iPod|iPad)/.test(navigator.userAgent);\n    // title and content\n    var titleString;\n    var contentString;\n    var placementClass;\n\n    // options\n    var ops = {};\n\n    // close btn for dissmissible popover\n    var closeBtn;\n\n    // custom events\n    var showCustomEvent;\n    var shownCustomEvent;\n    var hideCustomEvent;\n    var hiddenCustomEvent;\n\n    // handlers\n    function dismissibleHandler(e) {\n      if (popover !== null && e.target === queryElement('.close', popover)) {\n        self.hide();\n      }\n    }\n    // private methods\n    function getAttr(att) {\n      return options[att] || element.dataset[att] || null;\n    }\n    function getTitle() {\n      return getAttr('title');\n    }\n    function getContent() {\n      return getAttr('content');\n    }\n    function removePopover() {\n      ops.container.removeChild(popover);\n      timer = null; popover = null;\n    }\n\n    function createPopover() {\n      titleString = getTitle();\n      contentString = getContent();\n      // fixing https://github.com/thednp/bootstrap.native/issues/233\n      contentString = contentString ? contentString.trim() : null;\n\n      popover = document.createElement('div');\n\n      // popover arrow\n      var popoverArrow = document.createElement('div');\n      popoverArrow.classList.add('arrow');\n      popover.appendChild(popoverArrow);\n\n      // create the popover from data attributes\n      if (contentString !== null && ops.template === null) {\n        popover.setAttribute('role', 'tooltip');\n\n        if (titleString !== null) {\n          var popoverTitle = document.createElement('h3');\n          popoverTitle.classList.add('popover-header');\n          popoverTitle.innerHTML = ops.dismissible ? titleString + closeBtn : titleString;\n          popover.appendChild(popoverTitle);\n        }\n\n        // set popover content\n        var popoverBodyMarkup = document.createElement('div');\n        popoverBodyMarkup.classList.add('popover-body');\n        popoverBodyMarkup.innerHTML = ops.dismissible && titleString === null\n          ? contentString + closeBtn\n          : contentString;\n        popover.appendChild(popoverBodyMarkup);\n      } else { // or create the popover from template\n        var popoverTemplate = document.createElement('div');\n        popoverTemplate.innerHTML = ops.template.trim();\n        popover.className = popoverTemplate.firstChild.className;\n        popover.innerHTML = popoverTemplate.firstChild.innerHTML;\n\n        var popoverHeader = queryElement('.popover-header', popover);\n        var popoverBody = queryElement('.popover-body', popover);\n\n        // fill the template with content from data attributes\n        if (titleString && popoverHeader) { popoverHeader.innerHTML = titleString.trim(); }\n        if (contentString && popoverBody) { popoverBody.innerHTML = contentString.trim(); }\n      }\n\n      // append to the container\n      ops.container.appendChild(popover);\n      popover.style.display = 'block';\n      if (!popover.classList.contains('popover')) { popover.classList.add('popover'); }\n      if (!popover.classList.contains(ops.animation)) { popover.classList.add(ops.animation); }\n      if (!popover.classList.contains(placementClass)) { popover.classList.add(placementClass); }\n    }\n    function showPopover() {\n      if (!popover.classList.contains('show')) { popover.classList.add('show'); }\n    }\n    function updatePopover() {\n      styleTip(element, popover, ops.placement, ops.container);\n    }\n    function forceFocus() {\n      if (popover === null) { element.focus(); }\n    }\n    function toggleEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      if (ops.trigger === 'hover') {\n        element[action](mouseClickEvents.down, self.show);\n        element[action](mouseHoverEvents[0], self.show);\n        // mouseHover = ('onmouseleave' in document)\n        //   ? [ 'mouseenter', 'mouseleave']\n        //   : [ 'mouseover', 'mouseout' ]\n        if (!ops.dismissible) { element[action](mouseHoverEvents[1], self.hide); }\n      } else if (ops.trigger === 'click') {\n        element[action](ops.trigger, self.toggle);\n      } else if (ops.trigger === 'focus') {\n        if (isIphone) { element[action]('click', forceFocus, false); }\n        element[action](ops.trigger, self.toggle);\n      }\n    }\n    function touchHandler(e) {\n      if ((popover && popover.contains(e.target))\n        || e.target === element || element.contains(e.target)) ; else {\n        self.hide();\n      }\n    }\n    // event toggle\n    function dismissHandlerToggle(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      if (ops.dismissible) {\n        document[action]('click', dismissibleHandler, false);\n      } else {\n        if (ops.trigger === 'focus') { element[action]('blur', self.hide); }\n        if (ops.trigger === 'hover') { document[action]('touchstart', touchHandler, passiveHandler); }\n      }\n      window[action]('resize', self.hide, passiveHandler);\n    }\n    // triggers\n    function showTrigger() {\n      dismissHandlerToggle(1);\n      dispatchCustomEvent.call(element, shownCustomEvent);\n    }\n    function hideTrigger() {\n      dismissHandlerToggle();\n      removePopover();\n      dispatchCustomEvent.call(element, hiddenCustomEvent);\n    }\n\n    // public methods / handlers\n    self.toggle = function () {\n      if (popover === null) { self.show(); }\n      else { self.hide(); }\n    };\n    self.show = function () {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        if (popover === null) {\n          dispatchCustomEvent.call(element, showCustomEvent);\n          if (showCustomEvent.defaultPrevented) { return; }\n\n          createPopover();\n          updatePopover();\n          showPopover();\n          if (ops.animation) { emulateTransitionEnd(popover, showTrigger); }\n          else { showTrigger(); }\n        }\n      }, 20);\n    };\n    self.hide = function () {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        if (popover && popover !== null && popover.classList.contains('show')) {\n          dispatchCustomEvent.call(element, hideCustomEvent);\n          if (hideCustomEvent.defaultPrevented) { return; }\n          popover.classList.remove('show');\n          if (ops.animation) { emulateTransitionEnd(popover, hideTrigger); }\n          else { hideTrigger(); }\n        }\n      }, ops.delay);\n    };\n    self.dispose = function () {\n      self.hide();\n      toggleEvents();\n      delete element.Popover;\n    };\n\n    // INIT\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Popover) { element.Popover.dispose(); }\n\n    // DATA API\n    var triggerData = element.getAttribute('data-trigger'); // click / hover / focus\n    var animationData = element.getAttribute('data-animation'); // true / false\n\n    var placementData = element.getAttribute('data-placement');\n    var dismissibleData = element.getAttribute('data-dismissible');\n    var delayData = element.getAttribute('data-delay');\n    var containerData = element.getAttribute('data-container');\n\n    // close btn for dissmissible popover\n    closeBtn = '<button type=\"button\" class=\"close\">×</button>';\n\n    // custom events\n    showCustomEvent = bootstrapCustomEvent('show', 'popover');\n    shownCustomEvent = bootstrapCustomEvent('shown', 'popover');\n    hideCustomEvent = bootstrapCustomEvent('hide', 'popover');\n    hiddenCustomEvent = bootstrapCustomEvent('hidden', 'popover');\n\n    // check container\n    var containerElement = queryElement(options.container);\n    var containerDataElement = queryElement(containerData);\n\n    // maybe the element is inside a modal\n    var modal = element.closest('.modal');\n\n    // maybe the element is inside a fixed navbar\n    var navbarFixedTop = element.closest('.fixed-top');\n    var navbarFixedBottom = element.closest('.fixed-bottom');\n\n    // set instance options\n    ops.template = options.template ? options.template : null; // JavaScript only\n    ops.trigger = options.trigger ? options.trigger : triggerData || 'hover';\n    ops.animation = options.animation && options.animation !== 'fade' ? options.animation : animationData || 'fade';\n    ops.placement = options.placement ? options.placement : placementData || 'top';\n    ops.delay = parseInt((options.delay || delayData), 10) || 200;\n    ops.dismissible = !!(options.dismissible || dismissibleData === 'true');\n    ops.container = containerElement\n      || (containerDataElement\n        || (navbarFixedTop || (navbarFixedBottom || (modal || document.body))));\n\n    placementClass = \"bs-popover-\" + (ops.placement);\n\n    // invalidate\n    titleString = getTitle();\n    contentString = getContent();\n\n    if (!contentString && !ops.template) { return; }\n\n    // init\n    if (!element.Popover) { // prevent adding event handlers twice\n      toggleEvents(1);\n    }\n\n    // associate target to init object\n    element.Popover = self;\n  }\n\n  /* Native JavaScript for Bootstrap 5 | ScrollSpy\n  ------------------------------------------------ */\n\n  // SCROLLSPY DEFINITION\n  // ====================\n\n  function ScrollSpy(elem, opsInput) {\n    var element;\n\n    // set options\n    var options = opsInput || {};\n\n    // bind\n    var self = this;\n\n    // GC internals\n    var vars;\n    var links;\n\n    // targets\n    var spyTarget;\n    // determine which is the real scrollTarget\n    var scrollTarget;\n    // options\n    var ops = {};\n\n    // private methods\n    // populate items and targets\n    function updateTargets() {\n      links = spyTarget.getElementsByTagName('A');\n\n      vars.scrollTop = vars.isWindow ? getScroll().y : element.scrollTop;\n\n      // only update vars once or with each mutation\n      if (vars.length !== links.length || getScrollHeight() !== vars.scrollHeight) {\n        var href;\n        var targetItem;\n        var rect;\n\n        // reset arrays & update\n        vars.items = [];\n        vars.offsets = [];\n        vars.scrollHeight = getScrollHeight();\n        vars.maxScroll = vars.scrollHeight - getOffsetHeight();\n\n        Array.from(links).forEach(function (link) {\n          href = link.getAttribute('href');\n          targetItem = href && href.charAt(0) === '#' && href.slice(-1) !== '#' && queryElement(href);\n\n          if (targetItem) {\n            vars.items.push(link);\n            rect = targetItem.getBoundingClientRect();\n            vars.offsets.push((vars.isWindow\n              ? rect.top + vars.scrollTop\n              : targetItem.offsetTop) - ops.offset);\n          }\n        });\n        vars.length = vars.items.length;\n      }\n    }\n    // item update\n    function toggleEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      scrollTarget[action]('scroll', self.refresh, passiveHandler);\n      window[action]('resize', self.refresh, passiveHandler);\n    }\n    function getScrollHeight() {\n      return scrollTarget.scrollHeight || Math.max(\n        document.body.scrollHeight,\n        document.documentElement.scrollHeight\n      );\n    }\n    function getOffsetHeight() {\n      return !vars.isWindow ? element.getBoundingClientRect().height : window.innerHeight;\n    }\n    function clear() {\n      Array.from(links).map(function (item) { return item.classList.contains('active') && item.classList.remove('active'); });\n    }\n    function activate(input) {\n      var item = input;\n      var itemClassList;\n      clear();\n      vars.activeItem = item;\n      item.classList.add('active');\n\n      // activate all parents\n      var parents = [];\n      while (item.parentNode !== document.body) {\n        item = item.parentNode;\n        itemClassList = item.classList;\n\n        if (itemClassList.contains('dropdown-menu') || itemClassList.contains('nav')) { parents.push(item); }\n      }\n\n      parents.forEach(function (menuItem) {\n        var parentLink = menuItem.previousElementSibling;\n\n        if (parentLink && !parentLink.classList.contains('active')) {\n          parentLink.classList.add('active');\n        }\n      });\n\n      dispatchCustomEvent.call(element, bootstrapCustomEvent('activate', 'scrollspy', { relatedTarget: vars.activeItem }));\n    }\n\n    // public method\n    self.refresh = function () {\n      updateTargets();\n\n      if (vars.scrollTop >= vars.maxScroll) {\n        var newActiveItem = vars.items[vars.length - 1];\n\n        if (vars.activeItem !== newActiveItem) {\n          activate(newActiveItem);\n        }\n\n        return;\n      }\n\n      if (vars.activeItem && vars.scrollTop < vars.offsets[0] && vars.offsets[0] > 0) {\n        vars.activeItem = null;\n        clear();\n        return;\n      }\n\n      var i = vars.length;\n      while (i > -1) {\n        if (vars.activeItem !== vars.items[i] && vars.scrollTop >= vars.offsets[i]\n          && (typeof vars.offsets[i + 1] === 'undefined' || vars.scrollTop < vars.offsets[i + 1])) {\n          activate(vars.items[i]);\n        }\n        i -= 1;\n      }\n    };\n    self.dispose = function () {\n      toggleEvents();\n      delete element.ScrollSpy;\n    };\n\n    // init\n    // initialization element, the element we spy on\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.ScrollSpy) { element.ScrollSpy.dispose(); }\n\n    // event targets, constants\n    // DATA API\n    var targetData = element.getAttribute('data-target');\n    var offsetData = element.getAttribute('data-offset');\n\n    // targets\n    spyTarget = queryElement(options.target || targetData);\n\n    // determine which is the real scrollTarget\n    scrollTarget = element.clientHeight < element.scrollHeight ? element : window;\n\n    if (!spyTarget) { return; }\n\n    // set instance option\n    ops.offset = +(options.offset || offsetData) || 10;\n\n    // set instance priority variables\n    vars = {};\n    vars.length = 0;\n    vars.items = [];\n    vars.offsets = [];\n    vars.isWindow = scrollTarget === window;\n    vars.activeItem = null;\n    vars.scrollHeight = 0;\n    vars.maxScroll = 0;\n\n    // prevent adding event handlers twice\n    if (!element.ScrollSpy) { toggleEvents(1); }\n\n    self.refresh();\n\n    // associate target with init object\n    element.ScrollSpy = self;\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Tab\n  ------------------------------------------ */\n\n  // TAB DEFINITION\n  // ==============\n\n  function Tab(elem, opsInput) {\n    var element;\n    // set options\n    var options = opsInput || {};\n\n    // bind\n    var self = this;\n\n    // event targets\n    var tabs;\n    var dropdown;\n\n    // custom events\n    var showCustomEvent;\n    var shownCustomEvent;\n    var hideCustomEvent;\n    var hiddenCustomEvent;\n\n    // more GC material\n    var next;\n    var tabsContentContainer = false;\n    var activeTab;\n    var activeContent;\n    var nextContent;\n    var containerHeight;\n    var equalContents;\n    var nextHeight;\n\n    // triggers\n    function triggerEnd() {\n      tabsContentContainer.style.height = '';\n      tabsContentContainer.classList.remove('collapsing');\n      tabs.isAnimating = false;\n    }\n    function triggerShow() {\n      if (tabsContentContainer) { // height animation\n        if (equalContents) {\n          triggerEnd();\n        } else {\n          setTimeout(function () { // enables height animation\n            tabsContentContainer.style.height = nextHeight + \"px\"; // height animation\n            reflow(tabsContentContainer);\n            emulateTransitionEnd(tabsContentContainer, triggerEnd);\n          }, 50);\n        }\n      } else {\n        tabs.isAnimating = false;\n      }\n      shownCustomEvent = bootstrapCustomEvent('shown', 'tab', { relatedTarget: activeTab });\n      dispatchCustomEvent.call(next, shownCustomEvent);\n    }\n    function triggerHide() {\n      if (tabsContentContainer) {\n        activeContent.style.float = 'left';\n        nextContent.style.float = 'left';\n        containerHeight = activeContent.scrollHeight;\n      }\n\n      showCustomEvent = bootstrapCustomEvent('show', 'tab', { relatedTarget: activeTab });\n      hiddenCustomEvent = bootstrapCustomEvent('hidden', 'tab', { relatedTarget: next });\n\n      dispatchCustomEvent.call(next, showCustomEvent);\n      if (showCustomEvent.defaultPrevented) { return; }\n\n      nextContent.classList.add('active');\n\n      activeContent.classList.remove('active');\n\n      if (tabsContentContainer) {\n        nextHeight = nextContent.scrollHeight;\n        equalContents = nextHeight === containerHeight;\n        tabsContentContainer.classList.add('collapsing');\n        tabsContentContainer.style.height = containerHeight + \"px\"; // height animation\n        reflow(tabsContentContainer);\n        activeContent.style.float = '';\n        nextContent.style.float = '';\n      }\n\n      if (nextContent.classList.contains('fade')) {\n        setTimeout(function () {\n          nextContent.classList.add('show');\n          emulateTransitionEnd(nextContent, triggerShow);\n        }, 20);\n      } else { triggerShow(); }\n\n      dispatchCustomEvent.call(activeTab, hiddenCustomEvent);\n    }\n    // private methods\n    function getActiveTab() {\n      var assign;\n\n      var activeTabs = tabs.getElementsByClassName('active');\n\n      if (activeTabs.length === 1 && !activeTabs[0].parentNode.classList.contains('dropdown')) {\n        (assign = activeTabs, activeTab = assign[0]);\n      } else if (activeTabs.length > 1) {\n        activeTab = activeTabs[activeTabs.length - 1];\n      }\n      return activeTab;\n    }\n    function getActiveContent() { return queryElement(getActiveTab().getAttribute('href')); }\n    // handler\n    function clickHandler(e) {\n      e.preventDefault();\n      next = e.currentTarget;\n      if (!tabs.isAnimating) { self.show(); }\n    }\n\n    // public method\n    self.show = function () { // the tab we clicked is now the next tab\n      next = next || element;\n\n      if (!next.classList.contains('active')) {\n        nextContent = queryElement(next.getAttribute('href')); // this is the actual object, the next tab content to activate\n        activeTab = getActiveTab();\n        activeContent = getActiveContent();\n\n        hideCustomEvent = bootstrapCustomEvent('hide', 'tab', { relatedTarget: next });\n        dispatchCustomEvent.call(activeTab, hideCustomEvent);\n        if (hideCustomEvent.defaultPrevented) { return; }\n\n        tabs.isAnimating = true;\n        activeTab.classList.remove('active');\n        activeTab.setAttribute('aria-selected', 'false');\n        next.classList.add('active');\n        next.setAttribute('aria-selected', 'true');\n\n        if (dropdown) {\n          if (!element.parentNode.classList.contains('dropdown-menu')) {\n            if (dropdown.classList.contains('active')) { dropdown.classList.remove('active'); }\n          } else if (!dropdown.classList.contains('active')) { dropdown.classList.add('active'); }\n        }\n\n        if (activeContent.classList.contains('fade')) {\n          activeContent.classList.remove('show');\n          emulateTransitionEnd(activeContent, triggerHide);\n        } else { triggerHide(); }\n      }\n    };\n    self.dispose = function () {\n      element.removeEventListener('click', clickHandler, false);\n      delete element.Tab;\n    };\n\n    // INIT\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Tab) { element.Tab.dispose(); }\n\n    // DATA API\n    var heightData = element.getAttribute('data-height');\n    // event targets\n    tabs = element.closest('.nav');\n    dropdown = tabs && queryElement('.dropdown-toggle', tabs);\n\n    // instance options\n    var animateHeight = !(!supportTransition || (options.height === false || heightData === 'false'));\n\n    // set default animation state\n    tabs.isAnimating = false;\n\n    // init\n    if (!element.Tab) { // prevent adding event handlers twice\n      element.addEventListener('click', clickHandler, false);\n    }\n\n    if (animateHeight) { tabsContentContainer = getActiveContent().parentNode; }\n\n    // associate target with init object\n    element.Tab = self;\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Toast\n  -------------------------------------------- */\n\n  // TOAST DEFINITION\n  // ==================\n\n  function Toast(elem, opsInput) {\n    var element;\n\n    // set options\n    var options = opsInput || {};\n\n    // bind\n    var self = this;\n\n    // toast, timer\n    var toast;\n    var timer = 0;\n\n    // custom events\n    var showCustomEvent;\n    var hideCustomEvent;\n    var shownCustomEvent;\n    var hiddenCustomEvent;\n    var ops = {};\n\n    // private methods\n    function showComplete() {\n      toast.classList.remove('showing');\n      toast.classList.add('show');\n      dispatchCustomEvent.call(toast, shownCustomEvent);\n      if (ops.autohide) { self.hide(); }\n    }\n    function hideComplete() {\n      toast.classList.add('hide');\n      dispatchCustomEvent.call(toast, hiddenCustomEvent);\n    }\n    function close() {\n      toast.classList.remove('show');\n      if (ops.animation) { emulateTransitionEnd(toast, hideComplete); }\n      else { hideComplete(); }\n    }\n    function disposeComplete() {\n      clearTimeout(timer);\n      element.removeEventListener('click', self.hide, false);\n\n      delete element.Toast;\n    }\n\n    // public methods\n    self.show = function () {\n      if (toast && !toast.classList.contains('show')) {\n        dispatchCustomEvent.call(toast, showCustomEvent);\n        if (showCustomEvent.defaultPrevented) { return; }\n        if (ops.animation) { toast.classList.add('fade'); }\n        toast.classList.remove('hide');\n        reflow(toast); // force reflow\n        toast.classList.add('showing');\n\n        if (ops.animation) { emulateTransitionEnd(toast, showComplete); }\n        else { showComplete(); }\n      }\n    };\n    self.hide = function (noTimer) {\n      if (toast && toast.classList.contains('show')) {\n        dispatchCustomEvent.call(toast, hideCustomEvent);\n        if (hideCustomEvent.defaultPrevented) { return; }\n\n        if (noTimer) { close(); }\n        else { timer = setTimeout(close, ops.delay); }\n      }\n    };\n    self.dispose = function () {\n      if (ops.animation) { emulateTransitionEnd(toast, disposeComplete); }\n      else { disposeComplete(); }\n    };\n\n    // init\n\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Toast) { element.Toast.dispose(); }\n\n    // toast, timer\n    toast = element.closest('.toast');\n\n    // DATA API\n    var animationData = element.getAttribute('data-animation');\n    var autohideData = element.getAttribute('data-autohide');\n    var delayData = element.getAttribute('data-delay');\n\n    // custom events\n    showCustomEvent = bootstrapCustomEvent('show', 'toast');\n    hideCustomEvent = bootstrapCustomEvent('hide', 'toast');\n    shownCustomEvent = bootstrapCustomEvent('shown', 'toast');\n    hiddenCustomEvent = bootstrapCustomEvent('hidden', 'toast');\n\n    // set instance options\n    ops.animation = options.animation === false || animationData === 'false' ? 0 : 1; // true by default\n    ops.autohide = options.autohide === false || autohideData === 'false' ? 0 : 1; // true by default\n    ops.delay = parseInt((options.delay || delayData), 10) || 500; // 500ms default\n\n    if (!element.Toast) { // prevent adding event handlers twice\n      element.addEventListener('click', self.hide, false);\n    }\n\n    // associate targets to init object\n    element.Toast = self;\n  }\n\n  /* Native JavaScript for Bootstrap 4 | Tooltip\n  ---------------------------------------------- */\n\n  // TOOLTIP DEFINITION\n  // ==================\n\n  function Tooltip(elem, opsInput) {\n    var element;\n    // set options\n    var options = opsInput || {};\n\n    // bind\n    var self = this;\n\n    // tooltip, timer, and title\n    var tooltip = null;\n    var timer = 0;\n    var titleString;\n    var placementClass;\n\n    // custom events\n    var showCustomEvent;\n    var shownCustomEvent;\n    var hideCustomEvent;\n    var hiddenCustomEvent;\n\n    var ops = {};\n\n    // private methods\n    function getTitle() {\n      return element.getAttribute('title')\n          || element.getAttribute('data-title')\n          || element.getAttribute('data-original-title');\n    }\n    function removeToolTip() {\n      ops.container.removeChild(tooltip);\n      tooltip = null; timer = null;\n    }\n    function createToolTip() {\n      titleString = getTitle(); // read the title again\n      if (titleString) { // invalidate, maybe markup changed\n        // create tooltip\n        tooltip = document.createElement('div');\n\n        // set markup\n        if (ops.template) {\n          var tooltipMarkup = document.createElement('div');\n          tooltipMarkup.innerHTML = ops.template.trim();\n\n          tooltip.className = tooltipMarkup.firstChild.className;\n          tooltip.innerHTML = tooltipMarkup.firstChild.innerHTML;\n\n          queryElement('.tooltip-inner', tooltip).innerHTML = titleString.trim();\n        } else {\n          // tooltip arrow\n          var tooltipArrow = document.createElement('div');\n          tooltipArrow.classList.add('arrow');\n          tooltip.appendChild(tooltipArrow);\n          // tooltip inner\n          var tooltipInner = document.createElement('div');\n          tooltipInner.classList.add('tooltip-inner');\n          tooltip.appendChild(tooltipInner);\n          tooltipInner.innerHTML = titleString;\n        }\n        // reset position\n        tooltip.style.left = '0';\n        tooltip.style.top = '0';\n        // set class and role attribute\n        tooltip.setAttribute('role', 'tooltip');\n        if (!tooltip.classList.contains('tooltip')) { tooltip.classList.add('tooltip'); }\n        if (!tooltip.classList.contains(ops.animation)) { tooltip.classList.add(ops.animation); }\n        if (!tooltip.classList.contains(placementClass)) { tooltip.classList.add(placementClass); }\n        // append to container\n        ops.container.appendChild(tooltip);\n      }\n    }\n    function updateTooltip() {\n      styleTip(element, tooltip, ops.placement, ops.container);\n    }\n    function showTooltip() {\n      if (!tooltip.classList.contains('show')) { tooltip.classList.add('show'); }\n    }\n    function touchHandler(e) {\n      if ((tooltip && tooltip.contains(e.target))\n        || e.target === element || element.contains(e.target)) ; else {\n        self.hide();\n      }\n    }\n    // triggers\n    function toggleAction(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      document[action]('touchstart', touchHandler, passiveHandler);\n      window[action]('resize', self.hide, passiveHandler);\n    }\n    function showAction() {\n      toggleAction(1);\n      dispatchCustomEvent.call(element, shownCustomEvent);\n    }\n    function hideAction() {\n      toggleAction();\n      removeToolTip();\n      dispatchCustomEvent.call(element, hiddenCustomEvent);\n    }\n    function toggleEvents(add) {\n      var action = add ? 'addEventListener' : 'removeEventListener';\n      element[action](mouseClickEvents.down, self.show, false);\n      element[action](mouseHoverEvents[0], self.show, false);\n      element[action](mouseHoverEvents[1], self.hide, false);\n    }\n\n    // public methods\n    self.show = function () {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        if (tooltip === null) {\n          dispatchCustomEvent.call(element, showCustomEvent);\n          if (showCustomEvent.defaultPrevented) { return; }\n          // if(createToolTip() == false) return;\n          if (createToolTip() !== false) {\n            updateTooltip();\n            showTooltip();\n            if (ops.animation) { emulateTransitionEnd(tooltip, showAction); }\n            else { showAction(); }\n          }\n        }\n      }, 20);\n    };\n    self.hide = function () {\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        if (tooltip && tooltip.classList.contains('show')) {\n          dispatchCustomEvent.call(element, hideCustomEvent);\n          if (hideCustomEvent.defaultPrevented) { return; }\n          tooltip.classList.remove('show');\n          if (ops.animation) { emulateTransitionEnd(tooltip, hideAction); }\n          else { hideAction(); }\n        }\n      }, ops.delay);\n    };\n    self.toggle = function () {\n      if (!tooltip) { self.show(); }\n      else { self.hide(); }\n    };\n    self.dispose = function () {\n      toggleEvents();\n      self.hide();\n      element.setAttribute('title', element.getAttribute('data-original-title'));\n      element.removeAttribute('data-original-title');\n      delete element.Tooltip;\n    };\n\n    // init\n    // initialization element\n    element = queryElement(elem);\n\n    // reset on re-init\n    if (element.Tooltip) { element.Tooltip.dispose(); }\n\n    // DATA API\n    var animationData = element.getAttribute('data-animation');\n    var placementData = element.getAttribute('data-placement');\n    var delayData = element.getAttribute('data-delay');\n    var containerData = element.getAttribute('data-container');\n\n    // check container\n    var containerElement = queryElement(options.container);\n    var containerDataElement = queryElement(containerData);\n\n    // maybe the element is inside a modal\n    var modal = element.closest('.modal');\n\n    // custom events\n    showCustomEvent = bootstrapCustomEvent('show', 'tooltip');\n    shownCustomEvent = bootstrapCustomEvent('shown', 'tooltip');\n    hideCustomEvent = bootstrapCustomEvent('hide', 'tooltip');\n    hiddenCustomEvent = bootstrapCustomEvent('hidden', 'tooltip');\n\n    // maybe the element is inside a fixed navbar\n    var navbarFixedTop = element.closest('.fixed-top');\n    var navbarFixedBottom = element.closest('.fixed-bottom');\n\n    // set instance options\n    ops.animation = options.animation && options.animation !== 'fade' ? options.animation : animationData || 'fade';\n    ops.placement = options.placement ? options.placement : placementData || 'top';\n    ops.template = options.template ? options.template : null; // JavaScript only\n    ops.delay = parseInt((options.delay || delayData), 10) || 200;\n    ops.container = containerElement\n      || (containerDataElement\n        || (navbarFixedTop || (navbarFixedBottom || (modal || document.body))));\n\n    // set placement class\n    placementClass = \"bs-tooltip-\" + (ops.placement);\n\n    // set tooltip content\n    titleString = getTitle();\n\n    // invalidate\n    if (!titleString) { return; }\n\n    // prevent adding event handlers twice\n    if (!element.Tooltip) {\n      element.setAttribute('data-original-title', titleString);\n      element.removeAttribute('title');\n      toggleEvents(1);\n    }\n\n    // associate target to init object\n    element.Tooltip = self;\n  }\n\n  var componentsInit = {};\n\n  /* Native JavaScript for Bootstrap | Initialize Data API\n  -------------------------------------------------------- */\n  function initializeDataAPI(Constructor, collection) {\n    Array.from(collection).map(function (x) { return new Constructor(x); });\n  }\n  function initCallback(context) {\n    var lookUp = context instanceof Element ? context : document;\n    Object.keys(componentsInit).forEach(function (component) {\n      initializeDataAPI(componentsInit[component][0],\n        lookUp.querySelectorAll(componentsInit[component][1]));\n    });\n  }\n\n  componentsInit.Alert = [Alert, '[data-dismiss=\"alert\"]'];\n  componentsInit.Button = [Button, '[data-toggle=\"buttons\"]'];\n  componentsInit.Carousel = [Carousel, '[data-ride=\"carousel\"]'];\n  componentsInit.Collapse = [Collapse, '[data-toggle=\"collapse\"]'];\n  componentsInit.Dropdown = [Dropdown, '[data-toggle=\"dropdown\"]'];\n  componentsInit.Modal = [Modal, '[data-toggle=\"modal\"]'];\n  componentsInit.Popover = [Popover, '[data-toggle=\"popover\"],[data-tip=\"popover\"]'];\n  componentsInit.ScrollSpy = [ScrollSpy, '[data-spy=\"scroll\"]'];\n  componentsInit.Tab = [Tab, '[data-toggle=\"tab\"]'];\n  componentsInit.Toast = [Toast, '[data-dismiss=\"toast\"]'];\n  componentsInit.Tooltip = [Tooltip, '[data-toggle=\"tooltip\"],[data-tip=\"tooltip\"]'];\n\n  // bulk initialize all components\n  if (document.body) { initCallback(); }\n  else {\n    document.addEventListener('DOMContentLoaded', function initWrapper() {\n      initCallback();\n      document.removeEventListener('DOMContentLoaded', initWrapper, false);\n    }, false);\n  }\n\n  /* Native JavaScript for Bootstrap | Remove Data API\n  ---------------------------------------------------- */\n  function removeElementDataAPI(ConstructorName, collection) {\n    Array.from(collection).map(function (x) { return x[ConstructorName].dispose(); });\n  }\n  function removeDataAPI(context) {\n    var lookUp = context instanceof Element ? context : document;\n    Object.keys(componentsInit).forEach(function (component) {\n      removeElementDataAPI(component, lookUp.querySelectorAll(componentsInit[component][1]));\n    });\n  }\n\n  var version = \"4.0.6\";\n\n  var indexV4 = {\n    Alert: Alert,\n    Button: Button,\n    Carousel: Carousel,\n    Collapse: Collapse,\n    Dropdown: Dropdown,\n    Modal: Modal,\n    Popover: Popover,\n    ScrollSpy: ScrollSpy,\n    Tab: Tab,\n    Toast: Toast,\n    Tooltip: Tooltip,\n\n    initCallback: initCallback,\n    removeDataAPI: removeDataAPI,\n    componentsInit: componentsInit,\n    Version: version,\n  };\n\n  return indexV4;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/bootstrap.native/dist/bootstrap-native-v4.js\n");

/***/ }),

/***/ "./node_modules/htmx.org/dist/htmx.min.js":
/*!************************************************!*\
  !*** ./node_modules/htmx.org/dist/htmx.min.js ***!
  \************************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(e,t){if(true){!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))}else{}})(typeof self!==\"undefined\"?self:this,function(){return function(){\"use strict\";var D={onLoad:t,process:nt,on:N,off:I,trigger:ft,ajax:Jt,find:w,findAll:S,closest:L,values:function(e,t){var r=Tt(e,t||\"post\");return r.values},remove:E,addClass:C,removeClass:q,toggleClass:R,takeClass:O,defineExtension:er,removeExtension:tr,logAll:b,logger:null,config:{historyEnabled:true,historyCacheSize:10,refreshOnHistoryMiss:false,defaultSwapStyle:\"innerHTML\",defaultSwapDelay:0,defaultSettleDelay:20,includeIndicatorStyles:true,indicatorClass:\"htmx-indicator\",requestClass:\"htmx-request\",settlingClass:\"htmx-settling\",swappingClass:\"htmx-swapping\",allowEval:true,attributesToSettle:[\"class\",\"style\",\"width\",\"height\"],withCredentials:false,timeout:0,wsReconnectDelay:\"full-jitter\",disableSelector:\"[hx-disable], [data-hx-disable]\",useTemplateFragments:false,scrollBehavior:\"smooth\"},parseInterval:h,_:e,createEventSource:function(e){return new EventSource(e,{withCredentials:true})},createWebSocket:function(e){return new WebSocket(e,[])},version:\"1.5.0\"};var r=[\"get\",\"post\",\"put\",\"delete\",\"patch\"];var n=r.map(function(e){return\"[hx-\"+e+\"], [data-hx-\"+e+\"]\"}).join(\", \");function h(e){if(e==undefined){return undefined}if(e.slice(-2)==\"ms\"){return parseFloat(e.slice(0,-2))||undefined}if(e.slice(-1)==\"s\"){return parseFloat(e.slice(0,-1))*1e3||undefined}return parseFloat(e)||undefined}function c(e,t){return e.getAttribute&&e.getAttribute(t)}function s(e,t){return e.hasAttribute&&(e.hasAttribute(t)||e.hasAttribute(\"data-\"+t))}function F(e,t){return c(e,t)||c(e,\"data-\"+t)}function l(e){return e.parentElement}function X(){return document}function d(e,t){if(t(e)){return e}else if(l(e)){return d(l(e),t)}else{return null}}function P(e,t){var r=null;d(e,function(e){return r=F(e,t)});return r}function v(e,t){var r=e.matches||e.matchesSelector||e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||e.oMatchesSelector;return r&&r.call(e,t)}function i(e){var t=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;var r=t.exec(e);if(r){return r[1].toLowerCase()}else{return\"\"}}function o(e,t){var r=new DOMParser;var n=r.parseFromString(e,\"text/html\");var i=n.body;while(t>0){t--;i=i.firstChild}if(i==null){i=X().createDocumentFragment()}return i}function u(e){if(D.config.useTemplateFragments){var t=o(\"<body><template>\"+e+\"</template></body>\",0);return t.querySelector(\"template\").content}else{var r=i(e);switch(r){case\"thead\":case\"tbody\":case\"tfoot\":case\"colgroup\":case\"caption\":return o(\"<table>\"+e+\"</table>\",1);case\"col\":return o(\"<table><colgroup>\"+e+\"</colgroup></table>\",2);case\"tr\":return o(\"<table><tbody>\"+e+\"</tbody></table>\",2);case\"td\":case\"th\":return o(\"<table><tbody><tr>\"+e+\"</tr></tbody></table>\",3);case\"script\":return o(\"<div>\"+e+\"</div>\",1);default:return o(e,0)}}}function U(e){if(e){e()}}function a(e,t){return Object.prototype.toString.call(e)===\"[object \"+t+\"]\"}function f(e){return a(e,\"Function\")}function g(e){return a(e,\"Object\")}function j(e){var t=\"htmx-internal-data\";var r=e[t];if(!r){r=e[t]={}}return r}function p(e){var t=[];if(e){for(var r=0;r<e.length;r++){t.push(e[r])}}return t}function B(e,t){if(e){for(var r=0;r<e.length;r++){t(e[r])}}}function m(e){var t=e.getBoundingClientRect();var r=t.top;var n=t.bottom;return r<window.innerHeight&&n>=0}function z(e){return X().body.contains(e)}function y(e){return e.trim().split(/\\s+/)}function V(e,t){for(var r in t){if(t.hasOwnProperty(r)){e[r]=t[r]}}return e}function x(e){try{return JSON.parse(e)}catch(e){lt(e);return null}}function e(e){return jt(X().body,function(){return eval(e)})}function t(t){var e=D.on(\"htmx:load\",function(e){t(e.detail.elt)});return e}function b(){D.logger=function(e,t,r){if(console){console.log(t,e,r)}}}function w(e,t){if(t){return e.querySelector(t)}else{return w(X(),e)}}function S(e,t){if(t){return e.querySelectorAll(t)}else{return S(X(),e)}}function E(e,t){e=H(e);if(t){setTimeout(function(){E(e)},t)}else{e.parentElement.removeChild(e)}}function C(e,t,r){e=H(e);if(r){setTimeout(function(){C(e,t)},r)}else{e.classList.add(t)}}function q(e,t,r){e=H(e);if(r){setTimeout(function(){q(e,t)},r)}else{e.classList.remove(t)}}function R(e,t){e=H(e);e.classList.toggle(t)}function O(e,t){e=H(e);B(e.parentElement.children,function(e){q(e,t)});C(e,t)}function L(e,t){e=H(e);if(e.closest){return e.closest(t)}else{do{if(e==null||v(e,t)){return e}}while(e=e&&l(e))}}function T(e,t){if(t.indexOf(\"closest \")===0){return[L(e,t.substr(8))]}else if(t.indexOf(\"find \")===0){return[w(e,t.substr(5))]}else if(t===\"document\"){return[document]}else{return X().querySelectorAll(t)}}function A(e,t){return T(e,t)[0]}function H(e){if(a(e,\"String\")){return w(e)}else{return e}}function k(e,t,r){if(f(t)){return{target:X().body,event:e,listener:t}}else{return{target:H(e),event:t,listener:r}}}function N(t,r,n){nr(function(){var e=k(t,r,n);e.target.addEventListener(e.event,e.listener)});var e=f(r);return e?r:n}function I(t,r,n){nr(function(){var e=k(t,r,n);e.target.removeEventListener(e.event,e.listener)});return f(r)?r:n}function _(e){var t=d(e,function(e){return F(e,\"hx-target\")!==null});if(t){var r=F(t,\"hx-target\");if(r===\"this\"){return t}else{return A(e,r)}}else{var n=j(e);if(n.boosted){return X().body}else{return e}}}function M(e){var t=D.config.attributesToSettle;for(var r=0;r<t.length;r++){if(e===t[r]){return true}}return false}function W(t,r){B(t.attributes,function(e){if(!r.hasAttribute(e.name)&&M(e.name)){t.removeAttribute(e.name)}});B(r.attributes,function(e){if(M(e.name)){t.setAttribute(e.name,e.value)}})}function $(e,t){var r=rr(t);for(var n=0;n<r.length;n++){var i=r[n];try{if(i.isInlineSwap(e)){return true}}catch(e){lt(e)}}return e===\"outerHTML\"}function J(e,t,r){var n=\"#\"+t.id;var i=\"outerHTML\";if(e===\"true\"){}else if(e.indexOf(\":\")>0){i=e.substr(0,e.indexOf(\":\"));n=e.substr(e.indexOf(\":\")+1,e.length)}else{i=e}var o=X().querySelector(n);if(o){var a;a=X().createDocumentFragment();a.appendChild(t);if(!$(i,o)){a=t}le(i,o,o,a,r)}else{t.parentNode.removeChild(t);at(X().body,\"htmx:oobErrorNoTarget\",{content:t})}return e}function Z(e,r){B(S(e,\"[hx-swap-oob], [data-hx-swap-oob]\"),function(e){var t=F(e,\"hx-swap-oob\");if(t!=null){J(t,e,r)}})}function G(e){B(S(e,\"[hx-preserve], [data-hx-preserve]\"),function(e){var t=F(e,\"id\");var r=X().getElementById(t);if(r!=null){e.parentNode.replaceChild(r,e)}})}function K(n,e,i){B(e.querySelectorAll(\"[id]\"),function(e){if(e.id&&e.id.length>0){var t=n.querySelector(e.tagName+\"[id='\"+e.id+\"']\");if(t&&t!==n){var r=e.cloneNode();W(e,t);i.tasks.push(function(){W(e,r)})}}})}function Y(e){return function(){nt(e);Ye(e);Q(e);ft(e,\"htmx:load\")}}function Q(e){var t=\"[autofocus]\";var r=v(e,t)?e:e.querySelector(t);if(r!=null){r.focus()}}function ee(e,t,r,n){K(e,r,n);while(r.childNodes.length>0){var i=r.firstChild;e.insertBefore(i,t);if(i.nodeType!==Node.TEXT_NODE&&i.nodeType!==Node.COMMENT_NODE){n.tasks.push(Y(i))}}}function te(t){var e=j(t);if(e.webSocket){e.webSocket.close()}if(e.sseEventSource){e.sseEventSource.close()}if(e.listenerInfos){B(e.listenerInfos,function(e){if(t!==e.on){e.on.removeEventListener(e.trigger,e.listener)}})}if(t.children){B(t.children,function(e){te(e)})}}function re(e,t,r){if(e.tagName===\"BODY\"){return se(e,t,r)}else{var n=e.previousSibling;ee(l(e),e,t,r);if(n==null){var i=l(e).firstChild}else{var i=n.nextSibling}j(e).replacedWith=i;r.elts=[];while(i&&i!==e){if(i.nodeType===Node.ELEMENT_NODE){r.elts.push(i)}i=i.nextElementSibling}te(e);l(e).removeChild(e)}}function ne(e,t,r){return ee(e,e.firstChild,t,r)}function ie(e,t,r){return ee(l(e),e,t,r)}function oe(e,t,r){return ee(e,null,t,r)}function ae(e,t,r){return ee(l(e),e.nextSibling,t,r)}function se(e,t,r){var n=e.firstChild;ee(e,n,t,r);if(n){while(n.nextSibling){te(n.nextSibling);e.removeChild(n.nextSibling)}te(n);e.removeChild(n)}}function ue(e,t){var r=P(e,\"hx-select\");if(r){var n=X().createDocumentFragment();B(t.querySelectorAll(r),function(e){n.appendChild(e)});t=n}return t}function le(e,t,r,n,i){switch(e){case\"none\":return;case\"outerHTML\":re(r,n,i);return;case\"afterbegin\":ne(r,n,i);return;case\"beforebegin\":ie(r,n,i);return;case\"beforeend\":oe(r,n,i);return;case\"afterend\":ae(r,n,i);return;default:var o=rr(t);for(var a=0;a<o.length;a++){var s=o[a];try{var u=s.handleSwap(e,r,n,i);if(u){if(typeof u.length!==\"undefined\"){for(var l=0;l<u.length;l++){var f=u[l];if(f.nodeType!==Node.TEXT_NODE&&f.nodeType!==Node.COMMENT_NODE){i.tasks.push(Y(f))}}}return}}catch(e){lt(e)}}se(r,n,i)}}var fe=/<title>([\\s\\S]+?)<\\/title>/im;function ce(e){if(e.indexOf(\"<title>\")>-1&&(e.indexOf(\"<svg>\")==-1||e.indexOf(\"<title>\")<e.indexOf(\"<svg>\"))){var t=fe.exec(e);if(t){return t[1]}}}function he(e,t,r,n,i){var o=ce(n);if(o){var a=w(\"title\");if(a){a.innerHTML=o}else{window.document.title=o}}var s=u(n);if(s){Z(s,i);s=ue(r,s);G(s);return le(e,r,t,s,i)}}function de(e,t,r){var n=e.getResponseHeader(t);if(n.indexOf(\"{\")===0){var i=x(n);for(var o in i){if(i.hasOwnProperty(o)){var a=i[o];if(!g(a)){a={value:a}}ft(r,o,a)}}}else{ft(r,n,[])}}var ve=/\\s/;var ge=/[\\s,]/;var pe=/[_$a-zA-Z]/;var me=/[_$a-zA-Z0-9]/;var ye=['\"',\"'\",\"/\"];var xe=/[^\\s]/;function be(e){var t=[];var r=0;while(r<e.length){if(pe.exec(e.charAt(r))){var n=r;while(me.exec(e.charAt(r+1))){r++}t.push(e.substr(n,r-n+1))}else if(ye.indexOf(e.charAt(r))!==-1){var i=e.charAt(r);var n=r;r++;while(r<e.length&&e.charAt(r)!==i){if(e.charAt(r)===\"\\\\\"){r++}r++}t.push(e.substr(n,r-n+1))}else{var o=e.charAt(r);t.push(o)}r++}return t}function we(e,t,r){return pe.exec(e.charAt(0))&&e!==\"true\"&&e!==\"false\"&&e!==\"this\"&&e!==r&&t!==\".\"}function Se(e,t,r){if(t[0]===\"[\"){t.shift();var n=1;var i=\" return (function(\"+r+\"){ return (\";var o=null;while(t.length>0){var a=t[0];if(a===\"]\"){n--;if(n===0){if(o===null){i=i+\"true\"}t.shift();i+=\")})\";try{var s=jt(e,function(){return Function(i)()},function(){return true});s.source=i;return s}catch(e){at(X().body,\"htmx:syntax:error\",{error:e,source:i});return null}}}else if(a===\"[\"){n++}if(we(a,o,r)){i+=\"((\"+r+\".\"+a+\") ? (\"+r+\".\"+a+\") : (window.\"+a+\"))\"}else{i=i+a}o=t.shift()}}}function Ee(e,t){var r=\"\";while(e.length>0&&!e[0].match(t)){r+=e.shift()}return r}var Ce=\"input, textarea, select\";function qe(e){var t=F(e,\"hx-trigger\");var r=[];if(t){var n=be(t);do{Ee(n,xe);var i=n.length;var o=Ee(n,/[,\\[\\s]/);if(o!==\"\"){if(o===\"every\"){var a={trigger:\"every\"};Ee(n,xe);a.pollInterval=h(Ee(n,/[,\\[\\s]/));Ee(n,xe);var s=Se(e,n,\"event\");if(s){a.eventFilter=s}r.push(a)}else if(o.indexOf(\"sse:\")===0){r.push({trigger:\"sse\",sseEvent:o.substr(4)})}else{var u={trigger:o};var s=Se(e,n,\"event\");if(s){u.eventFilter=s}while(n.length>0&&n[0]!==\",\"){Ee(n,xe);var l=n.shift();if(l===\"changed\"){u.changed=true}else if(l===\"once\"){u.once=true}else if(l===\"consume\"){u.consume=true}else if(l===\"delay\"&&n[0]===\":\"){n.shift();u.delay=h(Ee(n,ge))}else if(l===\"from\"&&n[0]===\":\"){n.shift();u.from=Ee(n,ge)}else if(l===\"target\"&&n[0]===\":\"){n.shift();u.target=Ee(n,ge)}else if(l===\"throttle\"&&n[0]===\":\"){n.shift();u.throttle=h(Ee(n,ge))}else if(l===\"queue\"&&n[0]===\":\"){n.shift();u.queue=Ee(n,ge)}else if((l===\"root\"||l===\"threshold\")&&n[0]===\":\"){n.shift();u[l]=Ee(n,ge)}else{at(e,\"htmx:syntax:error\",{token:n.shift()})}}r.push(u)}}if(n.length===i){at(e,\"htmx:syntax:error\",{token:n.shift()})}Ee(n,xe)}while(n[0]===\",\"&&n.shift())}if(r.length>0){return r}else if(v(e,\"form\")){return[{trigger:\"submit\"}]}else if(v(e,Ce)){return[{trigger:\"change\"}]}else{return[{trigger:\"click\"}]}}function Re(e){j(e).cancelled=true}function Oe(e,t,r,n){var i=j(e);i.timeout=setTimeout(function(){if(z(e)&&i.cancelled!==true){if(!ke(n,ot(\"hx:poll:trigger\",{triggerSpec:n}))){Gt(t,r,e)}Oe(e,t,F(e,\"hx-\"+t),n)}},n.pollInterval)}function Le(e){return location.hostname===e.hostname&&c(e,\"href\")&&c(e,\"href\").indexOf(\"#\")!==0}function Te(t,r,e){if(t.tagName===\"A\"&&Le(t)||t.tagName===\"FORM\"){r.boosted=true;var n,i;if(t.tagName===\"A\"){n=\"get\";i=c(t,\"href\");r.pushURL=true}else{var o=c(t,\"method\");n=o?o.toLowerCase():\"get\";if(n===\"get\"){r.pushURL=true}i=c(t,\"action\")}e.forEach(function(e){Ne(t,n,i,r,e,true)})}}function Ae(e){return e.tagName===\"FORM\"||v(e,'input[type=\"submit\"], button')&&L(e,\"form\")!==null||e.tagName===\"A\"&&e.href&&(e.getAttribute(\"href\")===\"#\"||e.getAttribute(\"href\").indexOf(\"#\")!==0)}function He(e,t){return j(e).boosted&&e.tagName===\"A\"&&t.type===\"click\"&&(t.ctrlKey||t.metaKey)}function ke(e,t){var r=e.eventFilter;if(r){try{return r(t)!==true}catch(e){at(X().body,\"htmx:eventFilter:error\",{error:e,source:r.source});return true}}return false}function Ne(o,a,s,e,u,l){var t;if(u.from){t=T(o,u.from)}else{t=[o]}B(t,function(n){var i=function(e){if(!z(o)){n.removeEventListener(u.trigger,i);return}if(He(o,e)){return}if(l||Ae(o)){e.preventDefault()}if(ke(u,e)){return}var t=j(e);t.triggerSpec=u;if(t.handledFor==null){t.handledFor=[]}var r=j(o);if(t.handledFor.indexOf(o)<0){t.handledFor.push(o);if(u.consume){e.stopPropagation()}if(u.target&&e.target){if(!v(e.target,u.target)){return}}if(u.once){if(r.triggeredOnce){return}else{r.triggeredOnce=true}}if(u.changed){if(r.lastValue===o.value){return}else{r.lastValue=o.value}}if(r.delayed){clearTimeout(r.delayed)}if(r.throttle){return}if(u.throttle){if(!r.throttle){Gt(a,s,o,e);r.throttle=setTimeout(function(){r.throttle=null},u.throttle)}}else if(u.delay){r.delayed=setTimeout(function(){Gt(a,s,o,e)},u.delay)}else{Gt(a,s,o,e)}}};if(e.listenerInfos==null){e.listenerInfos=[]}e.listenerInfos.push({trigger:u.trigger,listener:i,on:n});n.addEventListener(u.trigger,i)})}var Ie=false;var Me=null;function De(){if(!Me){Me=function(){Ie=true};window.addEventListener(\"scroll\",Me);setInterval(function(){if(Ie){Ie=false;B(X().querySelectorAll(\"[hx-trigger='revealed'],[data-hx-trigger='revealed']\"),function(e){Fe(e)})}},200)}}function Fe(e){var t=j(e);if(!t.revealed&&m(e)){t.revealed=true;if(t.initialized){Gt(t.verb,t.path,e)}else{e.addEventListener(\"htmx:afterProcessNode\",function(){Gt(t.verb,t.path,e)},{once:true})}}}function Xe(e,t,r){var n=y(r);for(var i=0;i<n.length;i++){var o=n[i].split(/:(.+)/);if(o[0]===\"connect\"){Pe(e,o[1],0)}if(o[0]===\"send\"){je(e)}}}function Pe(s,r,n){if(!z(s)){return}if(r.indexOf(\"/\")==0){var e=location.hostname+(location.port?\":\"+location.port:\"\");if(location.protocol==\"https:\"){r=\"wss://\"+e+r}else if(location.protocol==\"http:\"){r=\"ws://\"+e+r}}var t=D.createWebSocket(r);t.onerror=function(e){at(s,\"htmx:wsError\",{error:e,socket:t});Ue(s)};t.onclose=function(e){if([1006,1012,1013].indexOf(e.code)>=0){var t=Be(n);setTimeout(function(){Pe(s,r,n+1)},t)}};t.onopen=function(e){n=0};j(s).webSocket=t;t.addEventListener(\"message\",function(e){if(Ue(s)){return}var t=e.data;ut(s,function(e){t=e.transformResponse(t,null,s)});var r=Xt(s);var n=u(t);var i=p(n.children);for(var o=0;o<i.length;o++){var a=i[o];J(F(a,\"hx-swap-oob\")||\"true\",a,r)}yt(r.tasks)})}function Ue(e){if(!z(e)){j(e).webSocket.close();return true}}function je(l){var f=d(l,function(e){return j(e).webSocket!=null});if(f){l.addEventListener(qe(l)[0].trigger,function(e){var t=j(f).webSocket;var r=Nt(l,f);var n=Tt(l,\"post\");var i=n.errors;var o=n.values;var a=Vt(l);var s=V(o,a);var u=It(s,l);u[\"HEADERS\"]=r;if(i&&i.length>0){ft(l,\"htmx:validation:halted\",i);return}t.send(JSON.stringify(u));if(Ae(l)){e.preventDefault()}})}else{at(l,\"htmx:noWebSocketSourceError\")}}function Be(e){var t=D.config.wsReconnectDelay;if(typeof t===\"function\"){return t(e)}if(t===\"full-jitter\"){var r=Math.min(e,6);var n=1e3*Math.pow(2,r);return n*Math.random()}lt('htmx.config.wsReconnectDelay must either be a function or the string \"full-jitter\"')}function ze(e,t,r){var n=y(r);for(var i=0;i<n.length;i++){var o=n[i].split(/:(.+)/);if(o[0]===\"connect\"){Ve(e,o[1])}if(o[0]===\"swap\"){_e(e,o[1])}}}function Ve(t,e){var r=D.createEventSource(e);r.onerror=function(e){at(t,\"htmx:sseError\",{error:e,source:r});$e(t)};j(t).sseEventSource=r}function _e(o,a){var s=d(o,Je);if(s){var u=j(s).sseEventSource;var l=function(e){if($e(s)){u.removeEventListener(a,l);return}var t=e.data;ut(o,function(e){t=e.transformResponse(t,null,o)});var r=Dt(o);var n=_(o);var i=Xt(o);he(r.swapStyle,o,n,t,i);yt(i.tasks);ft(o,\"htmx:sseMessage\",e)};j(o).sseListener=l;u.addEventListener(a,l)}else{at(o,\"htmx:noSSESourceError\")}}function We(e,t,r,n){var i=d(e,Je);if(i){var o=j(i).sseEventSource;var a=function(){if(!$e(i)){if(z(e)){Gt(t,r,e)}else{o.removeEventListener(n,a)}}};j(e).sseListener=a;o.addEventListener(n,a)}else{at(e,\"htmx:noSSESourceError\")}}function $e(e){if(!z(e)){j(e).sseEventSource.close();return true}}function Je(e){return j(e).sseEventSource!=null}function Ze(e,t,r,n,i){var o=function(){if(!n.loaded){n.loaded=true;Gt(t,r,e)}};if(i){setTimeout(o,i)}else{o()}}function Ge(o,a,e){var t=false;B(r,function(n){if(s(o,\"hx-\"+n)){var i=F(o,\"hx-\"+n);t=true;a.path=i;a.verb=n;e.forEach(function(e){if(e.sseEvent){We(o,n,i,e.sseEvent)}else if(e.trigger===\"revealed\"){De();Fe(o)}else if(e.trigger===\"intersect\"){var t={};if(e.root){t.root=A(e.root)}if(e.threshold){t.threshold=parseFloat(e.threshold)}var r=new IntersectionObserver(function(e){for(var t=0;t<e.length;t++){var r=e[t];if(r.isIntersecting){ft(o,\"intersect\");break}}},t);r.observe(o);Ne(o,n,i,a,e)}else if(e.trigger===\"load\"){Ze(o,n,i,a,e.delay)}else if(e.pollInterval){a.polling=true;Oe(o,n,i,e)}else{Ne(o,n,i,a,e)}})}});return t}function Ke(e){if(e.type===\"text/javascript\"||e.type===\"\"){try{jt(e,function(){(1,eval)(e.innerText)})}catch(e){lt(e)}}}function Ye(e){if(v(e,\"script\")){Ke(e)}B(S(e,\"script\"),function(e){Ke(e)})}function Qe(){return document.querySelector(\"[hx-boost], [data-hx-boost]\")}function et(e){if(e.querySelectorAll){var t=Qe()?\", a, form\":\"\";var r=e.querySelectorAll(n+t+\", [hx-sse], [data-hx-sse], [hx-ws],\"+\" [data-hx-ws]\");return r}else{return[]}}function tt(r){var e=function(e){if(v(e.target,\"button, input[type='submit']\")){var t=j(r);t.lastButtonClicked=e.target}};r.addEventListener(\"click\",e);r.addEventListener(\"focusin\",e);r.addEventListener(\"focusout\",function(e){var t=j(r);t.lastButtonClicked=null})}function rt(e){if(e.closest&&e.closest(D.config.disableSelector)){return}var t=j(e);if(!t.initialized){t.initialized=true;ft(e,\"htmx:beforeProcessNode\");if(e.value){t.lastValue=e.value}var r=qe(e);var n=Ge(e,t,r);if(!n&&P(e,\"hx-boost\")===\"true\"){Te(e,t,r)}if(e.tagName===\"FORM\"){tt(e)}var i=F(e,\"hx-sse\");if(i){ze(e,t,i)}var o=F(e,\"hx-ws\");if(o){Xe(e,t,o)}ft(e,\"htmx:afterProcessNode\")}}function nt(e){e=H(e);rt(e);B(et(e),function(e){rt(e)})}function it(e){return e.replace(/([a-z0-9])([A-Z])/g,\"$1-$2\").toLowerCase()}function ot(e,t){var r;if(window.CustomEvent&&typeof window.CustomEvent===\"function\"){r=new CustomEvent(e,{bubbles:true,cancelable:true,detail:t})}else{r=X().createEvent(\"CustomEvent\");r.initCustomEvent(e,true,true,t)}return r}function at(e,t,r){ft(e,t,V({error:t},r))}function st(e){return e===\"htmx:afterProcessNode\"}function ut(e,t){B(rr(e),function(e){try{t(e)}catch(e){lt(e)}})}function lt(e){if(console.error){console.error(e)}else if(console.log){console.log(\"ERROR: \",e)}}function ft(e,t,r){e=H(e);if(r==null){r={}}r[\"elt\"]=e;var n=ot(t,r);if(D.logger&&!st(t)){D.logger(e,t,r)}if(r.error){lt(r.error);ft(e,\"htmx:error\",{errorInfo:r})}var i=e.dispatchEvent(n);var o=it(t);if(i&&o!==t){var a=ot(o,n.detail);i=i&&e.dispatchEvent(a)}ut(e,function(e){i=i&&e.onEvent(t,n)!==false});return i}var ct=null;function ht(){var e=X().querySelector(\"[hx-history-elt],[data-hx-history-elt]\");return e||X().body}function dt(e,t,r,n){var i=x(localStorage.getItem(\"htmx-history-cache\"))||[];for(var o=0;o<i.length;o++){if(i[o].url===e){i.splice(o,1);break}}i.push({url:e,content:t,title:r,scroll:n});while(i.length>D.config.historyCacheSize){i.shift()}while(i.length>0){try{localStorage.setItem(\"htmx-history-cache\",JSON.stringify(i));break}catch(e){at(X().body,\"htmx:historyCacheError\",{cause:e,cache:i});i.shift()}}}function vt(e){var t=x(localStorage.getItem(\"htmx-history-cache\"))||[];for(var r=0;r<t.length;r++){if(t[r].url===e){return t[r]}}return null}function gt(e){var t=D.config.requestClass;var r=e.cloneNode(true);B(S(r,\".\"+t),function(e){q(e,t)});return r.innerHTML}function pt(){var e=ht();var t=ct||location.pathname+location.search;ft(X().body,\"htmx:beforeHistorySave\",{path:t,historyElt:e});if(D.config.historyEnabled)history.replaceState({htmx:true},X().title,window.location.href);dt(t,gt(e),X().title,window.scrollY)}function mt(e){if(D.config.historyEnabled)history.pushState({htmx:true},\"\",e);ct=e}function yt(e){B(e,function(e){e.call()})}function xt(n){var e=new XMLHttpRequest;var i={path:n,xhr:e};ft(X().body,\"htmx:historyCacheMiss\",i);e.open(\"GET\",n,true);e.setRequestHeader(\"HX-History-Restore-Request\",\"true\");e.onload=function(){if(this.status>=200&&this.status<400){ft(X().body,\"htmx:historyCacheMissLoad\",i);var e=u(this.response);e=e.querySelector(\"[hx-history-elt],[data-hx-history-elt]\")||e;var t=ht();var r=Xt(t);se(t,e,r);yt(r.tasks);ct=n;ft(X().body,\"htmx:historyRestore\",{path:n})}else{at(X().body,\"htmx:historyCacheMissLoadError\",i)}};e.send()}function bt(e){pt();e=e||location.pathname+location.search;var t=vt(e);if(t){var r=u(t.content);var n=ht();var i=Xt(n);se(n,r,i);yt(i.tasks);document.title=t.title;window.scrollTo(0,t.scroll);ct=e;ft(X().body,\"htmx:historyRestore\",{path:e})}else{if(D.config.refreshOnHistoryMiss){window.location.reload(true)}else{xt(e)}}}function wt(e){var t=P(e,\"hx-push-url\");return t&&t!==\"false\"||j(e).boosted&&j(e).pushURL}function St(e){var t=P(e,\"hx-push-url\");return t===\"true\"||t===\"false\"?null:t}function Et(e){var t=P(e,\"hx-indicator\");if(t){var r=T(e,t)}else{r=[e]}B(r,function(e){e.classList[\"add\"].call(e.classList,D.config.requestClass)});return r}function Ct(e){B(e,function(e){e.classList[\"remove\"].call(e.classList,D.config.requestClass)})}function qt(e,t){for(var r=0;r<e.length;r++){var n=e[r];if(n.isSameNode(t)){return true}}return false}function Rt(e){if(e.name===\"\"||e.name==null||e.disabled){return false}if(e.type===\"button\"||e.type===\"submit\"||e.tagName===\"image\"||e.tagName===\"reset\"||e.tagName===\"file\"){return false}if(e.type===\"checkbox\"||e.type===\"radio\"){return e.checked}return true}function Ot(t,r,n,e,i){if(e==null||qt(t,e)){return}else{t.push(e)}if(Rt(e)){var o=c(e,\"name\");var a=e.value;if(e.multiple){a=p(e.querySelectorAll(\"option:checked\")).map(function(e){return e.value})}if(e.files){a=p(e.files)}if(o!=null&&a!=null){var s=r[o];if(s){if(Array.isArray(s)){if(Array.isArray(a)){r[o]=s.concat(a)}else{s.push(a)}}else{if(Array.isArray(a)){r[o]=[s].concat(a)}else{r[o]=[s,a]}}}else{r[o]=a}}if(i){Lt(e,n)}}if(v(e,\"form\")){var u=e.elements;B(u,function(e){Ot(t,r,n,e,i)})}}function Lt(e,t){if(e.willValidate){ft(e,\"htmx:validation:validate\");if(!e.checkValidity()){t.push({elt:e,message:e.validationMessage,validity:e.validity});ft(e,\"htmx:validation:failed\",{message:e.validationMessage,validity:e.validity})}}}function Tt(e,t){var r=[];var n={};var i={};var o=[];var a=v(e,\"form\")&&e.noValidate!==true;if(t!==\"get\"){Ot(r,i,o,L(e,\"form\"),a)}Ot(r,n,o,e,a);var s=j(e);if(s.lastButtonClicked){var u=c(s.lastButtonClicked,\"name\");if(u){n[u]=s.lastButtonClicked.value}}var l=P(e,\"hx-include\");if(l){var f=T(e,l);B(f,function(e){Ot(r,n,o,e,a);if(!v(e,\"form\")){B(e.querySelectorAll(Ce),function(e){Ot(r,n,o,e,a)})}})}n=V(n,i);return{errors:o,values:n}}function At(e,t,r){if(e!==\"\"){e+=\"&\"}e+=encodeURIComponent(t)+\"=\"+encodeURIComponent(r);return e}function Ht(e){var t=\"\";for(var r in e){if(e.hasOwnProperty(r)){var n=e[r];if(Array.isArray(n)){B(n,function(e){t=At(t,r,e)})}else{t=At(t,r,n)}}}return t}function kt(e){var t=new FormData;for(var r in e){if(e.hasOwnProperty(r)){var n=e[r];if(Array.isArray(n)){B(n,function(e){t.append(r,e)})}else{t.append(r,n)}}}return t}function Nt(e,t,r){var n={\"HX-Request\":\"true\",\"HX-Trigger\":c(e,\"id\"),\"HX-Trigger-Name\":c(e,\"name\"),\"HX-Target\":F(t,\"id\"),\"HX-Current-URL\":X().location.href};Ut(e,\"hx-headers\",false,n);if(r!==undefined){n[\"HX-Prompt\"]=r}return n}function It(t,e){var r=P(e,\"hx-params\");if(r){if(r===\"none\"){return{}}else if(r===\"*\"){return t}else if(r.indexOf(\"not \")===0){B(r.substr(4).split(\",\"),function(e){e=e.trim();delete t[e]});return t}else{var n={};B(r.split(\",\"),function(e){e=e.trim();n[e]=t[e]});return n}}else{return t}}function Mt(e){return c(e,\"href\")&&c(e,\"href\").indexOf(\"#\")>=0}function Dt(e){var t=P(e,\"hx-swap\");var r={swapStyle:j(e).boosted?\"innerHTML\":D.config.defaultSwapStyle,swapDelay:D.config.defaultSwapDelay,settleDelay:D.config.defaultSettleDelay};if(j(e).boosted&&!Mt(e)){r[\"show\"]=\"top\"}if(t){var n=y(t);if(n.length>0){r[\"swapStyle\"]=n[0];for(var i=1;i<n.length;i++){var o=n[i];if(o.indexOf(\"swap:\")===0){r[\"swapDelay\"]=h(o.substr(5))}if(o.indexOf(\"settle:\")===0){r[\"settleDelay\"]=h(o.substr(7))}if(o.indexOf(\"scroll:\")===0){var a=o.substr(7);var s=a.split(\":\");var u=s.pop();var l=s.length>0?s.join(\":\"):null;r[\"scroll\"]=u;r[\"scrollTarget\"]=l}if(o.indexOf(\"show:\")===0){var f=o.substr(5);var s=f.split(\":\");var c=s.pop();var l=s.length>0?s.join(\":\"):null;r[\"show\"]=c;r[\"showTarget\"]=l}}}}return r}function Ft(t,r,n){var i=null;ut(r,function(e){if(i==null){i=e.encodeParameters(t,n,r)}});if(i!=null){return i}else{if(P(r,\"hx-encoding\")===\"multipart/form-data\"){return kt(n)}else{return Ht(n)}}}function Xt(e){return{tasks:[],elts:[e]}}function Pt(e,t){var r=e[0];var n=e[e.length-1];if(t.scroll){var i=null;if(t.scrollTarget){i=A(r,t.scrollTarget)}if(t.scroll===\"top\"&&(r||i)){i=i||r;i.scrollTop=0}if(t.scroll===\"bottom\"&&(n||i)){i=i||n;i.scrollTop=i.scrollHeight}}if(t.show){var i=null;if(t.showTarget){var o=t.showTarget;if(t.showTarget===\"window\"){o=\"body\"}i=A(r,o)}if(t.show===\"top\"&&(r||i)){i=i||r;i.scrollIntoView({block:\"start\",behavior:D.config.scrollBehavior})}if(t.show===\"bottom\"&&(n||i)){i=i||n;i.scrollIntoView({block:\"end\",behavior:D.config.scrollBehavior})}}}function Ut(e,t,r,n){if(n==null){n={}}if(e==null){return n}var i=F(e,t);if(i){var o=i.trim();var a=r;if(o.indexOf(\"javascript:\")===0){o=o.substr(11);a=true}else if(o.indexOf(\"js:\")===0){o=o.substr(3);a=true}if(o.indexOf(\"{\")!==0){o=\"{\"+o+\"}\"}var s;if(a){s=jt(e,function(){return Function(\"return (\"+o+\")\")()},{})}else{s=x(o)}for(var u in s){if(s.hasOwnProperty(u)){if(n[u]==null){n[u]=s[u]}}}}return Ut(l(e),t,r,n)}function jt(e,t,r){if(D.config.allowEval){return t()}else{at(e,\"htmx:evalDisallowedError\");return r}}function Bt(e,t){return Ut(e,\"hx-vars\",true,t)}function zt(e,t){return Ut(e,\"hx-vals\",false,t)}function Vt(e){return V(Bt(e),zt(e))}function _t(t,r,n){if(n!==null){try{t.setRequestHeader(r,n)}catch(e){t.setRequestHeader(r,encodeURIComponent(n));t.setRequestHeader(r+\"-URI-AutoEncoded\",\"true\")}}}function Wt(t){if(t.responseURL&&typeof URL!==\"undefined\"){try{var e=new URL(t.responseURL);return e.pathname+e.search}catch(e){at(X().body,\"htmx:badResponseUrl\",{url:t.responseURL})}}}function $t(e,t){return e.getAllResponseHeaders().match(t)}function Jt(e,t,r){if(r){if(r instanceof Element||a(r,\"String\")){return Gt(e,t,null,null,{targetOverride:H(r)})}else{return Gt(e,t,H(r.source),r.event,{handler:r.handler,headers:r.headers,values:r.values,targetOverride:H(r.target)})}}else{return Gt(e,t)}}function Zt(e){var t=[];while(e){t.push(e);e=e.parentElement}return t}function Gt(e,t,n,r,i){var o=null;var a=null;i=i!=null?i:{};if(typeof Promise!==\"undefined\"){var s=new Promise(function(e,t){o=e;a=t})}if(n==null){n=X().body}var u=i.handler||Kt;if(!z(n)){return}var l=i.targetOverride||_(n);if(l==null){at(n,\"htmx:targetError\",{target:F(n,\"hx-target\")});return}var f=j(n);if(f.requestInFlight){var c=\"last\";if(r){var h=j(r);if(h&&h.triggerSpec&&h.triggerSpec.queue){c=h.triggerSpec.queue}}if(f.queuedRequests==null){f.queuedRequests=[]}if(c===\"first\"&&f.queuedRequests.length===0){f.queuedRequests.push(function(){Gt(e,t,n,r)})}else if(c===\"all\"){f.queuedRequests.push(function(){Gt(e,t,n,r)})}else if(c===\"last\"){f.queuedRequests=[];f.queuedRequests.push(function(){Gt(e,t,n,r)})}return}else{f.requestInFlight=true}var d=function(){f.requestInFlight=false;if(f.queuedRequests!=null&&f.queuedRequests.length>0){var e=f.queuedRequests.shift();e()}};var v=P(n,\"hx-prompt\");if(v){var g=prompt(v);if(g===null||!ft(n,\"htmx:prompt\",{prompt:g,target:l})){U(o);d();return s}}var p=P(n,\"hx-confirm\");if(p){if(!confirm(p)){U(o);d();return s}}var m=new XMLHttpRequest;var y=Nt(n,l,g);if(i.headers){y=V(y,i.headers)}var x=Tt(n,e);var b=x.errors;var w=x.values;if(i.values){w=V(w,i.values)}var S=Vt(n);var E=V(w,S);var C=It(E,n);if(e!==\"get\"&&P(n,\"hx-encoding\")==null){y[\"Content-Type\"]=\"application/x-www-form-urlencoded; charset=UTF-8\"}if(t==null||t===\"\"){t=X().location.href}var q=Ut(n,\"hx-request\");var R={parameters:C,unfilteredParameters:E,headers:y,target:l,verb:e,errors:b,withCredentials:i.credentials||q.credentials||D.config.withCredentials,timeout:i.timeout||q.timeout||D.config.timeout,path:t,triggeringEvent:r};if(!ft(n,\"htmx:configRequest\",R)){U(o);d();return s}t=R.path;e=R.verb;y=R.headers;C=R.parameters;b=R.errors;if(b&&b.length>0){ft(n,\"htmx:validation:halted\",R);U(o);d();return s}var O=t.split(\"#\");var L=O[0];var T=O[1];if(e===\"get\"){var A=L;var H=Object.keys(C).length!==0;if(H){if(A.indexOf(\"?\")<0){A+=\"?\"}else{A+=\"&\"}A+=Ht(C);if(T){A+=\"#\"+T}}m.open(\"GET\",A,true)}else{m.open(e.toUpperCase(),t,true)}m.overrideMimeType(\"text/html\");m.withCredentials=R.withCredentials;m.timeout=R.timeout;if(q.noHeaders){}else{for(var k in y){if(y.hasOwnProperty(k)){var N=y[k];_t(m,k,N)}}}var I={xhr:m,target:l,requestConfig:R,pathInfo:{path:t,finalPath:A,anchor:T}};m.onload=function(){try{var e=Zt(n);u(n,I);Ct(M);ft(n,\"htmx:afterRequest\",I);ft(n,\"htmx:afterOnLoad\",I);if(!z(n)){var t=null;while(e.length>0&&t==null){var r=e.shift();if(z(r)){t=r}}if(t){ft(t,\"htmx:afterRequest\",I);ft(t,\"htmx:afterOnLoad\",I)}}U(o);d()}catch(e){at(n,\"htmx:onLoadError\",V({error:e},I));throw e}};m.onerror=function(){Ct(M);at(n,\"htmx:afterRequest\",I);at(n,\"htmx:sendError\",I);U(a);d()};m.onabort=function(){Ct(M);at(n,\"htmx:afterRequest\",I);at(n,\"htmx:sendAbort\",I);U(a);d()};m.ontimeout=function(){Ct(M);at(n,\"htmx:afterRequest\",I);at(n,\"htmx:timeout\",I);U(a);d()};if(!ft(n,\"htmx:beforeRequest\",I)){U(o);d();return s}var M=Et(n);B([\"loadstart\",\"loadend\",\"progress\",\"abort\"],function(t){B([m,m.upload],function(e){e.addEventListener(t,function(e){ft(n,\"htmx:xhr:\"+t,{lengthComputable:e.lengthComputable,loaded:e.loaded,total:e.total})})})});ft(n,\"htmx:beforeSend\",I);m.send(e===\"get\"?null:Ft(m,n,C));return s}function Kt(a,s){var u=s.xhr;var l=s.target;if(!ft(a,\"htmx:beforeOnLoad\",s))return;if($t(u,/HX-Trigger:/i)){de(u,\"HX-Trigger\",a)}if($t(u,/HX-Push:/i)){var f=u.getResponseHeader(\"HX-Push\")}if($t(u,/HX-Redirect:/i)){window.location.href=u.getResponseHeader(\"HX-Redirect\");return}if($t(u,/HX-Refresh:/i)){if(\"true\"===u.getResponseHeader(\"HX-Refresh\")){location.reload();return}}var c=wt(a)||f;if(u.status>=200&&u.status<400){if(u.status===286){Re(a)}if(u.status!==204){if(!ft(l,\"htmx:beforeSwap\",s))return;var h=u.response;ut(a,function(e){h=e.transformResponse(h,u,a)});if(c){pt()}var d=Dt(a);l.classList.add(D.config.swappingClass);var e=function(){try{var e=document.activeElement;var t={};try{t={elt:e,start:e?e.selectionStart:null,end:e?e.selectionEnd:null}}catch(e){}var r=Xt(l);he(d.swapStyle,l,a,h,r);if(t.elt&&!z(t.elt)&&t.elt.id){var n=document.getElementById(t.elt.id);if(n){if(t.start&&n.setSelectionRange){n.setSelectionRange(t.start,t.end)}n.focus()}}l.classList.remove(D.config.swappingClass);B(r.elts,function(e){if(e.classList){e.classList.add(D.config.settlingClass)}ft(e,\"htmx:afterSwap\",s)});if(s.pathInfo.anchor){location.hash=s.pathInfo.anchor}if($t(u,/HX-Trigger-After-Swap:/i)){var i=a;if(!z(a)){i=X().body}de(u,\"HX-Trigger-After-Swap\",i)}var o=function(){B(r.tasks,function(e){e.call()});B(r.elts,function(e){if(e.classList){e.classList.remove(D.config.settlingClass)}ft(e,\"htmx:afterSettle\",s)});if(c){var e=f||St(a)||Wt(u)||s.pathInfo.finalPath||s.pathInfo.path;mt(e);ft(X().body,\"htmx:pushedIntoHistory\",{path:e})}Pt(r.elts,d);if($t(u,/HX-Trigger-After-Settle:/i)){var t=a;if(!z(a)){t=X().body}de(u,\"HX-Trigger-After-Settle\",t)}};if(d.settleDelay>0){setTimeout(o,d.settleDelay)}else{o()}}catch(e){at(a,\"htmx:swapError\",s);throw e}};if(d.swapDelay>0){setTimeout(e,d.swapDelay)}else{e()}}}else{at(a,\"htmx:responseError\",V({error:\"Response Status Error Code \"+u.status+\" from \"+s.pathInfo.path},s))}}var Yt={};function Qt(){return{onEvent:function(e,t){return true},transformResponse:function(e,t,r){return e},isInlineSwap:function(e){return false},handleSwap:function(e,t,r,n){return false},encodeParameters:function(e,t,r){return null}}}function er(e,t){Yt[e]=V(Qt(),t)}function tr(e){delete Yt[e]}function rr(e,r,n){if(e==undefined){return r}if(r==undefined){r=[]}if(n==undefined){n=[]}var t=F(e,\"hx-ext\");if(t){B(t.split(\",\"),function(e){e=e.replace(/ /g,\"\");if(e.slice(0,7)==\"ignore:\"){n.push(e.slice(7));return}if(n.indexOf(e)<0){var t=Yt[e];if(t&&r.indexOf(t)<0){r.push(t)}}})}return rr(l(e),r,n)}function nr(e){if(X().readyState!==\"loading\"){e()}else{X().addEventListener(\"DOMContentLoaded\",e)}}function ir(){if(D.config.includeIndicatorStyles!==false){X().head.insertAdjacentHTML(\"beforeend\",\"<style>                      .\"+D.config.indicatorClass+\"{opacity:0;transition: opacity 200ms ease-in;}                      .\"+D.config.requestClass+\" .\"+D.config.indicatorClass+\"{opacity:1}                      .\"+D.config.requestClass+\".\"+D.config.indicatorClass+\"{opacity:1}                    </style>\")}}function or(){var e=X().querySelector('meta[name=\"htmx-config\"]');if(e){return x(e.content)}else{return null}}function ar(){var e=or();if(e){D.config=V(D.config,e)}}nr(function(){ar();ir();var e=X().body;nt(e);window.onpopstate=function(e){if(e.state&&e.state.htmx){bt()}};setTimeout(function(){ft(e,\"htmx:load\",{})},0)});return D}()});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaHRteC5vcmcvZGlzdC9odG14Lm1pbi5qcz9jOGU2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLCtHQUFlLEdBQUcsSUFBc0MsRUFBRSxpQ0FBTyxFQUFFLG9DQUFDLENBQUM7QUFBQTtBQUFBO0FBQUEsa0dBQUMsQ0FBQyxJQUFJLEVBQVksQ0FBQyxpREFBaUQsa0JBQWtCLGFBQWEsT0FBTyxrR0FBa0csc0JBQXNCLGdCQUFnQixnSUFBZ0ksc2dCQUFzZ0IsbURBQW1ELDBCQUEwQixxQkFBcUIsRUFBRSw2QkFBNkIsMkJBQTJCLGtCQUFrQiw0Q0FBNEMsd0JBQXdCLG9DQUFvQyxhQUFhLGNBQWMsaUJBQWlCLGlCQUFpQixzQkFBc0IsNENBQTRDLHFCQUFxQixnREFBZ0QsZ0NBQWdDLGdCQUFnQix5Q0FBeUMsZ0JBQWdCLHNFQUFzRSxnQkFBZ0IsOEJBQThCLGNBQWMsdUJBQXVCLGFBQWEsZ0JBQWdCLGdCQUFnQixTQUFTLFNBQVMsY0FBYyxpQkFBaUIsS0FBSyxhQUFhLGdCQUFnQixXQUFXLGdCQUFnQixnQkFBZ0IsRUFBRSxTQUFTLGdCQUFnQiwySEFBMkgsc0JBQXNCLGNBQWMsdUNBQXVDLGdCQUFnQixNQUFNLDBCQUEwQixLQUFLLFVBQVUsZ0JBQWdCLG9CQUFvQix1Q0FBdUMsYUFBYSxXQUFXLElBQUksZUFBZSxZQUFZLCtCQUErQixTQUFTLGNBQWMsa0NBQWtDLHFEQUFxRCwyQ0FBMkMsS0FBSyxXQUFXLFVBQVUsb0dBQW9HLGtFQUFrRSwyREFBMkQsNkVBQTZFLDRDQUE0Qyx3QkFBd0IsY0FBYyxNQUFNLEtBQUssZ0JBQWdCLDREQUE0RCxjQUFjLHVCQUF1QixjQUFjLHFCQUFxQixjQUFjLDJCQUEyQixXQUFXLE9BQU8sVUFBVSxTQUFTLGNBQWMsU0FBUyxNQUFNLFlBQVksV0FBVyxLQUFLLGNBQWMsU0FBUyxnQkFBZ0IsTUFBTSxZQUFZLFdBQVcsS0FBSyxVQUFVLGNBQWMsZ0NBQWdDLFlB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QUFhLDhCQUE4QixhQUFhLGtDQUFrQyxjQUFjLGlCQUFpQixnQkFBZ0IsZUFBZSxhQUFhLG1CQUFtQixpQkFBaUIsU0FBUyxpQkFBaUIsS0FBSyxpQkFBaUIsS0FBSyxvQkFBb0IsTUFBTSwyQkFBMkIscUJBQXFCLDRCQUE0QixtQkFBbUIsT0FBTyxtQkFBbUIsWUFBWSxzQkFBc0IsWUFBWSxFQUFFLG9CQUFvQixlQUFlLCtCQUErQixJQUFJLEtBQUssNENBQTRDLGNBQWMsNENBQTRDLG1HQUFtRyxVQUFVLG1DQUFtQyw4RUFBOEUsVUFBVSw2RUFBNkUsVUFBVSxnQ0FBZ0MsY0FBYyxvREFBb0QsTUFBTSxvQkFBb0IsS0FBSyxhQUFhLGNBQWMsV0FBVyxNQUFNLHdCQUF3QixjQUFjLEtBQUssS0FBSyxlQUFlLE1BQU0sOEJBQThCLDBCQUEwQixPQUFPLHNCQUFzQixtQkFBbUIsRUFBRSxJQUFJLEVBQUUsU0FBUyxHQUFHIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2h0bXgub3JnL2Rpc3QvaHRteC5taW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oZSx0KXtpZih0eXBlb2YgZGVmaW5lPT09XCJmdW5jdGlvblwiJiZkZWZpbmUuYW1kKXtkZWZpbmUoW10sdCl9ZWxzZXtlLmh0bXg9dCgpfX0pKHR5cGVvZiBzZWxmIT09XCJ1bmRlZmluZWRcIj9zZWxmOnRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgRD17b25Mb2FkOnQscHJvY2VzczpudCxvbjpOLG9mZjpJLHRyaWdnZXI6ZnQsYWpheDpKdCxmaW5kOncsZmluZEFsbDpTLGNsb3Nlc3Q6TCx2YWx1ZXM6ZnVuY3Rpb24oZSx0KXt2YXIgcj1UdChlLHR8fFwicG9zdFwiKTtyZXR1cm4gci52YWx1ZXN9LHJlbW92ZTpFLGFkZENsYXNzOkMscmVtb3ZlQ2xhc3M6cSx0b2dnbGVDbGFzczpSLHRha2VDbGFzczpPLGRlZmluZUV4dGVuc2lvbjplcixyZW1vdmVFeHRlbnNpb246dHIsbG9nQWxsOmIsbG9nZ2VyOm51bGwsY29uZmlnOntoaXN0b3J5RW5hYmxlZDp0cnVlLGhpc3RvcnlDYWNoZVNpemU6MTAscmVmcmVzaE9uSGlzdG9yeU1pc3M6ZmFsc2UsZGVmYXVsdFN3YXBTdHlsZTpcImlubmVySFRNTFwiLGRlZmF1bHRTd2FwRGVsYXk6MCxkZWZhdWx0U2V0dGxlRGVsYXk6MjAsaW5jbHVkZUluZGljYXRvclN0eWxlczp0cnVlLGluZGljYXRvckNsYXNzOlwiaHRteC1pbmRpY2F0b3JcIixyZXF1ZXN0Q2xhc3M6XCJodG14LXJlcXVlc3RcIixzZXR0bGluZ0NsYXNzOlwiaHRteC1zZXR0bGluZ1wiLHN3YXBwaW5nQ2xhc3M6XCJodG14LXN3YXBwaW5nXCIsYWxsb3dFdmFsOnRydWUsYXR0cmlidXRlc1RvU2V0dGxlOltcImNsYXNzXCIsXCJzdHlsZVwiLFwid2lkdGhcIixcImhlaWdodFwiXSx3aXRoQ3JlZGVudGlhbHM6ZmFsc2UsdGltZW91dDowLHdzUmVjb25uZWN0RGVsYXk6XCJmdWxsLWppdHRlclwiLGRpc2FibGVTZWxlY3RvcjpcIltoeC1kaXNhYmxlXSwgW2RhdGEtaHgtZGlzYWJsZV1cIix1c2VUZW1wbGF0ZUZyYWdtZW50czpmYWxzZSxzY3JvbGxCZWhhdmlvcjpcInNtb290aFwifSxwYXJzZUludGVydmFsOmgsXzplLGNyZWF0ZUV2ZW50U291cmNlOmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgRXZlbnRTb3VyY2UoZSx7d2l0aENyZWRlbnRpYWxzOnRydWV9KX0sY3JlYXRlV2ViU29ja2V0OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcgV2ViU29ja2V0KGUsW10pfSx2ZXJzaW9uOlwiMS41LjBcIn07dmFyIHI9W1wiZ2V0XCIsXCJwb3N0XCIsXCJwdXRcIixcImRlbGV0ZVwiLFwicGF0Y2hcIl07dmFyIG49ci5tYXAoZnVuY3Rpb24oZSl7cmV0dXJuXCJbaHgtXCIrZStcIl0sIFtkYXRhLWh4LVwiK2UrXCJdXCJ9KS5qb2luKFwiLCBcIik7ZnVuY3Rpb24gaChlKXtpZihlPT11bmRlZmluZWQpe3JldHVybiB1bmRlZmluZWR9aWYoZS5zbGljZSgtMik9PVwibXNcIil7cmV0dXJuIHBhcnNlRmxvYXQoZS5zbGljZSgwLC0yKSl8fHVuZGVmaW5lZH1pZihlLnNsaWNlKC0xKT09XCJzXCIpe3JldHVybiBwYXJzZUZsb2F0KGUuc2xpY2UoMCwtMSkpKjFlM3x8dW5kZWZpbmVkfXJldHVybiBwYXJzZUZsb2F0KGUpfHx1bmRlZmluZWR9ZnVuY3Rpb24gYyhlLHQpe3JldHVybiBlLmdldEF0dHJpYnV0ZSYmZS5nZXRBdHRyaWJ1dGUodCl9ZnVuY3Rpb24gcyhlLHQpe3JldHVybiBlLmhhc0F0dHJpYnV0ZSYmKGUuaGFzQXR0cmlidXRlKHQpfHxlLmhhc0F0dHJpYnV0ZShcImRhdGEtXCIrdCkpfWZ1bmN0aW9uIEYoZSx0KXtyZXR1cm4gYyhlLHQpfHxjKGUsXCJkYXRhLVwiK3QpfWZ1bmN0aW9uIGwoZSl7cmV0dXJuIGUucGFyZW50RWxlbWVudH1mdW5jdGlvbiBYKCl7cmV0dXJuIGRvY3VtZW50fWZ1bmN0aW9uIGQoZSx0KXtpZih0KGUpKXtyZXR1cm4gZX1lbHNlIGlmKGwoZSkpe3JldHVybiBkKGwoZSksdCl9ZWxzZXtyZXR1cm4gbnVsbH19ZnVuY3Rpb24gUChlLHQpe3ZhciByPW51bGw7ZChlLGZ1bmN0aW9uKGUpe3JldHVybiByPUYoZSx0KX0pO3JldHVybiByfWZ1bmN0aW9uIHYoZSx0KXt2YXIgcj1lLm1hdGNoZXN8fGUubWF0Y2hlc1NlbGVjdG9yfHxlLm1zTWF0Y2hlc1NlbGVjdG9yfHxlLm1vek1hdGNoZXNTZWxlY3Rvcnx8ZS53ZWJraXRNYXRjaGVzU2VsZWN0b3J8fGUub01hdGNoZXNTZWxlY3RvcjtyZXR1cm4gciYmci5jYWxsKGUsdCl9ZnVuY3Rpb24gaShlKXt2YXIgdD0vPChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSopL2k7dmFyIHI9dC5leGVjKGUpO2lmKHIpe3JldHVybiByWzFdLnRvTG93ZXJDYXNlKCl9ZWxzZXtyZXR1cm5cIlwifX1mdW5jdGlvbiBvKGUsdCl7dmFyIHI9bmV3IERPTVBhcnNlcjt2YXIgbj1yLnBhcnNlRnJvbVN0cmluZyhlLFwidGV4dC9odG1sXCIpO3ZhciBpPW4uYm9keTt3aGlsZSh0PjApe3QtLTtpPWkuZmlyc3RDaGlsZH1pZihpPT1udWxsKXtpPVgoKS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCl9cmV0dXJuIGl9ZnVuY3Rpb24gdShlKXtpZihELmNvbmZpZy51c2VUZW1wbGF0ZUZyYWdtZW50cyl7dmFyIHQ9byhcIjxib2R5Pjx0ZW1wbGF0ZT5cIitlK1wiPC90ZW1wbGF0ZT48L2JvZHk+XCIsMCk7cmV0dXJuIHQucXVlcnlTZWxlY3RvcihcInRlbXBsYXRlXCIpLmNvbnRlbnR9ZWxzZXt2YXIgcj1pKGUpO3N3aXRjaChyKXtjYXNlXCJ0aGVhZFwiOmNhc2VcInRib2R5XCI6Y2FzZVwidGZvb3RcIjpjYXNlXCJjb2xncm91cFwiOmNhc2VcImNhcHRpb25cIjpyZXR1cm4gbyhcIjx0YWJsZT5cIitlK1wiPC90YWJsZT5cIiwxKTtjYXNlXCJjb2xcIjpyZXR1cm4gbyhcIjx0YWJsZT48Y29sZ3JvdXA+XCIrZStcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiwyKTtjYXNlXCJ0clwiOnJldHVybiBvKFwiPHRhYmxlPjx0Ym9keT5cIitlK1wiPC90Ym9keT48L3RhYmxlPlwiLDIpO2Nhc2VcInRkXCI6Y2FzZVwidGhcIjpyZXR1cm4gbyhcIjx0YWJsZT48dGJvZHk+PHRyPlwiK2UrXCI8L3RyPjwvdGJvZHk+PC90YWJsZT5cIiwzKTtjYXNlXCJzY3JpcHRcIjpyZXR1cm4gbyhcIjxkaXY+XCIrZStcIjwvZGl2PlwiLDEpO2RlZmF1bHQ6cmV0dXJuIG8oZSwwKX19fWZ1bmN0aW9uIFUoZSl7aWYoZSl7ZSgpfX1mdW5jdGlvbiBhKGUsdCl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKT09PVwiW29iamVjdCBcIit0K1wiXVwifWZ1bmN0aW9uIGYoZSl7cmV0dXJuIGEoZSxcIkZ1bmN0aW9uXCIpfWZ1bmN0aW9uIGcoZSl7cmV0dXJuIGEoZSxcIk9iamVjdFwiKX1mdW5jdGlvbiBqKGUpe3ZhciB0PVwiaHRteC1pbnRlcm5hbC1kYXRhXCI7dmFyIHI9ZVt0XTtpZighcil7cj1lW3RdPXt9fXJldHVybiByfWZ1bmN0aW9uIHAoZSl7dmFyIHQ9W107aWYoZSl7Zm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3QucHVzaChlW3JdKX19cmV0dXJuIHR9ZnVuY3Rpb24gQihlLHQpe2lmKGUpe2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt0KGVbcl0pfX19ZnVuY3Rpb24gbShlKXt2YXIgdD1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3ZhciByPXQudG9wO3ZhciBuPXQuYm90dG9tO3JldHVybiByPHdpbmRvdy5pbm5lckhlaWdodCYmbj49MH1mdW5jdGlvbiB6KGUpe3JldHVybiBYKCkuYm9keS5jb250YWlucyhlKX1mdW5jdGlvbiB5KGUpe3JldHVybiBlLnRyaW0oKS5zcGxpdCgvXFxzKy8pfWZ1bmN0aW9uIFYoZSx0KXtmb3IodmFyIHIgaW4gdCl7aWYodC5oYXNPd25Qcm9wZXJ0eShyKSl7ZVtyXT10W3JdfX1yZXR1cm4gZX1mdW5jdGlvbiB4KGUpe3RyeXtyZXR1cm4gSlNPTi5wYXJzZShlKX1jYXRjaChlKXtsdChlKTtyZXR1cm4gbnVsbH19ZnVuY3Rpb24gZShlKXtyZXR1cm4ganQoWCgpLmJvZHksZnVuY3Rpb24oKXtyZXR1cm4gZXZhbChlKX0pfWZ1bmN0aW9uIHQodCl7dmFyIGU9RC5vbihcImh0bXg6bG9hZFwiLGZ1bmN0aW9uKGUpe3QoZS5kZXRhaWwuZWx0KX0pO3JldHVybiBlfWZ1bmN0aW9uIGIoKXtELmxvZ2dlcj1mdW5jdGlvbihlLHQscil7aWYoY29uc29sZSl7Y29uc29sZS5sb2codCxlLHIpfX19ZnVuY3Rpb24gdyhlLHQpe2lmKHQpe3JldHVybiBlLnF1ZXJ5U2VsZWN0b3IodCl9ZWxzZXtyZXR1cm4gdyhYKCksZSl9fWZ1bmN0aW9uIFMoZSx0KXtpZih0KXtyZXR1cm4gZS5xdWVyeVNlbGVjdG9yQWxsKHQpfWVsc2V7cmV0dXJuIFMoWCgpLGUpfX1mdW5jdGlvbiBFKGUsdCl7ZT1IKGUpO2lmKHQpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtFKGUpfSx0KX1lbHNle2UucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChlKX19ZnVuY3Rpb24gQyhlLHQscil7ZT1IKGUpO2lmKHIpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtDKGUsdCl9LHIpfWVsc2V7ZS5jbGFzc0xpc3QuYWRkKHQpfX1mdW5jdGlvbiBxKGUsdCxyKXtlPUgoZSk7aWYocil7c2V0VGltZW91dChmdW5jdGlvbigpe3EoZSx0KX0scil9ZWxzZXtlLmNsYXNzTGlzdC5yZW1vdmUodCl9fWZ1bmN0aW9uIFIoZSx0KXtlPUgoZSk7ZS5jbGFzc0xpc3QudG9nZ2xlKHQpfWZ1bmN0aW9uIE8oZSx0KXtlPUgoZSk7QihlLnBhcmVudEVsZW1lbnQuY2hpbGRyZW4sZnVuY3Rpb24oZSl7cShlLHQpfSk7QyhlLHQpfWZ1bmN0aW9uIEwoZSx0KXtlPUgoZSk7aWYoZS5jbG9zZXN0KXtyZXR1cm4gZS5jbG9zZXN0KHQpfWVsc2V7ZG97aWYoZT09bnVsbHx8dihlLHQpKXtyZXR1cm4gZX19d2hpbGUoZT1lJiZsKGUpKX19ZnVuY3Rpb24gVChlLHQpe2lmKHQuaW5kZXhPZihcImNsb3Nlc3QgXCIpPT09MCl7cmV0dXJuW0woZSx0LnN1YnN0cig4KSldfWVsc2UgaWYodC5pbmRleE9mKFwiZmluZCBcIik9PT0wKXtyZXR1cm5bdyhlLHQuc3Vic3RyKDUpKV19ZWxzZSBpZih0PT09XCJkb2N1bWVudFwiKXtyZXR1cm5bZG9jdW1lbnRdfWVsc2V7cmV0dXJuIFgoKS5xdWVyeVNlbGVjdG9yQWxsKHQpfX1mdW5jdGlvbiBBKGUsdCl7cmV0dXJuIFQoZSx0KVswXX1mdW5jdGlvbiBIKGUpe2lmKGEoZSxcIlN0cmluZ1wiKSl7cmV0dXJuIHcoZSl9ZWxzZXtyZXR1cm4gZX19ZnVuY3Rpb24gayhlLHQscil7aWYoZih0KSl7cmV0dXJue3RhcmdldDpYKCkuYm9keSxldmVudDplLGxpc3RlbmVyOnR9fWVsc2V7cmV0dXJue3RhcmdldDpIKGUpLGV2ZW50OnQsbGlzdGVuZXI6cn19fWZ1bmN0aW9uIE4odCxyLG4pe25yKGZ1bmN0aW9uKCl7dmFyIGU9ayh0LHIsbik7ZS50YXJnZXQuYWRkRXZlbnRMaXN0ZW5lcihlLmV2ZW50LGUubGlzdGVuZXIpfSk7dmFyIGU9ZihyKTtyZXR1cm4gZT9yOm59ZnVuY3Rpb24gSSh0LHIsbil7bnIoZnVuY3Rpb24oKXt2YXIgZT1rKHQscixuKTtlLnRhcmdldC5yZW1vdmVFdmVudExpc3RlbmVyKGUuZXZlbnQsZS5saXN0ZW5lcil9KTtyZXR1cm4gZihyKT9yOm59ZnVuY3Rpb24gXyhlKXt2YXIgdD1kKGUsZnVuY3Rpb24oZSl7cmV0dXJuIEYoZSxcImh4LXRhcmdldFwiKSE9PW51bGx9KTtpZih0KXt2YXIgcj1GKHQsXCJoeC10YXJnZXRcIik7aWYocj09PVwidGhpc1wiKXtyZXR1cm4gdH1lbHNle3JldHVybiBBKGUscil9fWVsc2V7dmFyIG49aihlKTtpZihuLmJvb3N0ZWQpe3JldHVybiBYKCkuYm9keX1lbHNle3JldHVybiBlfX19ZnVuY3Rpb24gTShlKXt2YXIgdD1ELmNvbmZpZy5hdHRyaWJ1dGVzVG9TZXR0bGU7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe2lmKGU9PT10W3JdKXtyZXR1cm4gdHJ1ZX19cmV0dXJuIGZhbHNlfWZ1bmN0aW9uIFcodCxyKXtCKHQuYXR0cmlidXRlcyxmdW5jdGlvbihlKXtpZighci5oYXNBdHRyaWJ1dGUoZS5uYW1lKSYmTShlLm5hbWUpKXt0LnJlbW92ZUF0dHJpYnV0ZShlLm5hbWUpfX0pO0Ioci5hdHRyaWJ1dGVzLGZ1bmN0aW9uKGUpe2lmKE0oZS5uYW1lKSl7dC5zZXRBdHRyaWJ1dGUoZS5uYW1lLGUudmFsdWUpfX0pfWZ1bmN0aW9uICQoZSx0KXt2YXIgcj1ycih0KTtmb3IodmFyIG49MDtuPHIubGVuZ3RoO24rKyl7dmFyIGk9cltuXTt0cnl7aWYoaS5pc0lubGluZVN3YXAoZSkpe3JldHVybiB0cnVlfX1jYXRjaChlKXtsdChlKX19cmV0dXJuIGU9PT1cIm91dGVySFRNTFwifWZ1bmN0aW9uIEooZSx0LHIpe3ZhciBuPVwiI1wiK3QuaWQ7dmFyIGk9XCJvdXRlckhUTUxcIjtpZihlPT09XCJ0cnVlXCIpe31lbHNlIGlmKGUuaW5kZXhPZihcIjpcIik+MCl7aT1lLnN1YnN0cigwLGUuaW5kZXhPZihcIjpcIikpO249ZS5zdWJzdHIoZS5pbmRleE9mKFwiOlwiKSsxLGUubGVuZ3RoKX1lbHNle2k9ZX12YXIgbz1YKCkucXVlcnlTZWxlY3RvcihuKTtpZihvKXt2YXIgYTthPVgoKS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7YS5hcHBlbmRDaGlsZCh0KTtpZighJChpLG8pKXthPXR9bGUoaSxvLG8sYSxyKX1lbHNle3QucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0KTthdChYKCkuYm9keSxcImh0bXg6b29iRXJyb3JOb1RhcmdldFwiLHtjb250ZW50OnR9KX1yZXR1cm4gZX1mdW5jdGlvbiBaKGUscil7QihTKGUsXCJbaHgtc3dhcC1vb2JdLCBbZGF0YS1oeC1zd2FwLW9vYl1cIiksZnVuY3Rpb24oZSl7dmFyIHQ9RihlLFwiaHgtc3dhcC1vb2JcIik7aWYodCE9bnVsbCl7Sih0LGUscil9fSl9ZnVuY3Rpb24gRyhlKXtCKFMoZSxcIltoeC1wcmVzZXJ2ZV0sIFtkYXRhLWh4LXByZXNlcnZlXVwiKSxmdW5jdGlvbihlKXt2YXIgdD1GKGUsXCJpZFwiKTt2YXIgcj1YKCkuZ2V0RWxlbWVudEJ5SWQodCk7aWYociE9bnVsbCl7ZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChyLGUpfX0pfWZ1bmN0aW9uIEsobixlLGkpe0IoZS5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkXVwiKSxmdW5jdGlvbihlKXtpZihlLmlkJiZlLmlkLmxlbmd0aD4wKXt2YXIgdD1uLnF1ZXJ5U2VsZWN0b3IoZS50YWdOYW1lK1wiW2lkPSdcIitlLmlkK1wiJ11cIik7aWYodCYmdCE9PW4pe3ZhciByPWUuY2xvbmVOb2RlKCk7VyhlLHQpO2kudGFza3MucHVzaChmdW5jdGlvbigpe1coZSxyKX0pfX19KX1mdW5jdGlvbiBZKGUpe3JldHVybiBmdW5jdGlvbigpe250KGUpO1llKGUpO1EoZSk7ZnQoZSxcImh0bXg6bG9hZFwiKX19ZnVuY3Rpb24gUShlKXt2YXIgdD1cIlthdXRvZm9jdXNdXCI7dmFyIHI9dihlLHQpP2U6ZS5xdWVyeVNlbGVjdG9yKHQpO2lmKHIhPW51bGwpe3IuZm9jdXMoKX19ZnVuY3Rpb24gZWUoZSx0LHIsbil7SyhlLHIsbik7d2hpbGUoci5jaGlsZE5vZGVzLmxlbmd0aD4wKXt2YXIgaT1yLmZpcnN0Q2hpbGQ7ZS5pbnNlcnRCZWZvcmUoaSx0KTtpZihpLm5vZGVUeXBlIT09Tm9kZS5URVhUX05PREUmJmkubm9kZVR5cGUhPT1Ob2RlLkNPTU1FTlRfTk9ERSl7bi50YXNrcy5wdXNoKFkoaSkpfX19ZnVuY3Rpb24gdGUodCl7dmFyIGU9aih0KTtpZihlLndlYlNvY2tldCl7ZS53ZWJTb2NrZXQuY2xvc2UoKX1pZihlLnNzZUV2ZW50U291cmNlKXtlLnNzZUV2ZW50U291cmNlLmNsb3NlKCl9aWYoZS5saXN0ZW5lckluZm9zKXtCKGUubGlzdGVuZXJJbmZvcyxmdW5jdGlvbihlKXtpZih0IT09ZS5vbil7ZS5vbi5yZW1vdmVFdmVudExpc3RlbmVyKGUudHJpZ2dlcixlLmxpc3RlbmVyKX19KX1pZih0LmNoaWxkcmVuKXtCKHQuY2hpbGRyZW4sZnVuY3Rpb24oZSl7dGUoZSl9KX19ZnVuY3Rpb24gcmUoZSx0LHIpe2lmKGUudGFnTmFtZT09PVwiQk9EWVwiKXtyZXR1cm4gc2UoZSx0LHIpfWVsc2V7dmFyIG49ZS5wcmV2aW91c1NpYmxpbmc7ZWUobChlKSxlLHQscik7aWYobj09bnVsbCl7dmFyIGk9bChlKS5maXJzdENoaWxkfWVsc2V7dmFyIGk9bi5uZXh0U2libGluZ31qKGUpLnJlcGxhY2VkV2l0aD1pO3IuZWx0cz1bXTt3aGlsZShpJiZpIT09ZSl7aWYoaS5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFKXtyLmVsdHMucHVzaChpKX1pPWkubmV4dEVsZW1lbnRTaWJsaW5nfXRlKGUpO2woZSkucmVtb3ZlQ2hpbGQoZSl9fWZ1bmN0aW9uIG5lKGUsdCxyKXtyZXR1cm4gZWUoZSxlLmZpcnN0Q2hpbGQsdCxyKX1mdW5jdGlvbiBpZShlLHQscil7cmV0dXJuIGVlKGwoZSksZSx0LHIpfWZ1bmN0aW9uIG9lKGUsdCxyKXtyZXR1cm4gZWUoZSxudWxsLHQscil9ZnVuY3Rpb24gYWUoZSx0LHIpe3JldHVybiBlZShsKGUpLGUubmV4dFNpYmxpbmcsdCxyKX1mdW5jdGlvbiBzZShlLHQscil7dmFyIG49ZS5maXJzdENoaWxkO2VlKGUsbix0LHIpO2lmKG4pe3doaWxlKG4ubmV4dFNpYmxpbmcpe3RlKG4ubmV4dFNpYmxpbmcpO2UucmVtb3ZlQ2hpbGQobi5uZXh0U2libGluZyl9dGUobik7ZS5yZW1vdmVDaGlsZChuKX19ZnVuY3Rpb24gdWUoZSx0KXt2YXIgcj1QKGUsXCJoeC1zZWxlY3RcIik7aWYocil7dmFyIG49WCgpLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtCKHQucXVlcnlTZWxlY3RvckFsbChyKSxmdW5jdGlvbihlKXtuLmFwcGVuZENoaWxkKGUpfSk7dD1ufXJldHVybiB0fWZ1bmN0aW9uIGxlKGUsdCxyLG4saSl7c3dpdGNoKGUpe2Nhc2VcIm5vbmVcIjpyZXR1cm47Y2FzZVwib3V0ZXJIVE1MXCI6cmUocixuLGkpO3JldHVybjtjYXNlXCJhZnRlcmJlZ2luXCI6bmUocixuLGkpO3JldHVybjtjYXNlXCJiZWZvcmViZWdpblwiOmllKHIsbixpKTtyZXR1cm47Y2FzZVwiYmVmb3JlZW5kXCI6b2UocixuLGkpO3JldHVybjtjYXNlXCJhZnRlcmVuZFwiOmFlKHIsbixpKTtyZXR1cm47ZGVmYXVsdDp2YXIgbz1ycih0KTtmb3IodmFyIGE9MDthPG8ubGVuZ3RoO2ErKyl7dmFyIHM9b1thXTt0cnl7dmFyIHU9cy5oYW5kbGVTd2FwKGUscixuLGkpO2lmKHUpe2lmKHR5cGVvZiB1Lmxlbmd0aCE9PVwidW5kZWZpbmVkXCIpe2Zvcih2YXIgbD0wO2w8dS5sZW5ndGg7bCsrKXt2YXIgZj11W2xdO2lmKGYubm9kZVR5cGUhPT1Ob2RlLlRFWFRfTk9ERSYmZi5ub2RlVHlwZSE9PU5vZGUuQ09NTUVOVF9OT0RFKXtpLnRhc2tzLnB1c2goWShmKSl9fX1yZXR1cm59fWNhdGNoKGUpe2x0KGUpfX1zZShyLG4saSl9fXZhciBmZT0vPHRpdGxlPihbXFxzXFxTXSs/KTxcXC90aXRsZT4vaW07ZnVuY3Rpb24gY2UoZSl7aWYoZS5pbmRleE9mKFwiPHRpdGxlPlwiKT4tMSYmKGUuaW5kZXhPZihcIjxzdmc+XCIpPT0tMXx8ZS5pbmRleE9mKFwiPHRpdGxlPlwiKTxlLmluZGV4T2YoXCI8c3ZnPlwiKSkpe3ZhciB0PWZlLmV4ZWMoZSk7aWYodCl7cmV0dXJuIHRbMV19fX1mdW5jdGlvbiBoZShlLHQscixuLGkpe3ZhciBvPWNlKG4pO2lmKG8pe3ZhciBhPXcoXCJ0aXRsZVwiKTtpZihhKXthLmlubmVySFRNTD1vfWVsc2V7d2luZG93LmRvY3VtZW50LnRpdGxlPW99fXZhciBzPXUobik7aWYocyl7WihzLGkpO3M9dWUocixzKTtHKHMpO3JldHVybiBsZShlLHIsdCxzLGkpfX1mdW5jdGlvbiBkZShlLHQscil7dmFyIG49ZS5nZXRSZXNwb25zZUhlYWRlcih0KTtpZihuLmluZGV4T2YoXCJ7XCIpPT09MCl7dmFyIGk9eChuKTtmb3IodmFyIG8gaW4gaSl7aWYoaS5oYXNPd25Qcm9wZXJ0eShvKSl7dmFyIGE9aVtvXTtpZighZyhhKSl7YT17dmFsdWU6YX19ZnQocixvLGEpfX19ZWxzZXtmdChyLG4sW10pfX12YXIgdmU9L1xccy87dmFyIGdlPS9bXFxzLF0vO3ZhciBwZT0vW18kYS16QS1aXS87dmFyIG1lPS9bXyRhLXpBLVowLTldLzt2YXIgeWU9WydcIicsXCInXCIsXCIvXCJdO3ZhciB4ZT0vW15cXHNdLztmdW5jdGlvbiBiZShlKXt2YXIgdD1bXTt2YXIgcj0wO3doaWxlKHI8ZS5sZW5ndGgpe2lmKHBlLmV4ZWMoZS5jaGFyQXQocikpKXt2YXIgbj1yO3doaWxlKG1lLmV4ZWMoZS5jaGFyQXQocisxKSkpe3IrK310LnB1c2goZS5zdWJzdHIobixyLW4rMSkpfWVsc2UgaWYoeWUuaW5kZXhPZihlLmNoYXJBdChyKSkhPT0tMSl7dmFyIGk9ZS5jaGFyQXQocik7dmFyIG49cjtyKys7d2hpbGUocjxlLmxlbmd0aCYmZS5jaGFyQXQocikhPT1pKXtpZihlLmNoYXJBdChyKT09PVwiXFxcXFwiKXtyKyt9cisrfXQucHVzaChlLnN1YnN0cihuLHItbisxKSl9ZWxzZXt2YXIgbz1lLmNoYXJBdChyKTt0LnB1c2gobyl9cisrfXJldHVybiB0fWZ1bmN0aW9uIHdlKGUsdCxyKXtyZXR1cm4gcGUuZXhlYyhlLmNoYXJBdCgwKSkmJmUhPT1cInRydWVcIiYmZSE9PVwiZmFsc2VcIiYmZSE9PVwidGhpc1wiJiZlIT09ciYmdCE9PVwiLlwifWZ1bmN0aW9uIFNlKGUsdCxyKXtpZih0WzBdPT09XCJbXCIpe3Quc2hpZnQoKTt2YXIgbj0xO3ZhciBpPVwiIHJldHVybiAoZnVuY3Rpb24oXCIrcitcIil7IHJldHVybiAoXCI7dmFyIG89bnVsbDt3aGlsZSh0Lmxlbmd0aD4wKXt2YXIgYT10WzBdO2lmKGE9PT1cIl1cIil7bi0tO2lmKG49PT0wKXtpZihvPT09bnVsbCl7aT1pK1widHJ1ZVwifXQuc2hpZnQoKTtpKz1cIil9KVwiO3RyeXt2YXIgcz1qdChlLGZ1bmN0aW9uKCl7cmV0dXJuIEZ1bmN0aW9uKGkpKCl9LGZ1bmN0aW9uKCl7cmV0dXJuIHRydWV9KTtzLnNvdXJjZT1pO3JldHVybiBzfWNhdGNoKGUpe2F0KFgoKS5ib2R5LFwiaHRteDpzeW50YXg6ZXJyb3JcIix7ZXJyb3I6ZSxzb3VyY2U6aX0pO3JldHVybiBudWxsfX19ZWxzZSBpZihhPT09XCJbXCIpe24rK31pZih3ZShhLG8scikpe2krPVwiKChcIityK1wiLlwiK2ErXCIpID8gKFwiK3IrXCIuXCIrYStcIikgOiAod2luZG93LlwiK2ErXCIpKVwifWVsc2V7aT1pK2F9bz10LnNoaWZ0KCl9fX1mdW5jdGlvbiBFZShlLHQpe3ZhciByPVwiXCI7d2hpbGUoZS5sZW5ndGg+MCYmIWVbMF0ubWF0Y2godCkpe3IrPWUuc2hpZnQoKX1yZXR1cm4gcn12YXIgQ2U9XCJpbnB1dCwgdGV4dGFyZWEsIHNlbGVjdFwiO2Z1bmN0aW9uIHFlKGUpe3ZhciB0PUYoZSxcImh4LXRyaWdnZXJcIik7dmFyIHI9W107aWYodCl7dmFyIG49YmUodCk7ZG97RWUobix4ZSk7dmFyIGk9bi5sZW5ndGg7dmFyIG89RWUobiwvWyxcXFtcXHNdLyk7aWYobyE9PVwiXCIpe2lmKG89PT1cImV2ZXJ5XCIpe3ZhciBhPXt0cmlnZ2VyOlwiZXZlcnlcIn07RWUobix4ZSk7YS5wb2xsSW50ZXJ2YWw9aChFZShuLC9bLFxcW1xcc10vKSk7RWUobix4ZSk7dmFyIHM9U2UoZSxuLFwiZXZlbnRcIik7aWYocyl7YS5ldmVudEZpbHRlcj1zfXIucHVzaChhKX1lbHNlIGlmKG8uaW5kZXhPZihcInNzZTpcIik9PT0wKXtyLnB1c2goe3RyaWdnZXI6XCJzc2VcIixzc2VFdmVudDpvLnN1YnN0cig0KX0pfWVsc2V7dmFyIHU9e3RyaWdnZXI6b307dmFyIHM9U2UoZSxuLFwiZXZlbnRcIik7aWYocyl7dS5ldmVudEZpbHRlcj1zfXdoaWxlKG4ubGVuZ3RoPjAmJm5bMF0hPT1cIixcIil7RWUobix4ZSk7dmFyIGw9bi5zaGlmdCgpO2lmKGw9PT1cImNoYW5nZWRcIil7dS5jaGFuZ2VkPXRydWV9ZWxzZSBpZihsPT09XCJvbmNlXCIpe3Uub25jZT10cnVlfWVsc2UgaWYobD09PVwiY29uc3VtZVwiKXt1LmNvbnN1bWU9dHJ1ZX1lbHNlIGlmKGw9PT1cImRlbGF5XCImJm5bMF09PT1cIjpcIil7bi5zaGlmdCgpO3UuZGVsYXk9aChFZShuLGdlKSl9ZWxzZSBpZihsPT09XCJmcm9tXCImJm5bMF09PT1cIjpcIil7bi5zaGlmdCgpO3UuZnJvbT1FZShuLGdlKX1lbHNlIGlmKGw9PT1cInRhcmdldFwiJiZuWzBdPT09XCI6XCIpe24uc2hpZnQoKTt1LnRhcmdldD1FZShuLGdlKX1lbHNlIGlmKGw9PT1cInRocm90dGxlXCImJm5bMF09PT1cIjpcIil7bi5zaGlmdCgpO3UudGhyb3R0bGU9aChFZShuLGdlKSl9ZWxzZSBpZihsPT09XCJxdWV1ZVwiJiZuWzBdPT09XCI6XCIpe24uc2hpZnQoKTt1LnF1ZXVlPUVlKG4sZ2UpfWVsc2UgaWYoKGw9PT1cInJvb3RcInx8bD09PVwidGhyZXNob2xkXCIpJiZuWzBdPT09XCI6XCIpe24uc2hpZnQoKTt1W2xdPUVlKG4sZ2UpfWVsc2V7YXQoZSxcImh0bXg6c3ludGF4OmVycm9yXCIse3Rva2VuOm4uc2hpZnQoKX0pfX1yLnB1c2godSl9fWlmKG4ubGVuZ3RoPT09aSl7YXQoZSxcImh0bXg6c3ludGF4OmVycm9yXCIse3Rva2VuOm4uc2hpZnQoKX0pfUVlKG4seGUpfXdoaWxlKG5bMF09PT1cIixcIiYmbi5zaGlmdCgpKX1pZihyLmxlbmd0aD4wKXtyZXR1cm4gcn1lbHNlIGlmKHYoZSxcImZvcm1cIikpe3JldHVyblt7dHJpZ2dlcjpcInN1Ym1pdFwifV19ZWxzZSBpZih2KGUsQ2UpKXtyZXR1cm5be3RyaWdnZXI6XCJjaGFuZ2VcIn1dfWVsc2V7cmV0dXJuW3t0cmlnZ2VyOlwiY2xpY2tcIn1dfX1mdW5jdGlvbiBSZShlKXtqKGUpLmNhbmNlbGxlZD10cnVlfWZ1bmN0aW9uIE9lKGUsdCxyLG4pe3ZhciBpPWooZSk7aS50aW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtpZih6KGUpJiZpLmNhbmNlbGxlZCE9PXRydWUpe2lmKCFrZShuLG90KFwiaHg6cG9sbDp0cmlnZ2VyXCIse3RyaWdnZXJTcGVjOm59KSkpe0d0KHQscixlKX1PZShlLHQsRihlLFwiaHgtXCIrdCksbil9fSxuLnBvbGxJbnRlcnZhbCl9ZnVuY3Rpb24gTGUoZSl7cmV0dXJuIGxvY2F0aW9uLmhvc3RuYW1lPT09ZS5ob3N0bmFtZSYmYyhlLFwiaHJlZlwiKSYmYyhlLFwiaHJlZlwiKS5pbmRleE9mKFwiI1wiKSE9PTB9ZnVuY3Rpb24gVGUodCxyLGUpe2lmKHQudGFnTmFtZT09PVwiQVwiJiZMZSh0KXx8dC50YWdOYW1lPT09XCJGT1JNXCIpe3IuYm9vc3RlZD10cnVlO3ZhciBuLGk7aWYodC50YWdOYW1lPT09XCJBXCIpe249XCJnZXRcIjtpPWModCxcImhyZWZcIik7ci5wdXNoVVJMPXRydWV9ZWxzZXt2YXIgbz1jKHQsXCJtZXRob2RcIik7bj1vP28udG9Mb3dlckNhc2UoKTpcImdldFwiO2lmKG49PT1cImdldFwiKXtyLnB1c2hVUkw9dHJ1ZX1pPWModCxcImFjdGlvblwiKX1lLmZvckVhY2goZnVuY3Rpb24oZSl7TmUodCxuLGkscixlLHRydWUpfSl9fWZ1bmN0aW9uIEFlKGUpe3JldHVybiBlLnRhZ05hbWU9PT1cIkZPUk1cInx8dihlLCdpbnB1dFt0eXBlPVwic3VibWl0XCJdLCBidXR0b24nKSYmTChlLFwiZm9ybVwiKSE9PW51bGx8fGUudGFnTmFtZT09PVwiQVwiJiZlLmhyZWYmJihlLmdldEF0dHJpYnV0ZShcImhyZWZcIik9PT1cIiNcInx8ZS5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpLmluZGV4T2YoXCIjXCIpIT09MCl9ZnVuY3Rpb24gSGUoZSx0KXtyZXR1cm4gaihlKS5ib29zdGVkJiZlLnRhZ05hbWU9PT1cIkFcIiYmdC50eXBlPT09XCJjbGlja1wiJiYodC5jdHJsS2V5fHx0Lm1ldGFLZXkpfWZ1bmN0aW9uIGtlKGUsdCl7dmFyIHI9ZS5ldmVudEZpbHRlcjtpZihyKXt0cnl7cmV0dXJuIHIodCkhPT10cnVlfWNhdGNoKGUpe2F0KFgoKS5ib2R5LFwiaHRteDpldmVudEZpbHRlcjplcnJvclwiLHtlcnJvcjplLHNvdXJjZTpyLnNvdXJjZX0pO3JldHVybiB0cnVlfX1yZXR1cm4gZmFsc2V9ZnVuY3Rpb24gTmUobyxhLHMsZSx1LGwpe3ZhciB0O2lmKHUuZnJvbSl7dD1UKG8sdS5mcm9tKX1lbHNle3Q9W29dfUIodCxmdW5jdGlvbihuKXt2YXIgaT1mdW5jdGlvbihlKXtpZigheihvKSl7bi5yZW1vdmVFdmVudExpc3RlbmVyKHUudHJpZ2dlcixpKTtyZXR1cm59aWYoSGUobyxlKSl7cmV0dXJufWlmKGx8fEFlKG8pKXtlLnByZXZlbnREZWZhdWx0KCl9aWYoa2UodSxlKSl7cmV0dXJufXZhciB0PWooZSk7dC50cmlnZ2VyU3BlYz11O2lmKHQuaGFuZGxlZEZvcj09bnVsbCl7dC5oYW5kbGVkRm9yPVtdfXZhciByPWoobyk7aWYodC5oYW5kbGVkRm9yLmluZGV4T2Yobyk8MCl7dC5oYW5kbGVkRm9yLnB1c2gobyk7aWYodS5jb25zdW1lKXtlLnN0b3BQcm9wYWdhdGlvbigpfWlmKHUudGFyZ2V0JiZlLnRhcmdldCl7aWYoIXYoZS50YXJnZXQsdS50YXJnZXQpKXtyZXR1cm59fWlmKHUub25jZSl7aWYoci50cmlnZ2VyZWRPbmNlKXtyZXR1cm59ZWxzZXtyLnRyaWdnZXJlZE9uY2U9dHJ1ZX19aWYodS5jaGFuZ2VkKXtpZihyLmxhc3RWYWx1ZT09PW8udmFsdWUpe3JldHVybn1lbHNle3IubGFzdFZhbHVlPW8udmFsdWV9fWlmKHIuZGVsYXllZCl7Y2xlYXJUaW1lb3V0KHIuZGVsYXllZCl9aWYoci50aHJvdHRsZSl7cmV0dXJufWlmKHUudGhyb3R0bGUpe2lmKCFyLnRocm90dGxlKXtHdChhLHMsbyxlKTtyLnRocm90dGxlPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtyLnRocm90dGxlPW51bGx9LHUudGhyb3R0bGUpfX1lbHNlIGlmKHUuZGVsYXkpe3IuZGVsYXllZD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7R3QoYSxzLG8sZSl9LHUuZGVsYXkpfWVsc2V7R3QoYSxzLG8sZSl9fX07aWYoZS5saXN0ZW5lckluZm9zPT1udWxsKXtlLmxpc3RlbmVySW5mb3M9W119ZS5saXN0ZW5lckluZm9zLnB1c2goe3RyaWdnZXI6dS50cmlnZ2VyLGxpc3RlbmVyOmksb246bn0pO24uYWRkRXZlbnRMaXN0ZW5lcih1LnRyaWdnZXIsaSl9KX12YXIgSWU9ZmFsc2U7dmFyIE1lPW51bGw7ZnVuY3Rpb24gRGUoKXtpZighTWUpe01lPWZ1bmN0aW9uKCl7SWU9dHJ1ZX07d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIixNZSk7c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXtpZihJZSl7SWU9ZmFsc2U7QihYKCkucXVlcnlTZWxlY3RvckFsbChcIltoeC10cmlnZ2VyPSdyZXZlYWxlZCddLFtkYXRhLWh4LXRyaWdnZXI9J3JldmVhbGVkJ11cIiksZnVuY3Rpb24oZSl7RmUoZSl9KX19LDIwMCl9fWZ1bmN0aW9uIEZlKGUpe3ZhciB0PWooZSk7aWYoIXQucmV2ZWFsZWQmJm0oZSkpe3QucmV2ZWFsZWQ9dHJ1ZTtpZih0LmluaXRpYWxpemVkKXtHdCh0LnZlcmIsdC5wYXRoLGUpfWVsc2V7ZS5hZGRFdmVudExpc3RlbmVyKFwiaHRteDphZnRlclByb2Nlc3NOb2RlXCIsZnVuY3Rpb24oKXtHdCh0LnZlcmIsdC5wYXRoLGUpfSx7b25jZTp0cnVlfSl9fX1mdW5jdGlvbiBYZShlLHQscil7dmFyIG49eShyKTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7dmFyIG89bltpXS5zcGxpdCgvOiguKykvKTtpZihvWzBdPT09XCJjb25uZWN0XCIpe1BlKGUsb1sxXSwwKX1pZihvWzBdPT09XCJzZW5kXCIpe2plKGUpfX19ZnVuY3Rpb24gUGUocyxyLG4pe2lmKCF6KHMpKXtyZXR1cm59aWYoci5pbmRleE9mKFwiL1wiKT09MCl7dmFyIGU9bG9jYXRpb24uaG9zdG5hbWUrKGxvY2F0aW9uLnBvcnQ/XCI6XCIrbG9jYXRpb24ucG9ydDpcIlwiKTtpZihsb2NhdGlvbi5wcm90b2NvbD09XCJodHRwczpcIil7cj1cIndzczovL1wiK2Urcn1lbHNlIGlmKGxvY2F0aW9uLnByb3RvY29sPT1cImh0dHA6XCIpe3I9XCJ3czovL1wiK2Urcn19dmFyIHQ9RC5jcmVhdGVXZWJTb2NrZXQocik7dC5vbmVycm9yPWZ1bmN0aW9uKGUpe2F0KHMsXCJodG14OndzRXJyb3JcIix7ZXJyb3I6ZSxzb2NrZXQ6dH0pO1VlKHMpfTt0Lm9uY2xvc2U9ZnVuY3Rpb24oZSl7aWYoWzEwMDYsMTAxMiwxMDEzXS5pbmRleE9mKGUuY29kZSk+PTApe3ZhciB0PUJlKG4pO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtQZShzLHIsbisxKX0sdCl9fTt0Lm9ub3Blbj1mdW5jdGlvbihlKXtuPTB9O2oocykud2ViU29ja2V0PXQ7dC5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGZ1bmN0aW9uKGUpe2lmKFVlKHMpKXtyZXR1cm59dmFyIHQ9ZS5kYXRhO3V0KHMsZnVuY3Rpb24oZSl7dD1lLnRyYW5zZm9ybVJlc3BvbnNlKHQsbnVsbCxzKX0pO3ZhciByPVh0KHMpO3ZhciBuPXUodCk7dmFyIGk9cChuLmNoaWxkcmVuKTtmb3IodmFyIG89MDtvPGkubGVuZ3RoO28rKyl7dmFyIGE9aVtvXTtKKEYoYSxcImh4LXN3YXAtb29iXCIpfHxcInRydWVcIixhLHIpfXl0KHIudGFza3MpfSl9ZnVuY3Rpb24gVWUoZSl7aWYoIXooZSkpe2ooZSkud2ViU29ja2V0LmNsb3NlKCk7cmV0dXJuIHRydWV9fWZ1bmN0aW9uIGplKGwpe3ZhciBmPWQobCxmdW5jdGlvbihlKXtyZXR1cm4gaihlKS53ZWJTb2NrZXQhPW51bGx9KTtpZihmKXtsLmFkZEV2ZW50TGlzdGVuZXIocWUobClbMF0udHJpZ2dlcixmdW5jdGlvbihlKXt2YXIgdD1qKGYpLndlYlNvY2tldDt2YXIgcj1OdChsLGYpO3ZhciBuPVR0KGwsXCJwb3N0XCIpO3ZhciBpPW4uZXJyb3JzO3ZhciBvPW4udmFsdWVzO3ZhciBhPVZ0KGwpO3ZhciBzPVYobyxhKTt2YXIgdT1JdChzLGwpO3VbXCJIRUFERVJTXCJdPXI7aWYoaSYmaS5sZW5ndGg+MCl7ZnQobCxcImh0bXg6dmFsaWRhdGlvbjpoYWx0ZWRcIixpKTtyZXR1cm59dC5zZW5kKEpTT04uc3RyaW5naWZ5KHUpKTtpZihBZShsKSl7ZS5wcmV2ZW50RGVmYXVsdCgpfX0pfWVsc2V7YXQobCxcImh0bXg6bm9XZWJTb2NrZXRTb3VyY2VFcnJvclwiKX19ZnVuY3Rpb24gQmUoZSl7dmFyIHQ9RC5jb25maWcud3NSZWNvbm5lY3REZWxheTtpZih0eXBlb2YgdD09PVwiZnVuY3Rpb25cIil7cmV0dXJuIHQoZSl9aWYodD09PVwiZnVsbC1qaXR0ZXJcIil7dmFyIHI9TWF0aC5taW4oZSw2KTt2YXIgbj0xZTMqTWF0aC5wb3coMixyKTtyZXR1cm4gbipNYXRoLnJhbmRvbSgpfWx0KCdodG14LmNvbmZpZy53c1JlY29ubmVjdERlbGF5IG11c3QgZWl0aGVyIGJlIGEgZnVuY3Rpb24gb3IgdGhlIHN0cmluZyBcImZ1bGwtaml0dGVyXCInKX1mdW5jdGlvbiB6ZShlLHQscil7dmFyIG49eShyKTtmb3IodmFyIGk9MDtpPG4ubGVuZ3RoO2krKyl7dmFyIG89bltpXS5zcGxpdCgvOiguKykvKTtpZihvWzBdPT09XCJjb25uZWN0XCIpe1ZlKGUsb1sxXSl9aWYob1swXT09PVwic3dhcFwiKXtfZShlLG9bMV0pfX19ZnVuY3Rpb24gVmUodCxlKXt2YXIgcj1ELmNyZWF0ZUV2ZW50U291cmNlKGUpO3Iub25lcnJvcj1mdW5jdGlvbihlKXthdCh0LFwiaHRteDpzc2VFcnJvclwiLHtlcnJvcjplLHNvdXJjZTpyfSk7JGUodCl9O2oodCkuc3NlRXZlbnRTb3VyY2U9cn1mdW5jdGlvbiBfZShvLGEpe3ZhciBzPWQobyxKZSk7aWYocyl7dmFyIHU9aihzKS5zc2VFdmVudFNvdXJjZTt2YXIgbD1mdW5jdGlvbihlKXtpZigkZShzKSl7dS5yZW1vdmVFdmVudExpc3RlbmVyKGEsbCk7cmV0dXJufXZhciB0PWUuZGF0YTt1dChvLGZ1bmN0aW9uKGUpe3Q9ZS50cmFuc2Zvcm1SZXNwb25zZSh0LG51bGwsbyl9KTt2YXIgcj1EdChvKTt2YXIgbj1fKG8pO3ZhciBpPVh0KG8pO2hlKHIuc3dhcFN0eWxlLG8sbix0LGkpO3l0KGkudGFza3MpO2Z0KG8sXCJodG14OnNzZU1lc3NhZ2VcIixlKX07aihvKS5zc2VMaXN0ZW5lcj1sO3UuYWRkRXZlbnRMaXN0ZW5lcihhLGwpfWVsc2V7YXQobyxcImh0bXg6bm9TU0VTb3VyY2VFcnJvclwiKX19ZnVuY3Rpb24gV2UoZSx0LHIsbil7dmFyIGk9ZChlLEplKTtpZihpKXt2YXIgbz1qKGkpLnNzZUV2ZW50U291cmNlO3ZhciBhPWZ1bmN0aW9uKCl7aWYoISRlKGkpKXtpZih6KGUpKXtHdCh0LHIsZSl9ZWxzZXtvLnJlbW92ZUV2ZW50TGlzdGVuZXIobixhKX19fTtqKGUpLnNzZUxpc3RlbmVyPWE7by5hZGRFdmVudExpc3RlbmVyKG4sYSl9ZWxzZXthdChlLFwiaHRteDpub1NTRVNvdXJjZUVycm9yXCIpfX1mdW5jdGlvbiAkZShlKXtpZigheihlKSl7aihlKS5zc2VFdmVudFNvdXJjZS5jbG9zZSgpO3JldHVybiB0cnVlfX1mdW5jdGlvbiBKZShlKXtyZXR1cm4gaihlKS5zc2VFdmVudFNvdXJjZSE9bnVsbH1mdW5jdGlvbiBaZShlLHQscixuLGkpe3ZhciBvPWZ1bmN0aW9uKCl7aWYoIW4ubG9hZGVkKXtuLmxvYWRlZD10cnVlO0d0KHQscixlKX19O2lmKGkpe3NldFRpbWVvdXQobyxpKX1lbHNle28oKX19ZnVuY3Rpb24gR2UobyxhLGUpe3ZhciB0PWZhbHNlO0IocixmdW5jdGlvbihuKXtpZihzKG8sXCJoeC1cIituKSl7dmFyIGk9RihvLFwiaHgtXCIrbik7dD10cnVlO2EucGF0aD1pO2EudmVyYj1uO2UuZm9yRWFjaChmdW5jdGlvbihlKXtpZihlLnNzZUV2ZW50KXtXZShvLG4saSxlLnNzZUV2ZW50KX1lbHNlIGlmKGUudHJpZ2dlcj09PVwicmV2ZWFsZWRcIil7RGUoKTtGZShvKX1lbHNlIGlmKGUudHJpZ2dlcj09PVwiaW50ZXJzZWN0XCIpe3ZhciB0PXt9O2lmKGUucm9vdCl7dC5yb290PUEoZS5yb290KX1pZihlLnRocmVzaG9sZCl7dC50aHJlc2hvbGQ9cGFyc2VGbG9hdChlLnRocmVzaG9sZCl9dmFyIHI9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKXt2YXIgcj1lW3RdO2lmKHIuaXNJbnRlcnNlY3Rpbmcpe2Z0KG8sXCJpbnRlcnNlY3RcIik7YnJlYWt9fX0sdCk7ci5vYnNlcnZlKG8pO05lKG8sbixpLGEsZSl9ZWxzZSBpZihlLnRyaWdnZXI9PT1cImxvYWRcIil7WmUobyxuLGksYSxlLmRlbGF5KX1lbHNlIGlmKGUucG9sbEludGVydmFsKXthLnBvbGxpbmc9dHJ1ZTtPZShvLG4saSxlKX1lbHNle05lKG8sbixpLGEsZSl9fSl9fSk7cmV0dXJuIHR9ZnVuY3Rpb24gS2UoZSl7aWYoZS50eXBlPT09XCJ0ZXh0L2phdmFzY3JpcHRcInx8ZS50eXBlPT09XCJcIil7dHJ5e2p0KGUsZnVuY3Rpb24oKXsoMSxldmFsKShlLmlubmVyVGV4dCl9KX1jYXRjaChlKXtsdChlKX19fWZ1bmN0aW9uIFllKGUpe2lmKHYoZSxcInNjcmlwdFwiKSl7S2UoZSl9QihTKGUsXCJzY3JpcHRcIiksZnVuY3Rpb24oZSl7S2UoZSl9KX1mdW5jdGlvbiBRZSgpe3JldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW2h4LWJvb3N0XSwgW2RhdGEtaHgtYm9vc3RdXCIpfWZ1bmN0aW9uIGV0KGUpe2lmKGUucXVlcnlTZWxlY3RvckFsbCl7dmFyIHQ9UWUoKT9cIiwgYSwgZm9ybVwiOlwiXCI7dmFyIHI9ZS5xdWVyeVNlbGVjdG9yQWxsKG4rdCtcIiwgW2h4LXNzZV0sIFtkYXRhLWh4LXNzZV0sIFtoeC13c10sXCIrXCIgW2RhdGEtaHgtd3NdXCIpO3JldHVybiByfWVsc2V7cmV0dXJuW119fWZ1bmN0aW9uIHR0KHIpe3ZhciBlPWZ1bmN0aW9uKGUpe2lmKHYoZS50YXJnZXQsXCJidXR0b24sIGlucHV0W3R5cGU9J3N1Ym1pdCddXCIpKXt2YXIgdD1qKHIpO3QubGFzdEJ1dHRvbkNsaWNrZWQ9ZS50YXJnZXR9fTtyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGUpO3IuYWRkRXZlbnRMaXN0ZW5lcihcImZvY3VzaW5cIixlKTtyLmFkZEV2ZW50TGlzdGVuZXIoXCJmb2N1c291dFwiLGZ1bmN0aW9uKGUpe3ZhciB0PWoocik7dC5sYXN0QnV0dG9uQ2xpY2tlZD1udWxsfSl9ZnVuY3Rpb24gcnQoZSl7aWYoZS5jbG9zZXN0JiZlLmNsb3Nlc3QoRC5jb25maWcuZGlzYWJsZVNlbGVjdG9yKSl7cmV0dXJufXZhciB0PWooZSk7aWYoIXQuaW5pdGlhbGl6ZWQpe3QuaW5pdGlhbGl6ZWQ9dHJ1ZTtmdChlLFwiaHRteDpiZWZvcmVQcm9jZXNzTm9kZVwiKTtpZihlLnZhbHVlKXt0Lmxhc3RWYWx1ZT1lLnZhbHVlfXZhciByPXFlKGUpO3ZhciBuPUdlKGUsdCxyKTtpZighbiYmUChlLFwiaHgtYm9vc3RcIik9PT1cInRydWVcIil7VGUoZSx0LHIpfWlmKGUudGFnTmFtZT09PVwiRk9STVwiKXt0dChlKX12YXIgaT1GKGUsXCJoeC1zc2VcIik7aWYoaSl7emUoZSx0LGkpfXZhciBvPUYoZSxcImh4LXdzXCIpO2lmKG8pe1hlKGUsdCxvKX1mdChlLFwiaHRteDphZnRlclByb2Nlc3NOb2RlXCIpfX1mdW5jdGlvbiBudChlKXtlPUgoZSk7cnQoZSk7QihldChlKSxmdW5jdGlvbihlKXtydChlKX0pfWZ1bmN0aW9uIGl0KGUpe3JldHVybiBlLnJlcGxhY2UoLyhbYS16MC05XSkoW0EtWl0pL2csXCIkMS0kMlwiKS50b0xvd2VyQ2FzZSgpfWZ1bmN0aW9uIG90KGUsdCl7dmFyIHI7aWYod2luZG93LkN1c3RvbUV2ZW50JiZ0eXBlb2Ygd2luZG93LkN1c3RvbUV2ZW50PT09XCJmdW5jdGlvblwiKXtyPW5ldyBDdXN0b21FdmVudChlLHtidWJibGVzOnRydWUsY2FuY2VsYWJsZTp0cnVlLGRldGFpbDp0fSl9ZWxzZXtyPVgoKS5jcmVhdGVFdmVudChcIkN1c3RvbUV2ZW50XCIpO3IuaW5pdEN1c3RvbUV2ZW50KGUsdHJ1ZSx0cnVlLHQpfXJldHVybiByfWZ1bmN0aW9uIGF0KGUsdCxyKXtmdChlLHQsVih7ZXJyb3I6dH0scikpfWZ1bmN0aW9uIHN0KGUpe3JldHVybiBlPT09XCJodG14OmFmdGVyUHJvY2Vzc05vZGVcIn1mdW5jdGlvbiB1dChlLHQpe0IocnIoZSksZnVuY3Rpb24oZSl7dHJ5e3QoZSl9Y2F0Y2goZSl7bHQoZSl9fSl9ZnVuY3Rpb24gbHQoZSl7aWYoY29uc29sZS5lcnJvcil7Y29uc29sZS5lcnJvcihlKX1lbHNlIGlmKGNvbnNvbGUubG9nKXtjb25zb2xlLmxvZyhcIkVSUk9SOiBcIixlKX19ZnVuY3Rpb24gZnQoZSx0LHIpe2U9SChlKTtpZihyPT1udWxsKXtyPXt9fXJbXCJlbHRcIl09ZTt2YXIgbj1vdCh0LHIpO2lmKEQubG9nZ2VyJiYhc3QodCkpe0QubG9nZ2VyKGUsdCxyKX1pZihyLmVycm9yKXtsdChyLmVycm9yKTtmdChlLFwiaHRteDplcnJvclwiLHtlcnJvckluZm86cn0pfXZhciBpPWUuZGlzcGF0Y2hFdmVudChuKTt2YXIgbz1pdCh0KTtpZihpJiZvIT09dCl7dmFyIGE9b3QobyxuLmRldGFpbCk7aT1pJiZlLmRpc3BhdGNoRXZlbnQoYSl9dXQoZSxmdW5jdGlvbihlKXtpPWkmJmUub25FdmVudCh0LG4pIT09ZmFsc2V9KTtyZXR1cm4gaX12YXIgY3Q9bnVsbDtmdW5jdGlvbiBodCgpe3ZhciBlPVgoKS5xdWVyeVNlbGVjdG9yKFwiW2h4LWhpc3RvcnktZWx0XSxbZGF0YS1oeC1oaXN0b3J5LWVsdF1cIik7cmV0dXJuIGV8fFgoKS5ib2R5fWZ1bmN0aW9uIGR0KGUsdCxyLG4pe3ZhciBpPXgobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJodG14LWhpc3RvcnktY2FjaGVcIikpfHxbXTtmb3IodmFyIG89MDtvPGkubGVuZ3RoO28rKyl7aWYoaVtvXS51cmw9PT1lKXtpLnNwbGljZShvLDEpO2JyZWFrfX1pLnB1c2goe3VybDplLGNvbnRlbnQ6dCx0aXRsZTpyLHNjcm9sbDpufSk7d2hpbGUoaS5sZW5ndGg+RC5jb25maWcuaGlzdG9yeUNhY2hlU2l6ZSl7aS5zaGlmdCgpfXdoaWxlKGkubGVuZ3RoPjApe3RyeXtsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImh0bXgtaGlzdG9yeS1jYWNoZVwiLEpTT04uc3RyaW5naWZ5KGkpKTticmVha31jYXRjaChlKXthdChYKCkuYm9keSxcImh0bXg6aGlzdG9yeUNhY2hlRXJyb3JcIix7Y2F1c2U6ZSxjYWNoZTppfSk7aS5zaGlmdCgpfX19ZnVuY3Rpb24gdnQoZSl7dmFyIHQ9eChsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImh0bXgtaGlzdG9yeS1jYWNoZVwiKSl8fFtdO2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXtpZih0W3JdLnVybD09PWUpe3JldHVybiB0W3JdfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBndChlKXt2YXIgdD1ELmNvbmZpZy5yZXF1ZXN0Q2xhc3M7dmFyIHI9ZS5jbG9uZU5vZGUodHJ1ZSk7QihTKHIsXCIuXCIrdCksZnVuY3Rpb24oZSl7cShlLHQpfSk7cmV0dXJuIHIuaW5uZXJIVE1MfWZ1bmN0aW9uIHB0KCl7dmFyIGU9aHQoKTt2YXIgdD1jdHx8bG9jYXRpb24ucGF0aG5hbWUrbG9jYXRpb24uc2VhcmNoO2Z0KFgoKS5ib2R5LFwiaHRteDpiZWZvcmVIaXN0b3J5U2F2ZVwiLHtwYXRoOnQsaGlzdG9yeUVsdDplfSk7aWYoRC5jb25maWcuaGlzdG9yeUVuYWJsZWQpaGlzdG9yeS5yZXBsYWNlU3RhdGUoe2h0bXg6dHJ1ZX0sWCgpLnRpdGxlLHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtkdCh0LGd0KGUpLFgoKS50aXRsZSx3aW5kb3cuc2Nyb2xsWSl9ZnVuY3Rpb24gbXQoZSl7aWYoRC5jb25maWcuaGlzdG9yeUVuYWJsZWQpaGlzdG9yeS5wdXNoU3RhdGUoe2h0bXg6dHJ1ZX0sXCJcIixlKTtjdD1lfWZ1bmN0aW9uIHl0KGUpe0IoZSxmdW5jdGlvbihlKXtlLmNhbGwoKX0pfWZ1bmN0aW9uIHh0KG4pe3ZhciBlPW5ldyBYTUxIdHRwUmVxdWVzdDt2YXIgaT17cGF0aDpuLHhocjplfTtmdChYKCkuYm9keSxcImh0bXg6aGlzdG9yeUNhY2hlTWlzc1wiLGkpO2Uub3BlbihcIkdFVFwiLG4sdHJ1ZSk7ZS5zZXRSZXF1ZXN0SGVhZGVyKFwiSFgtSGlzdG9yeS1SZXN0b3JlLVJlcXVlc3RcIixcInRydWVcIik7ZS5vbmxvYWQ9ZnVuY3Rpb24oKXtpZih0aGlzLnN0YXR1cz49MjAwJiZ0aGlzLnN0YXR1czw0MDApe2Z0KFgoKS5ib2R5LFwiaHRteDpoaXN0b3J5Q2FjaGVNaXNzTG9hZFwiLGkpO3ZhciBlPXUodGhpcy5yZXNwb25zZSk7ZT1lLnF1ZXJ5U2VsZWN0b3IoXCJbaHgtaGlzdG9yeS1lbHRdLFtkYXRhLWh4LWhpc3RvcnktZWx0XVwiKXx8ZTt2YXIgdD1odCgpO3ZhciByPVh0KHQpO3NlKHQsZSxyKTt5dChyLnRhc2tzKTtjdD1uO2Z0KFgoKS5ib2R5LFwiaHRteDpoaXN0b3J5UmVzdG9yZVwiLHtwYXRoOm59KX1lbHNle2F0KFgoKS5ib2R5LFwiaHRteDpoaXN0b3J5Q2FjaGVNaXNzTG9hZEVycm9yXCIsaSl9fTtlLnNlbmQoKX1mdW5jdGlvbiBidChlKXtwdCgpO2U9ZXx8bG9jYXRpb24ucGF0aG5hbWUrbG9jYXRpb24uc2VhcmNoO3ZhciB0PXZ0KGUpO2lmKHQpe3ZhciByPXUodC5jb250ZW50KTt2YXIgbj1odCgpO3ZhciBpPVh0KG4pO3NlKG4scixpKTt5dChpLnRhc2tzKTtkb2N1bWVudC50aXRsZT10LnRpdGxlO3dpbmRvdy5zY3JvbGxUbygwLHQuc2Nyb2xsKTtjdD1lO2Z0KFgoKS5ib2R5LFwiaHRteDpoaXN0b3J5UmVzdG9yZVwiLHtwYXRoOmV9KX1lbHNle2lmKEQuY29uZmlnLnJlZnJlc2hPbkhpc3RvcnlNaXNzKXt3aW5kb3cubG9jYXRpb24ucmVsb2FkKHRydWUpfWVsc2V7eHQoZSl9fX1mdW5jdGlvbiB3dChlKXt2YXIgdD1QKGUsXCJoeC1wdXNoLXVybFwiKTtyZXR1cm4gdCYmdCE9PVwiZmFsc2VcInx8aihlKS5ib29zdGVkJiZqKGUpLnB1c2hVUkx9ZnVuY3Rpb24gU3QoZSl7dmFyIHQ9UChlLFwiaHgtcHVzaC11cmxcIik7cmV0dXJuIHQ9PT1cInRydWVcInx8dD09PVwiZmFsc2VcIj9udWxsOnR9ZnVuY3Rpb24gRXQoZSl7dmFyIHQ9UChlLFwiaHgtaW5kaWNhdG9yXCIpO2lmKHQpe3ZhciByPVQoZSx0KX1lbHNle3I9W2VdfUIocixmdW5jdGlvbihlKXtlLmNsYXNzTGlzdFtcImFkZFwiXS5jYWxsKGUuY2xhc3NMaXN0LEQuY29uZmlnLnJlcXVlc3RDbGFzcyl9KTtyZXR1cm4gcn1mdW5jdGlvbiBDdChlKXtCKGUsZnVuY3Rpb24oZSl7ZS5jbGFzc0xpc3RbXCJyZW1vdmVcIl0uY2FsbChlLmNsYXNzTGlzdCxELmNvbmZpZy5yZXF1ZXN0Q2xhc3MpfSl9ZnVuY3Rpb24gcXQoZSx0KXtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7dmFyIG49ZVtyXTtpZihuLmlzU2FtZU5vZGUodCkpe3JldHVybiB0cnVlfX1yZXR1cm4gZmFsc2V9ZnVuY3Rpb24gUnQoZSl7aWYoZS5uYW1lPT09XCJcInx8ZS5uYW1lPT1udWxsfHxlLmRpc2FibGVkKXtyZXR1cm4gZmFsc2V9aWYoZS50eXBlPT09XCJidXR0b25cInx8ZS50eXBlPT09XCJzdWJtaXRcInx8ZS50YWdOYW1lPT09XCJpbWFnZVwifHxlLnRhZ05hbWU9PT1cInJlc2V0XCJ8fGUudGFnTmFtZT09PVwiZmlsZVwiKXtyZXR1cm4gZmFsc2V9aWYoZS50eXBlPT09XCJjaGVja2JveFwifHxlLnR5cGU9PT1cInJhZGlvXCIpe3JldHVybiBlLmNoZWNrZWR9cmV0dXJuIHRydWV9ZnVuY3Rpb24gT3QodCxyLG4sZSxpKXtpZihlPT1udWxsfHxxdCh0LGUpKXtyZXR1cm59ZWxzZXt0LnB1c2goZSl9aWYoUnQoZSkpe3ZhciBvPWMoZSxcIm5hbWVcIik7dmFyIGE9ZS52YWx1ZTtpZihlLm11bHRpcGxlKXthPXAoZS5xdWVyeVNlbGVjdG9yQWxsKFwib3B0aW9uOmNoZWNrZWRcIikpLm1hcChmdW5jdGlvbihlKXtyZXR1cm4gZS52YWx1ZX0pfWlmKGUuZmlsZXMpe2E9cChlLmZpbGVzKX1pZihvIT1udWxsJiZhIT1udWxsKXt2YXIgcz1yW29dO2lmKHMpe2lmKEFycmF5LmlzQXJyYXkocykpe2lmKEFycmF5LmlzQXJyYXkoYSkpe3Jbb109cy5jb25jYXQoYSl9ZWxzZXtzLnB1c2goYSl9fWVsc2V7aWYoQXJyYXkuaXNBcnJheShhKSl7cltvXT1bc10uY29uY2F0KGEpfWVsc2V7cltvXT1bcyxhXX19fWVsc2V7cltvXT1hfX1pZihpKXtMdChlLG4pfX1pZih2KGUsXCJmb3JtXCIpKXt2YXIgdT1lLmVsZW1lbnRzO0IodSxmdW5jdGlvbihlKXtPdCh0LHIsbixlLGkpfSl9fWZ1bmN0aW9uIEx0KGUsdCl7aWYoZS53aWxsVmFsaWRhdGUpe2Z0KGUsXCJodG14OnZhbGlkYXRpb246dmFsaWRhdGVcIik7aWYoIWUuY2hlY2tWYWxpZGl0eSgpKXt0LnB1c2goe2VsdDplLG1lc3NhZ2U6ZS52YWxpZGF0aW9uTWVzc2FnZSx2YWxpZGl0eTplLnZhbGlkaXR5fSk7ZnQoZSxcImh0bXg6dmFsaWRhdGlvbjpmYWlsZWRcIix7bWVzc2FnZTplLnZhbGlkYXRpb25NZXNzYWdlLHZhbGlkaXR5OmUudmFsaWRpdHl9KX19fWZ1bmN0aW9uIFR0KGUsdCl7dmFyIHI9W107dmFyIG49e307dmFyIGk9e307dmFyIG89W107dmFyIGE9dihlLFwiZm9ybVwiKSYmZS5ub1ZhbGlkYXRlIT09dHJ1ZTtpZih0IT09XCJnZXRcIil7T3QocixpLG8sTChlLFwiZm9ybVwiKSxhKX1PdChyLG4sbyxlLGEpO3ZhciBzPWooZSk7aWYocy5sYXN0QnV0dG9uQ2xpY2tlZCl7dmFyIHU9YyhzLmxhc3RCdXR0b25DbGlja2VkLFwibmFtZVwiKTtpZih1KXtuW3VdPXMubGFzdEJ1dHRvbkNsaWNrZWQudmFsdWV9fXZhciBsPVAoZSxcImh4LWluY2x1ZGVcIik7aWYobCl7dmFyIGY9VChlLGwpO0IoZixmdW5jdGlvbihlKXtPdChyLG4sbyxlLGEpO2lmKCF2KGUsXCJmb3JtXCIpKXtCKGUucXVlcnlTZWxlY3RvckFsbChDZSksZnVuY3Rpb24oZSl7T3QocixuLG8sZSxhKX0pfX0pfW49VihuLGkpO3JldHVybntlcnJvcnM6byx2YWx1ZXM6bn19ZnVuY3Rpb24gQXQoZSx0LHIpe2lmKGUhPT1cIlwiKXtlKz1cIiZcIn1lKz1lbmNvZGVVUklDb21wb25lbnQodCkrXCI9XCIrZW5jb2RlVVJJQ29tcG9uZW50KHIpO3JldHVybiBlfWZ1bmN0aW9uIEh0KGUpe3ZhciB0PVwiXCI7Zm9yKHZhciByIGluIGUpe2lmKGUuaGFzT3duUHJvcGVydHkocikpe3ZhciBuPWVbcl07aWYoQXJyYXkuaXNBcnJheShuKSl7QihuLGZ1bmN0aW9uKGUpe3Q9QXQodCxyLGUpfSl9ZWxzZXt0PUF0KHQscixuKX19fXJldHVybiB0fWZ1bmN0aW9uIGt0KGUpe3ZhciB0PW5ldyBGb3JtRGF0YTtmb3IodmFyIHIgaW4gZSl7aWYoZS5oYXNPd25Qcm9wZXJ0eShyKSl7dmFyIG49ZVtyXTtpZihBcnJheS5pc0FycmF5KG4pKXtCKG4sZnVuY3Rpb24oZSl7dC5hcHBlbmQocixlKX0pfWVsc2V7dC5hcHBlbmQocixuKX19fXJldHVybiB0fWZ1bmN0aW9uIE50KGUsdCxyKXt2YXIgbj17XCJIWC1SZXF1ZXN0XCI6XCJ0cnVlXCIsXCJIWC1UcmlnZ2VyXCI6YyhlLFwiaWRcIiksXCJIWC1UcmlnZ2VyLU5hbWVcIjpjKGUsXCJuYW1lXCIpLFwiSFgtVGFyZ2V0XCI6Rih0LFwiaWRcIiksXCJIWC1DdXJyZW50LVVSTFwiOlgoKS5sb2NhdGlvbi5ocmVmfTtVdChlLFwiaHgtaGVhZGVyc1wiLGZhbHNlLG4pO2lmKHIhPT11bmRlZmluZWQpe25bXCJIWC1Qcm9tcHRcIl09cn1yZXR1cm4gbn1mdW5jdGlvbiBJdCh0LGUpe3ZhciByPVAoZSxcImh4LXBhcmFtc1wiKTtpZihyKXtpZihyPT09XCJub25lXCIpe3JldHVybnt9fWVsc2UgaWYocj09PVwiKlwiKXtyZXR1cm4gdH1lbHNlIGlmKHIuaW5kZXhPZihcIm5vdCBcIik9PT0wKXtCKHIuc3Vic3RyKDQpLnNwbGl0KFwiLFwiKSxmdW5jdGlvbihlKXtlPWUudHJpbSgpO2RlbGV0ZSB0W2VdfSk7cmV0dXJuIHR9ZWxzZXt2YXIgbj17fTtCKHIuc3BsaXQoXCIsXCIpLGZ1bmN0aW9uKGUpe2U9ZS50cmltKCk7bltlXT10W2VdfSk7cmV0dXJuIG59fWVsc2V7cmV0dXJuIHR9fWZ1bmN0aW9uIE10KGUpe3JldHVybiBjKGUsXCJocmVmXCIpJiZjKGUsXCJocmVmXCIpLmluZGV4T2YoXCIjXCIpPj0wfWZ1bmN0aW9uIER0KGUpe3ZhciB0PVAoZSxcImh4LXN3YXBcIik7dmFyIHI9e3N3YXBTdHlsZTpqKGUpLmJvb3N0ZWQ/XCJpbm5lckhUTUxcIjpELmNvbmZpZy5kZWZhdWx0U3dhcFN0eWxlLHN3YXBEZWxheTpELmNvbmZpZy5kZWZhdWx0U3dhcERlbGF5LHNldHRsZURlbGF5OkQuY29uZmlnLmRlZmF1bHRTZXR0bGVEZWxheX07aWYoaihlKS5ib29zdGVkJiYhTXQoZSkpe3JbXCJzaG93XCJdPVwidG9wXCJ9aWYodCl7dmFyIG49eSh0KTtpZihuLmxlbmd0aD4wKXtyW1wic3dhcFN0eWxlXCJdPW5bMF07Zm9yKHZhciBpPTE7aTxuLmxlbmd0aDtpKyspe3ZhciBvPW5baV07aWYoby5pbmRleE9mKFwic3dhcDpcIik9PT0wKXtyW1wic3dhcERlbGF5XCJdPWgoby5zdWJzdHIoNSkpfWlmKG8uaW5kZXhPZihcInNldHRsZTpcIik9PT0wKXtyW1wic2V0dGxlRGVsYXlcIl09aChvLnN1YnN0cig3KSl9aWYoby5pbmRleE9mKFwic2Nyb2xsOlwiKT09PTApe3ZhciBhPW8uc3Vic3RyKDcpO3ZhciBzPWEuc3BsaXQoXCI6XCIpO3ZhciB1PXMucG9wKCk7dmFyIGw9cy5sZW5ndGg+MD9zLmpvaW4oXCI6XCIpOm51bGw7cltcInNjcm9sbFwiXT11O3JbXCJzY3JvbGxUYXJnZXRcIl09bH1pZihvLmluZGV4T2YoXCJzaG93OlwiKT09PTApe3ZhciBmPW8uc3Vic3RyKDUpO3ZhciBzPWYuc3BsaXQoXCI6XCIpO3ZhciBjPXMucG9wKCk7dmFyIGw9cy5sZW5ndGg+MD9zLmpvaW4oXCI6XCIpOm51bGw7cltcInNob3dcIl09YztyW1wic2hvd1RhcmdldFwiXT1sfX19fXJldHVybiByfWZ1bmN0aW9uIEZ0KHQscixuKXt2YXIgaT1udWxsO3V0KHIsZnVuY3Rpb24oZSl7aWYoaT09bnVsbCl7aT1lLmVuY29kZVBhcmFtZXRlcnModCxuLHIpfX0pO2lmKGkhPW51bGwpe3JldHVybiBpfWVsc2V7aWYoUChyLFwiaHgtZW5jb2RpbmdcIik9PT1cIm11bHRpcGFydC9mb3JtLWRhdGFcIil7cmV0dXJuIGt0KG4pfWVsc2V7cmV0dXJuIEh0KG4pfX19ZnVuY3Rpb24gWHQoZSl7cmV0dXJue3Rhc2tzOltdLGVsdHM6W2VdfX1mdW5jdGlvbiBQdChlLHQpe3ZhciByPWVbMF07dmFyIG49ZVtlLmxlbmd0aC0xXTtpZih0LnNjcm9sbCl7dmFyIGk9bnVsbDtpZih0LnNjcm9sbFRhcmdldCl7aT1BKHIsdC5zY3JvbGxUYXJnZXQpfWlmKHQuc2Nyb2xsPT09XCJ0b3BcIiYmKHJ8fGkpKXtpPWl8fHI7aS5zY3JvbGxUb3A9MH1pZih0LnNjcm9sbD09PVwiYm90dG9tXCImJihufHxpKSl7aT1pfHxuO2kuc2Nyb2xsVG9wPWkuc2Nyb2xsSGVpZ2h0fX1pZih0LnNob3cpe3ZhciBpPW51bGw7aWYodC5zaG93VGFyZ2V0KXt2YXIgbz10LnNob3dUYXJnZXQ7aWYodC5zaG93VGFyZ2V0PT09XCJ3aW5kb3dcIil7bz1cImJvZHlcIn1pPUEocixvKX1pZih0LnNob3c9PT1cInRvcFwiJiYocnx8aSkpe2k9aXx8cjtpLnNjcm9sbEludG9WaWV3KHtibG9jazpcInN0YXJ0XCIsYmVoYXZpb3I6RC5jb25maWcuc2Nyb2xsQmVoYXZpb3J9KX1pZih0LnNob3c9PT1cImJvdHRvbVwiJiYobnx8aSkpe2k9aXx8bjtpLnNjcm9sbEludG9WaWV3KHtibG9jazpcImVuZFwiLGJlaGF2aW9yOkQuY29uZmlnLnNjcm9sbEJlaGF2aW9yfSl9fX1mdW5jdGlvbiBVdChlLHQscixuKXtpZihuPT1udWxsKXtuPXt9fWlmKGU9PW51bGwpe3JldHVybiBufXZhciBpPUYoZSx0KTtpZihpKXt2YXIgbz1pLnRyaW0oKTt2YXIgYT1yO2lmKG8uaW5kZXhPZihcImphdmFzY3JpcHQ6XCIpPT09MCl7bz1vLnN1YnN0cigxMSk7YT10cnVlfWVsc2UgaWYoby5pbmRleE9mKFwianM6XCIpPT09MCl7bz1vLnN1YnN0cigzKTthPXRydWV9aWYoby5pbmRleE9mKFwie1wiKSE9PTApe289XCJ7XCIrbytcIn1cIn12YXIgcztpZihhKXtzPWp0KGUsZnVuY3Rpb24oKXtyZXR1cm4gRnVuY3Rpb24oXCJyZXR1cm4gKFwiK28rXCIpXCIpKCl9LHt9KX1lbHNle3M9eChvKX1mb3IodmFyIHUgaW4gcyl7aWYocy5oYXNPd25Qcm9wZXJ0eSh1KSl7aWYoblt1XT09bnVsbCl7blt1XT1zW3VdfX19fXJldHVybiBVdChsKGUpLHQscixuKX1mdW5jdGlvbiBqdChlLHQscil7aWYoRC5jb25maWcuYWxsb3dFdmFsKXtyZXR1cm4gdCgpfWVsc2V7YXQoZSxcImh0bXg6ZXZhbERpc2FsbG93ZWRFcnJvclwiKTtyZXR1cm4gcn19ZnVuY3Rpb24gQnQoZSx0KXtyZXR1cm4gVXQoZSxcImh4LXZhcnNcIix0cnVlLHQpfWZ1bmN0aW9uIHp0KGUsdCl7cmV0dXJuIFV0KGUsXCJoeC12YWxzXCIsZmFsc2UsdCl9ZnVuY3Rpb24gVnQoZSl7cmV0dXJuIFYoQnQoZSksenQoZSkpfWZ1bmN0aW9uIF90KHQscixuKXtpZihuIT09bnVsbCl7dHJ5e3Quc2V0UmVxdWVzdEhlYWRlcihyLG4pfWNhdGNoKGUpe3Quc2V0UmVxdWVzdEhlYWRlcihyLGVuY29kZVVSSUNvbXBvbmVudChuKSk7dC5zZXRSZXF1ZXN0SGVhZGVyKHIrXCItVVJJLUF1dG9FbmNvZGVkXCIsXCJ0cnVlXCIpfX19ZnVuY3Rpb24gV3QodCl7aWYodC5yZXNwb25zZVVSTCYmdHlwZW9mIFVSTCE9PVwidW5kZWZpbmVkXCIpe3RyeXt2YXIgZT1uZXcgVVJMKHQucmVzcG9uc2VVUkwpO3JldHVybiBlLnBhdGhuYW1lK2Uuc2VhcmNofWNhdGNoKGUpe2F0KFgoKS5ib2R5LFwiaHRteDpiYWRSZXNwb25zZVVybFwiLHt1cmw6dC5yZXNwb25zZVVSTH0pfX19ZnVuY3Rpb24gJHQoZSx0KXtyZXR1cm4gZS5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKS5tYXRjaCh0KX1mdW5jdGlvbiBKdChlLHQscil7aWYocil7aWYociBpbnN0YW5jZW9mIEVsZW1lbnR8fGEocixcIlN0cmluZ1wiKSl7cmV0dXJuIEd0KGUsdCxudWxsLG51bGwse3RhcmdldE92ZXJyaWRlOkgocil9KX1lbHNle3JldHVybiBHdChlLHQsSChyLnNvdXJjZSksci5ldmVudCx7aGFuZGxlcjpyLmhhbmRsZXIsaGVhZGVyczpyLmhlYWRlcnMsdmFsdWVzOnIudmFsdWVzLHRhcmdldE92ZXJyaWRlOkgoci50YXJnZXQpfSl9fWVsc2V7cmV0dXJuIEd0KGUsdCl9fWZ1bmN0aW9uIFp0KGUpe3ZhciB0PVtdO3doaWxlKGUpe3QucHVzaChlKTtlPWUucGFyZW50RWxlbWVudH1yZXR1cm4gdH1mdW5jdGlvbiBHdChlLHQsbixyLGkpe3ZhciBvPW51bGw7dmFyIGE9bnVsbDtpPWkhPW51bGw/aTp7fTtpZih0eXBlb2YgUHJvbWlzZSE9PVwidW5kZWZpbmVkXCIpe3ZhciBzPW5ldyBQcm9taXNlKGZ1bmN0aW9uKGUsdCl7bz1lO2E9dH0pfWlmKG49PW51bGwpe249WCgpLmJvZHl9dmFyIHU9aS5oYW5kbGVyfHxLdDtpZigheihuKSl7cmV0dXJufXZhciBsPWkudGFyZ2V0T3ZlcnJpZGV8fF8obik7aWYobD09bnVsbCl7YXQobixcImh0bXg6dGFyZ2V0RXJyb3JcIix7dGFyZ2V0OkYobixcImh4LXRhcmdldFwiKX0pO3JldHVybn12YXIgZj1qKG4pO2lmKGYucmVxdWVzdEluRmxpZ2h0KXt2YXIgYz1cImxhc3RcIjtpZihyKXt2YXIgaD1qKHIpO2lmKGgmJmgudHJpZ2dlclNwZWMmJmgudHJpZ2dlclNwZWMucXVldWUpe2M9aC50cmlnZ2VyU3BlYy5xdWV1ZX19aWYoZi5xdWV1ZWRSZXF1ZXN0cz09bnVsbCl7Zi5xdWV1ZWRSZXF1ZXN0cz1bXX1pZihjPT09XCJmaXJzdFwiJiZmLnF1ZXVlZFJlcXVlc3RzLmxlbmd0aD09PTApe2YucXVldWVkUmVxdWVzdHMucHVzaChmdW5jdGlvbigpe0d0KGUsdCxuLHIpfSl9ZWxzZSBpZihjPT09XCJhbGxcIil7Zi5xdWV1ZWRSZXF1ZXN0cy5wdXNoKGZ1bmN0aW9uKCl7R3QoZSx0LG4scil9KX1lbHNlIGlmKGM9PT1cImxhc3RcIil7Zi5xdWV1ZWRSZXF1ZXN0cz1bXTtmLnF1ZXVlZFJlcXVlc3RzLnB1c2goZnVuY3Rpb24oKXtHdChlLHQsbixyKX0pfXJldHVybn1lbHNle2YucmVxdWVzdEluRmxpZ2h0PXRydWV9dmFyIGQ9ZnVuY3Rpb24oKXtmLnJlcXVlc3RJbkZsaWdodD1mYWxzZTtpZihmLnF1ZXVlZFJlcXVlc3RzIT1udWxsJiZmLnF1ZXVlZFJlcXVlc3RzLmxlbmd0aD4wKXt2YXIgZT1mLnF1ZXVlZFJlcXVlc3RzLnNoaWZ0KCk7ZSgpfX07dmFyIHY9UChuLFwiaHgtcHJvbXB0XCIpO2lmKHYpe3ZhciBnPXByb21wdCh2KTtpZihnPT09bnVsbHx8IWZ0KG4sXCJodG14OnByb21wdFwiLHtwcm9tcHQ6Zyx0YXJnZXQ6bH0pKXtVKG8pO2QoKTtyZXR1cm4gc319dmFyIHA9UChuLFwiaHgtY29uZmlybVwiKTtpZihwKXtpZighY29uZmlybShwKSl7VShvKTtkKCk7cmV0dXJuIHN9fXZhciBtPW5ldyBYTUxIdHRwUmVxdWVzdDt2YXIgeT1OdChuLGwsZyk7aWYoaS5oZWFkZXJzKXt5PVYoeSxpLmhlYWRlcnMpfXZhciB4PVR0KG4sZSk7dmFyIGI9eC5lcnJvcnM7dmFyIHc9eC52YWx1ZXM7aWYoaS52YWx1ZXMpe3c9Vih3LGkudmFsdWVzKX12YXIgUz1WdChuKTt2YXIgRT1WKHcsUyk7dmFyIEM9SXQoRSxuKTtpZihlIT09XCJnZXRcIiYmUChuLFwiaHgtZW5jb2RpbmdcIik9PW51bGwpe3lbXCJDb250ZW50LVR5cGVcIl09XCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLThcIn1pZih0PT1udWxsfHx0PT09XCJcIil7dD1YKCkubG9jYXRpb24uaHJlZn12YXIgcT1VdChuLFwiaHgtcmVxdWVzdFwiKTt2YXIgUj17cGFyYW1ldGVyczpDLHVuZmlsdGVyZWRQYXJhbWV0ZXJzOkUsaGVhZGVyczp5LHRhcmdldDpsLHZlcmI6ZSxlcnJvcnM6Yix3aXRoQ3JlZGVudGlhbHM6aS5jcmVkZW50aWFsc3x8cS5jcmVkZW50aWFsc3x8RC5jb25maWcud2l0aENyZWRlbnRpYWxzLHRpbWVvdXQ6aS50aW1lb3V0fHxxLnRpbWVvdXR8fEQuY29uZmlnLnRpbWVvdXQscGF0aDp0LHRyaWdnZXJpbmdFdmVudDpyfTtpZighZnQobixcImh0bXg6Y29uZmlnUmVxdWVzdFwiLFIpKXtVKG8pO2QoKTtyZXR1cm4gc310PVIucGF0aDtlPVIudmVyYjt5PVIuaGVhZGVycztDPVIucGFyYW1ldGVycztiPVIuZXJyb3JzO2lmKGImJmIubGVuZ3RoPjApe2Z0KG4sXCJodG14OnZhbGlkYXRpb246aGFsdGVkXCIsUik7VShvKTtkKCk7cmV0dXJuIHN9dmFyIE89dC5zcGxpdChcIiNcIik7dmFyIEw9T1swXTt2YXIgVD1PWzFdO2lmKGU9PT1cImdldFwiKXt2YXIgQT1MO3ZhciBIPU9iamVjdC5rZXlzKEMpLmxlbmd0aCE9PTA7aWYoSCl7aWYoQS5pbmRleE9mKFwiP1wiKTwwKXtBKz1cIj9cIn1lbHNle0ErPVwiJlwifUErPUh0KEMpO2lmKFQpe0ErPVwiI1wiK1R9fW0ub3BlbihcIkdFVFwiLEEsdHJ1ZSl9ZWxzZXttLm9wZW4oZS50b1VwcGVyQ2FzZSgpLHQsdHJ1ZSl9bS5vdmVycmlkZU1pbWVUeXBlKFwidGV4dC9odG1sXCIpO20ud2l0aENyZWRlbnRpYWxzPVIud2l0aENyZWRlbnRpYWxzO20udGltZW91dD1SLnRpbWVvdXQ7aWYocS5ub0hlYWRlcnMpe31lbHNle2Zvcih2YXIgayBpbiB5KXtpZih5Lmhhc093blByb3BlcnR5KGspKXt2YXIgTj15W2tdO190KG0sayxOKX19fXZhciBJPXt4aHI6bSx0YXJnZXQ6bCxyZXF1ZXN0Q29uZmlnOlIscGF0aEluZm86e3BhdGg6dCxmaW5hbFBhdGg6QSxhbmNob3I6VH19O20ub25sb2FkPWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPVp0KG4pO3UobixJKTtDdChNKTtmdChuLFwiaHRteDphZnRlclJlcXVlc3RcIixJKTtmdChuLFwiaHRteDphZnRlck9uTG9hZFwiLEkpO2lmKCF6KG4pKXt2YXIgdD1udWxsO3doaWxlKGUubGVuZ3RoPjAmJnQ9PW51bGwpe3ZhciByPWUuc2hpZnQoKTtpZih6KHIpKXt0PXJ9fWlmKHQpe2Z0KHQsXCJodG14OmFmdGVyUmVxdWVzdFwiLEkpO2Z0KHQsXCJodG14OmFmdGVyT25Mb2FkXCIsSSl9fVUobyk7ZCgpfWNhdGNoKGUpe2F0KG4sXCJodG14Om9uTG9hZEVycm9yXCIsVih7ZXJyb3I6ZX0sSSkpO3Rocm93IGV9fTttLm9uZXJyb3I9ZnVuY3Rpb24oKXtDdChNKTthdChuLFwiaHRteDphZnRlclJlcXVlc3RcIixJKTthdChuLFwiaHRteDpzZW5kRXJyb3JcIixJKTtVKGEpO2QoKX07bS5vbmFib3J0PWZ1bmN0aW9uKCl7Q3QoTSk7YXQobixcImh0bXg6YWZ0ZXJSZXF1ZXN0XCIsSSk7YXQobixcImh0bXg6c2VuZEFib3J0XCIsSSk7VShhKTtkKCl9O20ub250aW1lb3V0PWZ1bmN0aW9uKCl7Q3QoTSk7YXQobixcImh0bXg6YWZ0ZXJSZXF1ZXN0XCIsSSk7YXQobixcImh0bXg6dGltZW91dFwiLEkpO1UoYSk7ZCgpfTtpZighZnQobixcImh0bXg6YmVmb3JlUmVxdWVzdFwiLEkpKXtVKG8pO2QoKTtyZXR1cm4gc312YXIgTT1FdChuKTtCKFtcImxvYWRzdGFydFwiLFwibG9hZGVuZFwiLFwicHJvZ3Jlc3NcIixcImFib3J0XCJdLGZ1bmN0aW9uKHQpe0IoW20sbS51cGxvYWRdLGZ1bmN0aW9uKGUpe2UuYWRkRXZlbnRMaXN0ZW5lcih0LGZ1bmN0aW9uKGUpe2Z0KG4sXCJodG14OnhocjpcIit0LHtsZW5ndGhDb21wdXRhYmxlOmUubGVuZ3RoQ29tcHV0YWJsZSxsb2FkZWQ6ZS5sb2FkZWQsdG90YWw6ZS50b3RhbH0pfSl9KX0pO2Z0KG4sXCJodG14OmJlZm9yZVNlbmRcIixJKTttLnNlbmQoZT09PVwiZ2V0XCI/bnVsbDpGdChtLG4sQykpO3JldHVybiBzfWZ1bmN0aW9uIEt0KGEscyl7dmFyIHU9cy54aHI7dmFyIGw9cy50YXJnZXQ7aWYoIWZ0KGEsXCJodG14OmJlZm9yZU9uTG9hZFwiLHMpKXJldHVybjtpZigkdCh1LC9IWC1UcmlnZ2VyOi9pKSl7ZGUodSxcIkhYLVRyaWdnZXJcIixhKX1pZigkdCh1LC9IWC1QdXNoOi9pKSl7dmFyIGY9dS5nZXRSZXNwb25zZUhlYWRlcihcIkhYLVB1c2hcIil9aWYoJHQodSwvSFgtUmVkaXJlY3Q6L2kpKXt3aW5kb3cubG9jYXRpb24uaHJlZj11LmdldFJlc3BvbnNlSGVhZGVyKFwiSFgtUmVkaXJlY3RcIik7cmV0dXJufWlmKCR0KHUsL0hYLVJlZnJlc2g6L2kpKXtpZihcInRydWVcIj09PXUuZ2V0UmVzcG9uc2VIZWFkZXIoXCJIWC1SZWZyZXNoXCIpKXtsb2NhdGlvbi5yZWxvYWQoKTtyZXR1cm59fXZhciBjPXd0KGEpfHxmO2lmKHUuc3RhdHVzPj0yMDAmJnUuc3RhdHVzPDQwMCl7aWYodS5zdGF0dXM9PT0yODYpe1JlKGEpfWlmKHUuc3RhdHVzIT09MjA0KXtpZighZnQobCxcImh0bXg6YmVmb3JlU3dhcFwiLHMpKXJldHVybjt2YXIgaD11LnJlc3BvbnNlO3V0KGEsZnVuY3Rpb24oZSl7aD1lLnRyYW5zZm9ybVJlc3BvbnNlKGgsdSxhKX0pO2lmKGMpe3B0KCl9dmFyIGQ9RHQoYSk7bC5jbGFzc0xpc3QuYWRkKEQuY29uZmlnLnN3YXBwaW5nQ2xhc3MpO3ZhciBlPWZ1bmN0aW9uKCl7dHJ5e3ZhciBlPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7dmFyIHQ9e307dHJ5e3Q9e2VsdDplLHN0YXJ0OmU/ZS5zZWxlY3Rpb25TdGFydDpudWxsLGVuZDplP2Uuc2VsZWN0aW9uRW5kOm51bGx9fWNhdGNoKGUpe312YXIgcj1YdChsKTtoZShkLnN3YXBTdHlsZSxsLGEsaCxyKTtpZih0LmVsdCYmIXoodC5lbHQpJiZ0LmVsdC5pZCl7dmFyIG49ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodC5lbHQuaWQpO2lmKG4pe2lmKHQuc3RhcnQmJm4uc2V0U2VsZWN0aW9uUmFuZ2Upe24uc2V0U2VsZWN0aW9uUmFuZ2UodC5zdGFydCx0LmVuZCl9bi5mb2N1cygpfX1sLmNsYXNzTGlzdC5yZW1vdmUoRC5jb25maWcuc3dhcHBpbmdDbGFzcyk7QihyLmVsdHMsZnVuY3Rpb24oZSl7aWYoZS5jbGFzc0xpc3Qpe2UuY2xhc3NMaXN0LmFkZChELmNvbmZpZy5zZXR0bGluZ0NsYXNzKX1mdChlLFwiaHRteDphZnRlclN3YXBcIixzKX0pO2lmKHMucGF0aEluZm8uYW5jaG9yKXtsb2NhdGlvbi5oYXNoPXMucGF0aEluZm8uYW5jaG9yfWlmKCR0KHUsL0hYLVRyaWdnZXItQWZ0ZXItU3dhcDovaSkpe3ZhciBpPWE7aWYoIXooYSkpe2k9WCgpLmJvZHl9ZGUodSxcIkhYLVRyaWdnZXItQWZ0ZXItU3dhcFwiLGkpfXZhciBvPWZ1bmN0aW9uKCl7QihyLnRhc2tzLGZ1bmN0aW9uKGUpe2UuY2FsbCgpfSk7QihyLmVsdHMsZnVuY3Rpb24oZSl7aWYoZS5jbGFzc0xpc3Qpe2UuY2xhc3NMaXN0LnJlbW92ZShELmNvbmZpZy5zZXR0bGluZ0NsYXNzKX1mdChlLFwiaHRteDphZnRlclNldHRsZVwiLHMpfSk7aWYoYyl7dmFyIGU9Znx8U3QoYSl8fFd0KHUpfHxzLnBhdGhJbmZvLmZpbmFsUGF0aHx8cy5wYXRoSW5mby5wYXRoO210KGUpO2Z0KFgoKS5ib2R5LFwiaHRteDpwdXNoZWRJbnRvSGlzdG9yeVwiLHtwYXRoOmV9KX1QdChyLmVsdHMsZCk7aWYoJHQodSwvSFgtVHJpZ2dlci1BZnRlci1TZXR0bGU6L2kpKXt2YXIgdD1hO2lmKCF6KGEpKXt0PVgoKS5ib2R5fWRlKHUsXCJIWC1UcmlnZ2VyLUFmdGVyLVNldHRsZVwiLHQpfX07aWYoZC5zZXR0bGVEZWxheT4wKXtzZXRUaW1lb3V0KG8sZC5zZXR0bGVEZWxheSl9ZWxzZXtvKCl9fWNhdGNoKGUpe2F0KGEsXCJodG14OnN3YXBFcnJvclwiLHMpO3Rocm93IGV9fTtpZihkLnN3YXBEZWxheT4wKXtzZXRUaW1lb3V0KGUsZC5zd2FwRGVsYXkpfWVsc2V7ZSgpfX19ZWxzZXthdChhLFwiaHRteDpyZXNwb25zZUVycm9yXCIsVih7ZXJyb3I6XCJSZXNwb25zZSBTdGF0dXMgRXJyb3IgQ29kZSBcIit1LnN0YXR1cytcIiBmcm9tIFwiK3MucGF0aEluZm8ucGF0aH0scykpfX12YXIgWXQ9e307ZnVuY3Rpb24gUXQoKXtyZXR1cm57b25FdmVudDpmdW5jdGlvbihlLHQpe3JldHVybiB0cnVlfSx0cmFuc2Zvcm1SZXNwb25zZTpmdW5jdGlvbihlLHQscil7cmV0dXJuIGV9LGlzSW5saW5lU3dhcDpmdW5jdGlvbihlKXtyZXR1cm4gZmFsc2V9LGhhbmRsZVN3YXA6ZnVuY3Rpb24oZSx0LHIsbil7cmV0dXJuIGZhbHNlfSxlbmNvZGVQYXJhbWV0ZXJzOmZ1bmN0aW9uKGUsdCxyKXtyZXR1cm4gbnVsbH19fWZ1bmN0aW9uIGVyKGUsdCl7WXRbZV09VihRdCgpLHQpfWZ1bmN0aW9uIHRyKGUpe2RlbGV0ZSBZdFtlXX1mdW5jdGlvbiBycihlLHIsbil7aWYoZT09dW5kZWZpbmVkKXtyZXR1cm4gcn1pZihyPT11bmRlZmluZWQpe3I9W119aWYobj09dW5kZWZpbmVkKXtuPVtdfXZhciB0PUYoZSxcImh4LWV4dFwiKTtpZih0KXtCKHQuc3BsaXQoXCIsXCIpLGZ1bmN0aW9uKGUpe2U9ZS5yZXBsYWNlKC8gL2csXCJcIik7aWYoZS5zbGljZSgwLDcpPT1cImlnbm9yZTpcIil7bi5wdXNoKGUuc2xpY2UoNykpO3JldHVybn1pZihuLmluZGV4T2YoZSk8MCl7dmFyIHQ9WXRbZV07aWYodCYmci5pbmRleE9mKHQpPDApe3IucHVzaCh0KX19fSl9cmV0dXJuIHJyKGwoZSkscixuKX1mdW5jdGlvbiBucihlKXtpZihYKCkucmVhZHlTdGF0ZSE9PVwibG9hZGluZ1wiKXtlKCl9ZWxzZXtYKCkuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixlKX19ZnVuY3Rpb24gaXIoKXtpZihELmNvbmZpZy5pbmNsdWRlSW5kaWNhdG9yU3R5bGVzIT09ZmFsc2Upe1goKS5oZWFkLmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLFwiPHN0eWxlPiAgICAgICAgICAgICAgICAgICAgICAuXCIrRC5jb25maWcuaW5kaWNhdG9yQ2xhc3MrXCJ7b3BhY2l0eTowO3RyYW5zaXRpb246IG9wYWNpdHkgMjAwbXMgZWFzZS1pbjt9ICAgICAgICAgICAgICAgICAgICAgIC5cIitELmNvbmZpZy5yZXF1ZXN0Q2xhc3MrXCIgLlwiK0QuY29uZmlnLmluZGljYXRvckNsYXNzK1wie29wYWNpdHk6MX0gICAgICAgICAgICAgICAgICAgICAgLlwiK0QuY29uZmlnLnJlcXVlc3RDbGFzcytcIi5cIitELmNvbmZpZy5pbmRpY2F0b3JDbGFzcytcIntvcGFjaXR5OjF9ICAgICAgICAgICAgICAgICAgICA8L3N0eWxlPlwiKX19ZnVuY3Rpb24gb3IoKXt2YXIgZT1YKCkucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPVwiaHRteC1jb25maWdcIl0nKTtpZihlKXtyZXR1cm4geChlLmNvbnRlbnQpfWVsc2V7cmV0dXJuIG51bGx9fWZ1bmN0aW9uIGFyKCl7dmFyIGU9b3IoKTtpZihlKXtELmNvbmZpZz1WKEQuY29uZmlnLGUpfX1ucihmdW5jdGlvbigpe2FyKCk7aXIoKTt2YXIgZT1YKCkuYm9keTtudChlKTt3aW5kb3cub25wb3BzdGF0ZT1mdW5jdGlvbihlKXtpZihlLnN0YXRlJiZlLnN0YXRlLmh0bXgpe2J0KCl9fTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZnQoZSxcImh0bXg6bG9hZFwiLHt9KX0sMCl9KTtyZXR1cm4gRH0oKX0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/htmx.org/dist/htmx.min.js\n");

/***/ }),

/***/ "./assets/css/app.scss":
/*!*****************************!*\
  !*** ./assets/css/app.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvY3NzL2FwcC5zY3NzPzAwNTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBIiwiZmlsZSI6Ii4vYXNzZXRzL2Nzcy9hcHAuc2Nzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/css/app.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					result = fn();
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			for(moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) var result = runtime(__webpack_require__);
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./assets/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app"], () => (__webpack_require__("./assets/css/app.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;